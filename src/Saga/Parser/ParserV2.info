-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ./src/Saga/Parser/ParserV2.y
-----------------------------------------------------------------------------


rule 39 is unused
rule 40 is unused
rule 62 is unused
rule 63 is unused
rule 66 is unused
rule 67 is unused

terminal '-' is unused
terminal '*' is unused
terminal '/' is unused
terminal '^' is unused
terminal '++' is unused
terminal '==' is unused
terminal '!=' is unused
terminal '<' is unused
terminal '<=' is unused
terminal '>' is unused
terminal '>=' is unused
terminal '||' is unused
terminal '&&' is unused
terminal '|>' is unused
terminal '<|' is unused
terminal '#' is unused
terminal op is unused
terminal let is unused
terminal in is unused
terminal where is unused
terminal with is unused
terminal data is unused
terminal ty is unused
terminal alias is unused
terminal kind is unused
terminal forall is unused
terminal exists is unused
terminal proof is unused
terminal infer is unused
terminal protocol is unused
terminal interface is unused
terminal instance is unused
terminal implements is unused
terminal module is unused
terminal import is unused
terminal '=>' is unused
terminal '|->' is unused
terminal '=' is unused
terminal '::' is unused
terminal newline is unused
terminal eof is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseSagaExpr -> expr                       (0)
	identifier -> id                                   (1)
	hole -> HOLE                                       (2)
	expr -> expr1                                      (3)
	expr1 -> expr2                                     (4)
	expr1 -> expr1 '+' expr2                           (5)
	expr2 -> expr3                                     (6)
	expr2 -> expr2 '`' exprBacktick '`' expr3          (7)
	exprBacktick -> expr3                              (8)
	exprBacktick -> exprBacktick '+' expr3             (9)
	expr3 -> expr4                                     (10)
	expr3 -> expr3 expr4                               (11)
	expr3 -> expr3 '!'                                 (12)
	expr4 -> expr5                                     (13)
	expr4 -> expr4 '.' identifier                      (14)
	expr5 -> expr6                                     (15)
	expr5 -> if expr then expr else expr               (16)
	expr5 -> match expr cases                          (17)
	expr5 -> '\\' manyOrEmpty__identifier__ '->' expr   (18)
	expr5 -> '.' identifier                            (19)
	expr6 -> exprAtom                                  (20)
	expr6 -> '{' block '}'                             (21)
	block -> separated__statement__';'__ trailing__';'__   (22)
	statement -> identifier '<-' expr                  (23)
	statement -> expr                                  (24)
	statement -> return expr                           (25)
	exprAtom -> hole                                   (26)
	exprAtom -> identifier                             (27)
	exprAtom -> term                                   (28)
	exprAtom -> tuple                                  (29)
	exprAtom -> list                                   (30)
	exprAtom -> record                                 (31)
	exprAtom -> '(' expr ')'                           (32)
	term -> number                                     (33)
	term -> string                                     (34)
	term -> boolean                                    (35)
	record -> '{' pairs '}'                            (36)
	pairs ->                                           (37)
	pairs -> identifier ':' expr ';' pairs             (38)
	pairs -> identifier ':' expr ';'                   (39)
	keyValPair -> identifier ':' expr                  (40)
	list -> '[' separatedOrEmpty__expr__','__ ']'      (41)
	tuple -> '(' separated__expr__','__ ')'            (42)
	patListElems -> identifier                         (43)
	patListElems -> identifier ',' patListElems        (44)
	patTupleElems -> ',' identifier                    (45)
	patTupleElems -> ',' identifier patTupleElems      (46)
	patRecordKeys ->                                   (47)
	patRecordKeys -> identifier                        (48)
	patRecordKeys -> identifier ',' patRecordKeys      (49)
	patRest ->                                         (50)
	patRest -> '|' identifier                          (51)
	patData -> identifier ':'                          (52)
	patData -> patData identifier                      (53)
	pattern -> identifier                              (54)
	pattern -> term                                    (55)
	pattern -> patData                                 (56)
	pattern -> '(' identifier patTupleElems ')'        (57)
	pattern -> '[' ']'                                 (58)
	pattern -> '[' patListElems patRest ']'            (59)
	pattern -> '{' patRecordKeys patRest '}'           (60)
	pattern -> '(' pattern ')'                         (61)
	patterns -> pattern ','                            (62)
	patterns -> patterns pattern                       (63)
	cases -> '|' pattern '->' expr                     (64)
	cases -> cases '|' pattern '->' expr               (65)
	defaultSeparator -> ','                            (66)
	defaultSeparator -> ';'                            (67)
	manyOrEmpty__identifier__ ->                       (68)
	manyOrEmpty__identifier__ -> many__identifier__    (69)
	separated__expr__','__ -> expr                     (70)
	separated__expr__','__ -> separated__expr__','__ ',' expr   (71)
	separated__statement__';'__ -> statement           (72)
	separated__statement__';'__ -> separated__statement__';'__ ';' statement   (73)
	separatedOrEmpty__expr__','__ ->                   (74)
	separatedOrEmpty__expr__','__ -> separated__expr__','__   (75)
	trailing__';'__ ->                                 (76)
	trailing__';'__ -> ';'                             (77)
	many__identifier__ -> identifier                   (78)
	many__identifier__ -> many__identifier__ identifier   (79)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { L.RangedToken (T.Id _) _ }
	HOLE           { L.RangedToken (T.Hole _) _ }
	number         { L.RangedToken (T.Number _) _ }
	string         { L.RangedToken (T.String _) _ }
	boolean        { L.RangedToken (T.Boolean _) _ }
	'!'            { L.RangedToken (T.Operator "!") _ }
	'+'            { L.RangedToken (T.Operator "+") _ }
	'-'            { L.RangedToken (T.Operator "-") _ }
	'*'            { L.RangedToken (T.Operator "*") _ }
	'/'            { L.RangedToken (T.Operator "/") _ }
	'^'            { L.RangedToken (T.Operator "^") _ }
	'++'           { L.RangedToken (T.Operator "++") _ }
	'=='           { L.RangedToken (T.Operator "==") _ }
	'!='           { L.RangedToken (T.Operator "!=") _ }
	'<'            { L.RangedToken (T.Operator "<") _ }
	'<='           { L.RangedToken (T.Operator "<=") _ }
	'>'            { L.RangedToken (T.Operator ">") _ }
	'>='           { L.RangedToken (T.Operator ">=") _ }
	'||'           { L.RangedToken (T.Operator "||") _ }
	'&&'           { L.RangedToken (T.Operator "&&") _ }
	'|>'           { L.RangedToken (T.Operator "|>") _ }
	'<|'           { L.RangedToken (T.Operator "<|") _ }
	'`'            { L.RangedToken (T.Operator "<|") _ }
	'#'            { L.RangedToken (T.Operator "#") _ }
	op             { L.RangedToken (T.Operator _) _ }
	let            { L.RangedToken T.Let _ }
	in             { L.RangedToken T.In _ }
	where          { L.RangedToken T.Where _ }
	with           { L.RangedToken T.With _ }
	if             { L.RangedToken T.If _ }
	then           { L.RangedToken T.Then _ }
	else           { L.RangedToken T.Else _ }
	match          { L.RangedToken T.Match _ }
	return         { L.RangedToken T.Return _ }
	data           { L.RangedToken T.Data _ }
	ty             { L.RangedToken T.Type _ }
	alias          { L.RangedToken T.Alias _ }
	kind           { L.RangedToken T.Kind _ }
	forall         { L.RangedToken T.Forall _ }
	exists         { L.RangedToken T.Exists _ }
	proof          { L.RangedToken T.Proof _ }
	infer          { L.RangedToken T.Infer _ }
	protocol       { L.RangedToken T.Protocol _ }
	interface      { L.RangedToken T.Interface _ }
	instance       { L.RangedToken T.Instance _ }
	implements     { L.RangedToken T.Implements _ }
	module         { L.RangedToken T.Module _ }
	import         { L.RangedToken T.Import _ }
	'('            { L.RangedToken T.LParen _ }
	')'            { L.RangedToken T.RParen _ }
	'['            { L.RangedToken T.LBrack _ }
	']'            { L.RangedToken T.RBrack _ }
	'{'            { L.RangedToken T.LCurly _ }
	'}'            { L.RangedToken T.RCurly _ }
	':'            { L.RangedToken T.Colon _ }
	';'            { L.RangedToken T.SemiColon _ }
	','            { L.RangedToken T.Comma _ }
	'->'           { L.RangedToken T.Arrow _ }
	'<-'           { L.RangedToken T.BackArrow _ }
	'=>'           { L.RangedToken T.FatArrow _ }
	'|->'          { L.RangedToken T.PipeArrow _ }
	'='            { L.RangedToken T.Equals _ }
	'|'            { L.RangedToken T.Pipe _ }
	'.'            { L.RangedToken T.Dot _ }
	'::'           { L.RangedToken T.Section _ }
	'\\'           { L.RangedToken T.BackSlash _ }
	newline        { L.RangedToken T.Newline _ }
	eof            { L.RangedToken T.EOF _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseSagaExpr rule  0
	identifier      rule  1
	hole            rule  2
	expr            rule  3
	expr1           rules 4, 5
	expr2           rules 6, 7
	exprBacktick    rules 8, 9
	expr3           rules 10, 11, 12
	expr4           rules 13, 14
	expr5           rules 15, 16, 17, 18, 19
	expr6           rules 20, 21
	block           rule  22
	statement       rules 23, 24, 25
	exprAtom        rules 26, 27, 28, 29, 30, 31, 32
	term            rules 33, 34, 35
	record          rule  36
	pairs           rules 37, 38, 39
	keyValPair      rule  40
	list            rule  41
	tuple           rule  42
	patListElems    rules 43, 44
	patTupleElems   rules 45, 46
	patRecordKeys   rules 47, 48, 49
	patRest         rules 50, 51
	patData         rules 52, 53
	pattern         rules 54, 55, 56, 57, 58, 59, 60, 61
	patterns        rules 62, 63
	cases           rules 64, 65
	defaultSeparator rules 66, 67
	manyOrEmpty__identifier__ rules 68, 69
	separated__expr__','__ rules 70, 71
	separated__statement__';'__ rules 72, 73
	separatedOrEmpty__expr__','__ rules 74, 75
	trailing__';'__ rules 76, 77
	many__identifier__ rules 78, 79

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseSagaExpr -> . expr                      (rule 0)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 5
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 1

	identifier -> . id                                  (rule 1)

	id             shift, and enter state 2


State 2

	identifier -> id .                                  (rule 1)

	id             reduce using rule 1
	HOLE           reduce using rule 1
	number         reduce using rule 1
	string         reduce using rule 1
	boolean        reduce using rule 1
	'!'            reduce using rule 1
	'+'            reduce using rule 1
	'`'            reduce using rule 1
	if             reduce using rule 1
	then           reduce using rule 1
	else           reduce using rule 1
	match          reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'{'            reduce using rule 1
	'}'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	','            reduce using rule 1
	'->'           reduce using rule 1
	'<-'           reduce using rule 1
	'|'            reduce using rule 1
	'.'            reduce using rule 1
	'\\'           reduce using rule 1
	%eof           reduce using rule 1


State 3

	exprAtom -> identifier .                            (rule 27)

	id             reduce using rule 27
	HOLE           reduce using rule 27
	number         reduce using rule 27
	string         reduce using rule 27
	boolean        reduce using rule 27
	'!'            reduce using rule 27
	'+'            reduce using rule 27
	'`'            reduce using rule 27
	if             reduce using rule 27
	then           reduce using rule 27
	else           reduce using rule 27
	match          reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	'['            reduce using rule 27
	']'            reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	';'            reduce using rule 27
	','            reduce using rule 27
	'|'            reduce using rule 27
	'.'            reduce using rule 27
	'\\'           reduce using rule 27
	%eof           reduce using rule 27


State 4

	exprAtom -> hole .                                  (rule 26)

	id             reduce using rule 26
	HOLE           reduce using rule 26
	number         reduce using rule 26
	string         reduce using rule 26
	boolean        reduce using rule 26
	'!'            reduce using rule 26
	'+'            reduce using rule 26
	'`'            reduce using rule 26
	if             reduce using rule 26
	then           reduce using rule 26
	else           reduce using rule 26
	match          reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	'['            reduce using rule 26
	']'            reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	';'            reduce using rule 26
	','            reduce using rule 26
	'|'            reduce using rule 26
	'.'            reduce using rule 26
	'\\'           reduce using rule 26
	%eof           reduce using rule 26


State 5

	%start_parseSagaExpr -> expr .                      (rule 0)

	%eof           accept


State 6

	expr -> expr1 .                                     (rule 3)
	expr1 -> expr1 . '+' expr2                          (rule 5)

	id             reduce using rule 3
	HOLE           reduce using rule 3
	number         reduce using rule 3
	string         reduce using rule 3
	boolean        reduce using rule 3
	'!'            reduce using rule 3
	'+'            shift, and enter state 50
	'`'            reduce using rule 3
	if             reduce using rule 3
	then           reduce using rule 3
	else           reduce using rule 3
	match          reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'{'            reduce using rule 3
	'}'            reduce using rule 3
	';'            reduce using rule 3
	','            reduce using rule 3
	'|'            reduce using rule 3
	'.'            reduce using rule 3
	'\\'           reduce using rule 3
	%eof           reduce using rule 3


State 7

	expr1 -> expr2 .                                    (rule 4)
	expr2 -> expr2 . '`' exprBacktick '`' expr3         (rule 7)

	id             reduce using rule 4
	HOLE           reduce using rule 4
	number         reduce using rule 4
	string         reduce using rule 4
	boolean        reduce using rule 4
	'!'            reduce using rule 4
	'+'            reduce using rule 4
	'`'            shift, and enter state 49
	if             reduce using rule 4
	then           reduce using rule 4
	else           reduce using rule 4
	match          reduce using rule 4
	'('            reduce using rule 4
	')'            reduce using rule 4
	'['            reduce using rule 4
	']'            reduce using rule 4
	'{'            reduce using rule 4
	'}'            reduce using rule 4
	';'            reduce using rule 4
	','            reduce using rule 4
	'|'            reduce using rule 4
	'.'            reduce using rule 4
	'\\'           reduce using rule 4
	%eof           reduce using rule 4


State 8

	expr2 -> expr3 .                                    (rule 6)
	expr3 -> expr3 . expr4                              (rule 11)
	expr3 -> expr3 . '!'                                (rule 12)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	'!'            shift, and enter state 48
	'+'            reduce using rule 6
	'`'            reduce using rule 6
	if             shift, and enter state 21
	then           reduce using rule 6
	else           reduce using rule 6
	match          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 6
	'['            shift, and enter state 24
	']'            reduce using rule 6
	'{'            shift, and enter state 25
	'}'            reduce using rule 6
	';'            reduce using rule 6
	','            reduce using rule 6
	'|'            reduce using rule 6
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27
	%eof           reduce using rule 6

	identifier     goto state 3
	hole           goto state 4
	expr4          goto state 47
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 9

	expr3 -> expr4 .                                    (rule 10)
	expr4 -> expr4 . '.' identifier                     (rule 14)

	id             reduce using rule 10
	HOLE           reduce using rule 10
	number         reduce using rule 10
	string         reduce using rule 10
	boolean        reduce using rule 10
	'!'            reduce using rule 10
	'+'            reduce using rule 10
	'`'            reduce using rule 10
	if             reduce using rule 10
	then           reduce using rule 10
	else           reduce using rule 10
	match          reduce using rule 10
	'('            reduce using rule 10
	')'            reduce using rule 10
	'['            reduce using rule 10
	']'            reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	';'            reduce using rule 10
	','            reduce using rule 10
	'|'            reduce using rule 10
	'.'            shift, and enter state 46
	'\\'           reduce using rule 10
	%eof           reduce using rule 10


State 10

	expr4 -> expr5 .                                    (rule 13)

	id             reduce using rule 13
	HOLE           reduce using rule 13
	number         reduce using rule 13
	string         reduce using rule 13
	boolean        reduce using rule 13
	'!'            reduce using rule 13
	'+'            reduce using rule 13
	'`'            reduce using rule 13
	if             reduce using rule 13
	then           reduce using rule 13
	else           reduce using rule 13
	match          reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'['            reduce using rule 13
	']'            reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	';'            reduce using rule 13
	','            reduce using rule 13
	'|'            reduce using rule 13
	'.'            reduce using rule 13
	'\\'           reduce using rule 13
	%eof           reduce using rule 13


State 11

	expr5 -> expr6 .                                    (rule 15)

	id             reduce using rule 15
	HOLE           reduce using rule 15
	number         reduce using rule 15
	string         reduce using rule 15
	boolean        reduce using rule 15
	'!'            reduce using rule 15
	'+'            reduce using rule 15
	'`'            reduce using rule 15
	if             reduce using rule 15
	then           reduce using rule 15
	else           reduce using rule 15
	match          reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	'['            reduce using rule 15
	']'            reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	';'            reduce using rule 15
	','            reduce using rule 15
	'|'            reduce using rule 15
	'.'            reduce using rule 15
	'\\'           reduce using rule 15
	%eof           reduce using rule 15


State 12

	expr6 -> exprAtom .                                 (rule 20)

	id             reduce using rule 20
	HOLE           reduce using rule 20
	number         reduce using rule 20
	string         reduce using rule 20
	boolean        reduce using rule 20
	'!'            reduce using rule 20
	'+'            reduce using rule 20
	'`'            reduce using rule 20
	if             reduce using rule 20
	then           reduce using rule 20
	else           reduce using rule 20
	match          reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	'['            reduce using rule 20
	']'            reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	';'            reduce using rule 20
	','            reduce using rule 20
	'|'            reduce using rule 20
	'.'            reduce using rule 20
	'\\'           reduce using rule 20
	%eof           reduce using rule 20


State 13

	exprAtom -> term .                                  (rule 28)

	id             reduce using rule 28
	HOLE           reduce using rule 28
	number         reduce using rule 28
	string         reduce using rule 28
	boolean        reduce using rule 28
	'!'            reduce using rule 28
	'+'            reduce using rule 28
	'`'            reduce using rule 28
	if             reduce using rule 28
	then           reduce using rule 28
	else           reduce using rule 28
	match          reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	';'            reduce using rule 28
	','            reduce using rule 28
	'|'            reduce using rule 28
	'.'            reduce using rule 28
	'\\'           reduce using rule 28
	%eof           reduce using rule 28


State 14

	exprAtom -> record .                                (rule 31)

	id             reduce using rule 31
	HOLE           reduce using rule 31
	number         reduce using rule 31
	string         reduce using rule 31
	boolean        reduce using rule 31
	'!'            reduce using rule 31
	'+'            reduce using rule 31
	'`'            reduce using rule 31
	if             reduce using rule 31
	then           reduce using rule 31
	else           reduce using rule 31
	match          reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	';'            reduce using rule 31
	','            reduce using rule 31
	'|'            reduce using rule 31
	'.'            reduce using rule 31
	'\\'           reduce using rule 31
	%eof           reduce using rule 31


State 15

	exprAtom -> list .                                  (rule 30)

	id             reduce using rule 30
	HOLE           reduce using rule 30
	number         reduce using rule 30
	string         reduce using rule 30
	boolean        reduce using rule 30
	'!'            reduce using rule 30
	'+'            reduce using rule 30
	'`'            reduce using rule 30
	if             reduce using rule 30
	then           reduce using rule 30
	else           reduce using rule 30
	match          reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	';'            reduce using rule 30
	','            reduce using rule 30
	'|'            reduce using rule 30
	'.'            reduce using rule 30
	'\\'           reduce using rule 30
	%eof           reduce using rule 30


State 16

	exprAtom -> tuple .                                 (rule 29)

	id             reduce using rule 29
	HOLE           reduce using rule 29
	number         reduce using rule 29
	string         reduce using rule 29
	boolean        reduce using rule 29
	'!'            reduce using rule 29
	'+'            reduce using rule 29
	'`'            reduce using rule 29
	if             reduce using rule 29
	then           reduce using rule 29
	else           reduce using rule 29
	match          reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	';'            reduce using rule 29
	','            reduce using rule 29
	'|'            reduce using rule 29
	'.'            reduce using rule 29
	'\\'           reduce using rule 29
	%eof           reduce using rule 29


State 17

	hole -> HOLE .                                      (rule 2)

	id             reduce using rule 2
	HOLE           reduce using rule 2
	number         reduce using rule 2
	string         reduce using rule 2
	boolean        reduce using rule 2
	'!'            reduce using rule 2
	'+'            reduce using rule 2
	'`'            reduce using rule 2
	if             reduce using rule 2
	then           reduce using rule 2
	else           reduce using rule 2
	match          reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'{'            reduce using rule 2
	'}'            reduce using rule 2
	';'            reduce using rule 2
	','            reduce using rule 2
	'|'            reduce using rule 2
	'.'            reduce using rule 2
	'\\'           reduce using rule 2
	%eof           reduce using rule 2


State 18

	term -> number .                                    (rule 33)

	id             reduce using rule 33
	HOLE           reduce using rule 33
	number         reduce using rule 33
	string         reduce using rule 33
	boolean        reduce using rule 33
	'!'            reduce using rule 33
	'+'            reduce using rule 33
	'`'            reduce using rule 33
	if             reduce using rule 33
	then           reduce using rule 33
	else           reduce using rule 33
	match          reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	';'            reduce using rule 33
	','            reduce using rule 33
	'->'           reduce using rule 33
	'|'            reduce using rule 33
	'.'            reduce using rule 33
	'\\'           reduce using rule 33
	%eof           reduce using rule 33


State 19

	term -> string .                                    (rule 34)

	id             reduce using rule 34
	HOLE           reduce using rule 34
	number         reduce using rule 34
	string         reduce using rule 34
	boolean        reduce using rule 34
	'!'            reduce using rule 34
	'+'            reduce using rule 34
	'`'            reduce using rule 34
	if             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	match          reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	';'            reduce using rule 34
	','            reduce using rule 34
	'->'           reduce using rule 34
	'|'            reduce using rule 34
	'.'            reduce using rule 34
	'\\'           reduce using rule 34
	%eof           reduce using rule 34


State 20

	term -> boolean .                                   (rule 35)

	id             reduce using rule 35
	HOLE           reduce using rule 35
	number         reduce using rule 35
	string         reduce using rule 35
	boolean        reduce using rule 35
	'!'            reduce using rule 35
	'+'            reduce using rule 35
	'`'            reduce using rule 35
	if             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	match          reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	';'            reduce using rule 35
	','            reduce using rule 35
	'->'           reduce using rule 35
	'|'            reduce using rule 35
	'.'            reduce using rule 35
	'\\'           reduce using rule 35
	%eof           reduce using rule 35


State 21

	expr5 -> if . expr then expr else expr              (rule 16)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 45
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 22

	expr5 -> match . expr cases                         (rule 17)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 44
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 23

	exprAtom -> '(' . expr ')'                          (rule 32)
	tuple -> '(' . separated__expr__','__ ')'           (rule 42)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 42
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16
	separated__expr__','__goto state 43

State 24

	list -> '[' . separatedOrEmpty__expr__','__ ']'     (rule 41)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	']'            reduce using rule 74
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 39
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16
	separated__expr__','__goto state 40
	separatedOrEmpty__expr__','__goto state 41

State 25

	expr6 -> '{' . block '}'                            (rule 21)
	record -> '{' . pairs '}'                           (rule 36)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	return         shift, and enter state 38
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'}'            reduce using rule 37
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 32
	hole           goto state 4
	expr           goto state 33
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	block          goto state 34
	statement      goto state 35
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	pairs          goto state 36
	list           goto state 15
	tuple          goto state 16
	separated__statement__';'__goto state 37

State 26

	expr5 -> '.' . identifier                           (rule 19)

	id             shift, and enter state 2

	identifier     goto state 31

State 27

	expr5 -> '\\' . manyOrEmpty__identifier__ '->' expr    (rule 18)

	id             shift, and enter state 2
	'->'           reduce using rule 68

	identifier     goto state 28
	manyOrEmpty__identifier__goto state 29
	many__identifier__goto state 30

State 28

	many__identifier__ -> identifier .                  (rule 78)

	id             reduce using rule 78
	'->'           reduce using rule 78


State 29

	expr5 -> '\\' manyOrEmpty__identifier__ . '->' expr    (rule 18)

	'->'           shift, and enter state 70


State 30

	manyOrEmpty__identifier__ -> many__identifier__ .    (rule 69)
	many__identifier__ -> many__identifier__ . identifier    (rule 79)

	id             shift, and enter state 2
	'->'           reduce using rule 69

	identifier     goto state 69

State 31

	expr5 -> '.' identifier .                           (rule 19)

	id             reduce using rule 19
	HOLE           reduce using rule 19
	number         reduce using rule 19
	string         reduce using rule 19
	boolean        reduce using rule 19
	'!'            reduce using rule 19
	'+'            reduce using rule 19
	'`'            reduce using rule 19
	if             reduce using rule 19
	then           reduce using rule 19
	else           reduce using rule 19
	match          reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'['            reduce using rule 19
	']'            reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	';'            reduce using rule 19
	','            reduce using rule 19
	'|'            reduce using rule 19
	'.'            reduce using rule 19
	'\\'           reduce using rule 19
	%eof           reduce using rule 19


State 32

	statement -> identifier . '<-' expr                 (rule 23)
	exprAtom -> identifier .                            (rule 27)
	pairs -> identifier . ':' expr ';' pairs            (rule 38)
	pairs -> identifier . ':' expr ';'                  (rule 39)

	id             reduce using rule 27
	HOLE           reduce using rule 27
	number         reduce using rule 27
	string         reduce using rule 27
	boolean        reduce using rule 27
	'!'            reduce using rule 27
	'+'            reduce using rule 27
	'`'            reduce using rule 27
	if             reduce using rule 27
	match          reduce using rule 27
	'('            reduce using rule 27
	'['            reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	':'            shift, and enter state 67
	';'            reduce using rule 27
	'<-'           shift, and enter state 68
	'.'            reduce using rule 27
	'\\'           reduce using rule 27


State 33

	statement -> expr .                                 (rule 24)

	'}'            reduce using rule 24
	';'            reduce using rule 24


State 34

	expr6 -> '{' block . '}'                            (rule 21)

	'}'            shift, and enter state 66


State 35

	separated__statement__';'__ -> statement .          (rule 72)

	'}'            reduce using rule 72
	';'            reduce using rule 72


State 36

	record -> '{' pairs . '}'                           (rule 36)

	'}'            shift, and enter state 65


State 37

	block -> separated__statement__';'__ . trailing__';'__    (rule 22)
	separated__statement__';'__ -> separated__statement__';'__ . ';' statement    (rule 73)

	'}'            reduce using rule 76
	';'            shift, and enter state 64

	trailing__';'__goto state 63

State 38

	statement -> return . expr                          (rule 25)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 62
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 39

	separated__expr__','__ -> expr .                    (rule 70)

	']'            reduce using rule 70
	','            reduce using rule 70


State 40

	separated__expr__','__ -> separated__expr__','__ . ',' expr    (rule 71)
	separatedOrEmpty__expr__','__ -> separated__expr__','__ .    (rule 75)

	']'            reduce using rule 75
	','            shift, and enter state 59


State 41

	list -> '[' separatedOrEmpty__expr__','__ . ']'     (rule 41)

	']'            shift, and enter state 61


State 42

	exprAtom -> '(' expr . ')'                          (rule 32)
	separated__expr__','__ -> expr .                    (rule 70)

	')'            shift, and enter state 60
	','            reduce using rule 70


State 43

	tuple -> '(' separated__expr__','__ . ')'           (rule 42)
	separated__expr__','__ -> separated__expr__','__ . ',' expr    (rule 71)

	')'            shift, and enter state 58
	','            shift, and enter state 59


State 44

	expr5 -> match expr . cases                         (rule 17)

	'|'            shift, and enter state 57

	cases          goto state 56

State 45

	expr5 -> if expr . then expr else expr              (rule 16)

	then           shift, and enter state 55


State 46

	expr4 -> expr4 '.' . identifier                     (rule 14)

	id             shift, and enter state 2

	identifier     goto state 54

State 47

	expr3 -> expr3 expr4 .                              (rule 11)
	expr4 -> expr4 . '.' identifier                     (rule 14)

	id             reduce using rule 11
	HOLE           reduce using rule 11
	number         reduce using rule 11
	string         reduce using rule 11
	boolean        reduce using rule 11
	'!'            reduce using rule 11
	'+'            reduce using rule 11
	'`'            reduce using rule 11
	if             reduce using rule 11
	then           reduce using rule 11
	else           reduce using rule 11
	match          reduce using rule 11
	'('            reduce using rule 11
	')'            reduce using rule 11
	'['            reduce using rule 11
	']'            reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	';'            reduce using rule 11
	','            reduce using rule 11
	'|'            reduce using rule 11
	'.'            shift, and enter state 46
	'\\'           reduce using rule 11
	%eof           reduce using rule 11


State 48

	expr3 -> expr3 '!' .                                (rule 12)

	id             reduce using rule 12
	HOLE           reduce using rule 12
	number         reduce using rule 12
	string         reduce using rule 12
	boolean        reduce using rule 12
	'!'            reduce using rule 12
	'+'            reduce using rule 12
	'`'            reduce using rule 12
	if             reduce using rule 12
	then           reduce using rule 12
	else           reduce using rule 12
	match          reduce using rule 12
	'('            reduce using rule 12
	')'            reduce using rule 12
	'['            reduce using rule 12
	']'            reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	';'            reduce using rule 12
	','            reduce using rule 12
	'|'            reduce using rule 12
	'.'            reduce using rule 12
	'\\'           reduce using rule 12
	%eof           reduce using rule 12


State 49

	expr2 -> expr2 '`' . exprBacktick '`' expr3         (rule 7)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	exprBacktick   goto state 52
	expr3          goto state 53
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 50

	expr1 -> expr1 '+' . expr2                          (rule 5)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr2          goto state 51
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 51

	expr1 -> expr1 '+' expr2 .                          (rule 5)
	expr2 -> expr2 . '`' exprBacktick '`' expr3         (rule 7)

	id             reduce using rule 5
	HOLE           reduce using rule 5
	number         reduce using rule 5
	string         reduce using rule 5
	boolean        reduce using rule 5
	'!'            reduce using rule 5
	'+'            reduce using rule 5
	'`'            shift, and enter state 49
	if             reduce using rule 5
	then           reduce using rule 5
	else           reduce using rule 5
	match          reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	'['            reduce using rule 5
	']'            reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	';'            reduce using rule 5
	','            reduce using rule 5
	'|'            reduce using rule 5
	'.'            reduce using rule 5
	'\\'           reduce using rule 5
	%eof           reduce using rule 5


State 52

	expr2 -> expr2 '`' exprBacktick . '`' expr3         (rule 7)
	exprBacktick -> exprBacktick . '+' expr3            (rule 9)

	'+'            shift, and enter state 86
	'`'            shift, and enter state 87


State 53

	exprBacktick -> expr3 .                             (rule 8)
	expr3 -> expr3 . expr4                              (rule 11)
	expr3 -> expr3 . '!'                                (rule 12)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	'!'            shift, and enter state 48
	'+'            reduce using rule 8
	'`'            reduce using rule 8
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr4          goto state 47
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 54

	expr4 -> expr4 '.' identifier .                     (rule 14)

	id             reduce using rule 14
	HOLE           reduce using rule 14
	number         reduce using rule 14
	string         reduce using rule 14
	boolean        reduce using rule 14
	'!'            reduce using rule 14
	'+'            reduce using rule 14
	'`'            reduce using rule 14
	if             reduce using rule 14
	then           reduce using rule 14
	else           reduce using rule 14
	match          reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	'['            reduce using rule 14
	']'            reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	';'            reduce using rule 14
	','            reduce using rule 14
	'|'            reduce using rule 14
	'.'            reduce using rule 14
	'\\'           reduce using rule 14
	%eof           reduce using rule 14


State 55

	expr5 -> if expr then . expr else expr              (rule 16)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 85
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 56

	expr5 -> match expr cases .                         (rule 17)
	cases -> cases . '|' pattern '->' expr              (rule 65)

	id             reduce using rule 17
	HOLE           reduce using rule 17
	number         reduce using rule 17
	string         reduce using rule 17
	boolean        reduce using rule 17
	'!'            reduce using rule 17
	'+'            reduce using rule 17
	'`'            reduce using rule 17
	if             reduce using rule 17
	then           reduce using rule 17
	else           reduce using rule 17
	match          reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'['            reduce using rule 17
	']'            reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	';'            reduce using rule 17
	','            reduce using rule 17
	'|'            shift, and enter state 84
	'.'            reduce using rule 17
	'\\'           reduce using rule 17
	%eof           reduce using rule 17


State 57

	cases -> '|' . pattern '->' expr                    (rule 64)

	id             shift, and enter state 2
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	'('            shift, and enter state 81
	'['            shift, and enter state 82
	'{'            shift, and enter state 83

	identifier     goto state 77
	term           goto state 78
	patData        goto state 79
	pattern        goto state 80

State 58

	tuple -> '(' separated__expr__','__ ')' .           (rule 42)

	id             reduce using rule 42
	HOLE           reduce using rule 42
	number         reduce using rule 42
	string         reduce using rule 42
	boolean        reduce using rule 42
	'!'            reduce using rule 42
	'+'            reduce using rule 42
	'`'            reduce using rule 42
	if             reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	match          reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	';'            reduce using rule 42
	','            reduce using rule 42
	'|'            reduce using rule 42
	'.'            reduce using rule 42
	'\\'           reduce using rule 42
	%eof           reduce using rule 42


State 59

	separated__expr__','__ -> separated__expr__','__ ',' . expr    (rule 71)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 76
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 60

	exprAtom -> '(' expr ')' .                          (rule 32)

	id             reduce using rule 32
	HOLE           reduce using rule 32
	number         reduce using rule 32
	string         reduce using rule 32
	boolean        reduce using rule 32
	'!'            reduce using rule 32
	'+'            reduce using rule 32
	'`'            reduce using rule 32
	if             reduce using rule 32
	then           reduce using rule 32
	else           reduce using rule 32
	match          reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	';'            reduce using rule 32
	','            reduce using rule 32
	'|'            reduce using rule 32
	'.'            reduce using rule 32
	'\\'           reduce using rule 32
	%eof           reduce using rule 32


State 61

	list -> '[' separatedOrEmpty__expr__','__ ']' .     (rule 41)

	id             reduce using rule 41
	HOLE           reduce using rule 41
	number         reduce using rule 41
	string         reduce using rule 41
	boolean        reduce using rule 41
	'!'            reduce using rule 41
	'+'            reduce using rule 41
	'`'            reduce using rule 41
	if             reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	match          reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	';'            reduce using rule 41
	','            reduce using rule 41
	'|'            reduce using rule 41
	'.'            reduce using rule 41
	'\\'           reduce using rule 41
	%eof           reduce using rule 41


State 62

	statement -> return expr .                          (rule 25)

	'}'            reduce using rule 25
	';'            reduce using rule 25


State 63

	block -> separated__statement__';'__ trailing__';'__ .    (rule 22)

	'}'            reduce using rule 22


State 64

	separated__statement__';'__ -> separated__statement__';'__ ';' . statement    (rule 73)
	trailing__';'__ -> ';' .                            (rule 77)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	return         shift, and enter state 38
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'}'            reduce using rule 77
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 74
	hole           goto state 4
	expr           goto state 33
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	statement      goto state 75
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 65

	record -> '{' pairs '}' .                           (rule 36)

	id             reduce using rule 36
	HOLE           reduce using rule 36
	number         reduce using rule 36
	string         reduce using rule 36
	boolean        reduce using rule 36
	'!'            reduce using rule 36
	'+'            reduce using rule 36
	'`'            reduce using rule 36
	if             reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	match          reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	';'            reduce using rule 36
	','            reduce using rule 36
	'|'            reduce using rule 36
	'.'            reduce using rule 36
	'\\'           reduce using rule 36
	%eof           reduce using rule 36


State 66

	expr6 -> '{' block '}' .                            (rule 21)

	id             reduce using rule 21
	HOLE           reduce using rule 21
	number         reduce using rule 21
	string         reduce using rule 21
	boolean        reduce using rule 21
	'!'            reduce using rule 21
	'+'            reduce using rule 21
	'`'            reduce using rule 21
	if             reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	match          reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	';'            reduce using rule 21
	','            reduce using rule 21
	'|'            reduce using rule 21
	'.'            reduce using rule 21
	'\\'           reduce using rule 21
	%eof           reduce using rule 21


State 67

	pairs -> identifier ':' . expr ';' pairs            (rule 38)
	pairs -> identifier ':' . expr ';'                  (rule 39)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 73
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 68

	statement -> identifier '<-' . expr                 (rule 23)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 72
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 69

	many__identifier__ -> many__identifier__ identifier .    (rule 79)

	id             reduce using rule 79
	'->'           reduce using rule 79


State 70

	expr5 -> '\\' manyOrEmpty__identifier__ '->' . expr    (rule 18)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 71
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 71

	expr5 -> '\\' manyOrEmpty__identifier__ '->' expr .    (rule 18)

	id             reduce using rule 18
	HOLE           reduce using rule 18
	number         reduce using rule 18
	string         reduce using rule 18
	boolean        reduce using rule 18
	'!'            reduce using rule 18
	'+'            reduce using rule 18
	'`'            reduce using rule 18
	if             reduce using rule 18
	then           reduce using rule 18
	else           reduce using rule 18
	match          reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'['            reduce using rule 18
	']'            reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	';'            reduce using rule 18
	','            reduce using rule 18
	'|'            reduce using rule 18
	'.'            reduce using rule 18
	'\\'           reduce using rule 18
	%eof           reduce using rule 18


State 72

	statement -> identifier '<-' expr .                 (rule 23)

	'}'            reduce using rule 23
	';'            reduce using rule 23


State 73

	pairs -> identifier ':' expr . ';' pairs            (rule 38)
	pairs -> identifier ':' expr . ';'                  (rule 39)

	';'            shift, and enter state 102


State 74

	statement -> identifier . '<-' expr                 (rule 23)
	exprAtom -> identifier .                            (rule 27)

	id             reduce using rule 27
	HOLE           reduce using rule 27
	number         reduce using rule 27
	string         reduce using rule 27
	boolean        reduce using rule 27
	'!'            reduce using rule 27
	'+'            reduce using rule 27
	'`'            reduce using rule 27
	if             reduce using rule 27
	match          reduce using rule 27
	'('            reduce using rule 27
	'['            reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	';'            reduce using rule 27
	'<-'           shift, and enter state 68
	'.'            reduce using rule 27
	'\\'           reduce using rule 27


State 75

	separated__statement__';'__ -> separated__statement__';'__ ';' statement .    (rule 73)

	'}'            reduce using rule 73
	';'            reduce using rule 73


State 76

	separated__expr__','__ -> separated__expr__','__ ',' expr .    (rule 71)

	')'            reduce using rule 71
	']'            reduce using rule 71
	','            reduce using rule 71


State 77

	patData -> identifier . ':'                         (rule 52)
	pattern -> identifier .                             (rule 54)

	':'            shift, and enter state 101
	'->'           reduce using rule 54


State 78

	pattern -> term .                                   (rule 55)

	')'            reduce using rule 55
	'->'           reduce using rule 55


State 79

	patData -> patData . identifier                     (rule 53)
	pattern -> patData .                                (rule 56)

	id             shift, and enter state 2
	')'            reduce using rule 56
	'->'           reduce using rule 56

	identifier     goto state 100

State 80

	cases -> '|' pattern . '->' expr                    (rule 64)

	'->'           shift, and enter state 99


State 81

	pattern -> '(' . identifier patTupleElems ')'       (rule 57)
	pattern -> '(' . pattern ')'                        (rule 61)

	id             shift, and enter state 2
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	'('            shift, and enter state 81
	'['            shift, and enter state 82
	'{'            shift, and enter state 83

	identifier     goto state 97
	term           goto state 78
	patData        goto state 79
	pattern        goto state 98

State 82

	pattern -> '[' . ']'                                (rule 58)
	pattern -> '[' . patListElems patRest ']'           (rule 59)

	id             shift, and enter state 2
	']'            shift, and enter state 96

	identifier     goto state 94
	patListElems   goto state 95

State 83

	pattern -> '{' . patRecordKeys patRest '}'          (rule 60)

	id             shift, and enter state 2
	'}'            reduce using rule 47
	'|'            reduce using rule 47

	identifier     goto state 92
	patRecordKeys  goto state 93

State 84

	cases -> cases '|' . pattern '->' expr              (rule 65)

	id             shift, and enter state 2
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	'('            shift, and enter state 81
	'['            shift, and enter state 82
	'{'            shift, and enter state 83

	identifier     goto state 77
	term           goto state 78
	patData        goto state 79
	pattern        goto state 91

State 85

	expr5 -> if expr then expr . else expr              (rule 16)

	else           shift, and enter state 90


State 86

	exprBacktick -> exprBacktick '+' . expr3            (rule 9)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr3          goto state 89
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 87

	expr2 -> expr2 '`' exprBacktick '`' . expr3         (rule 7)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr3          goto state 88
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 88

	expr2 -> expr2 '`' exprBacktick '`' expr3 .         (rule 7)
	expr3 -> expr3 . expr4                              (rule 11)
	expr3 -> expr3 . '!'                                (rule 12)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	'!'            shift, and enter state 48
	'+'            reduce using rule 7
	'`'            reduce using rule 7
	if             shift, and enter state 21
	then           reduce using rule 7
	else           reduce using rule 7
	match          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 7
	'['            shift, and enter state 24
	']'            reduce using rule 7
	'{'            shift, and enter state 25
	'}'            reduce using rule 7
	';'            reduce using rule 7
	','            reduce using rule 7
	'|'            reduce using rule 7
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27
	%eof           reduce using rule 7

	identifier     goto state 3
	hole           goto state 4
	expr4          goto state 47
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 89

	exprBacktick -> exprBacktick '+' expr3 .            (rule 9)
	expr3 -> expr3 . expr4                              (rule 11)
	expr3 -> expr3 . '!'                                (rule 12)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	'!'            shift, and enter state 48
	'+'            reduce using rule 9
	'`'            reduce using rule 9
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr4          goto state 47
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 90

	expr5 -> if expr then expr else . expr              (rule 16)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 115
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 91

	cases -> cases '|' pattern . '->' expr              (rule 65)

	'->'           shift, and enter state 114


State 92

	patRecordKeys -> identifier .                       (rule 48)
	patRecordKeys -> identifier . ',' patRecordKeys     (rule 49)

	'}'            reduce using rule 48
	','            shift, and enter state 113
	'|'            reduce using rule 48


State 93

	pattern -> '{' patRecordKeys . patRest '}'          (rule 60)

	'}'            reduce using rule 50
	'|'            shift, and enter state 110

	patRest        goto state 112

State 94

	patListElems -> identifier .                        (rule 43)
	patListElems -> identifier . ',' patListElems       (rule 44)

	']'            reduce using rule 43
	','            shift, and enter state 111
	'|'            reduce using rule 43


State 95

	pattern -> '[' patListElems . patRest ']'           (rule 59)

	']'            reduce using rule 50
	'|'            shift, and enter state 110

	patRest        goto state 109

State 96

	pattern -> '[' ']' .                                (rule 58)

	')'            reduce using rule 58
	'->'           reduce using rule 58


State 97

	patData -> identifier . ':'                         (rule 52)
	pattern -> identifier .                             (rule 54)
	pattern -> '(' identifier . patTupleElems ')'       (rule 57)

	')'            reduce using rule 54
	':'            shift, and enter state 101
	','            shift, and enter state 108

	patTupleElems  goto state 107

State 98

	pattern -> '(' pattern . ')'                        (rule 61)

	')'            shift, and enter state 106


State 99

	cases -> '|' pattern '->' . expr                    (rule 64)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 105
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 100

	patData -> patData identifier .                     (rule 53)

	id             reduce using rule 53
	')'            reduce using rule 53
	'->'           reduce using rule 53


State 101

	patData -> identifier ':' .                         (rule 52)

	id             reduce using rule 52
	')'            reduce using rule 52
	'->'           reduce using rule 52


State 102

	pairs -> identifier ':' expr ';' . pairs            (rule 38)
	pairs -> identifier ':' expr ';' .                  (rule 39)

	id             shift, and enter state 2
	'}'            reduce using rule 37

	identifier     goto state 103
	pairs          goto state 104

State 103

	pairs -> identifier . ':' expr ';' pairs            (rule 38)
	pairs -> identifier . ':' expr ';'                  (rule 39)

	':'            shift, and enter state 67


State 104

	pairs -> identifier ':' expr ';' pairs .            (rule 38)

	'}'            reduce using rule 38


State 105

	cases -> '|' pattern '->' expr .                    (rule 64)

	id             reduce using rule 64
	HOLE           reduce using rule 64
	number         reduce using rule 64
	string         reduce using rule 64
	boolean        reduce using rule 64
	'!'            reduce using rule 64
	'+'            reduce using rule 64
	'`'            reduce using rule 64
	if             reduce using rule 64
	then           reduce using rule 64
	else           reduce using rule 64
	match          reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	'{'            reduce using rule 64
	'}'            reduce using rule 64
	';'            reduce using rule 64
	','            reduce using rule 64
	'|'            reduce using rule 64
	'.'            reduce using rule 64
	'\\'           reduce using rule 64
	%eof           reduce using rule 64


State 106

	pattern -> '(' pattern ')' .                        (rule 61)

	')'            reduce using rule 61
	'->'           reduce using rule 61


State 107

	pattern -> '(' identifier patTupleElems . ')'       (rule 57)

	')'            shift, and enter state 123


State 108

	patTupleElems -> ',' . identifier                   (rule 45)
	patTupleElems -> ',' . identifier patTupleElems     (rule 46)

	id             shift, and enter state 2

	identifier     goto state 122

State 109

	pattern -> '[' patListElems patRest . ']'           (rule 59)

	']'            shift, and enter state 121


State 110

	patRest -> '|' . identifier                         (rule 51)

	id             shift, and enter state 2

	identifier     goto state 120

State 111

	patListElems -> identifier ',' . patListElems       (rule 44)

	id             shift, and enter state 2

	identifier     goto state 94
	patListElems   goto state 119

State 112

	pattern -> '{' patRecordKeys patRest . '}'          (rule 60)

	'}'            shift, and enter state 118


State 113

	patRecordKeys -> identifier ',' . patRecordKeys     (rule 49)

	id             shift, and enter state 2
	'}'            reduce using rule 47
	'|'            reduce using rule 47

	identifier     goto state 92
	patRecordKeys  goto state 117

State 114

	cases -> cases '|' pattern '->' . expr              (rule 65)

	id             shift, and enter state 2
	HOLE           shift, and enter state 17
	number         shift, and enter state 18
	string         shift, and enter state 19
	boolean        shift, and enter state 20
	if             shift, and enter state 21
	match          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'{'            shift, and enter state 25
	'.'            shift, and enter state 26
	'\\'           shift, and enter state 27

	identifier     goto state 3
	hole           goto state 4
	expr           goto state 116
	expr1          goto state 6
	expr2          goto state 7
	expr3          goto state 8
	expr4          goto state 9
	expr5          goto state 10
	expr6          goto state 11
	exprAtom       goto state 12
	term           goto state 13
	record         goto state 14
	list           goto state 15
	tuple          goto state 16

State 115

	expr5 -> if expr then expr else expr .              (rule 16)

	id             reduce using rule 16
	HOLE           reduce using rule 16
	number         reduce using rule 16
	string         reduce using rule 16
	boolean        reduce using rule 16
	'!'            reduce using rule 16
	'+'            reduce using rule 16
	'`'            reduce using rule 16
	if             reduce using rule 16
	then           reduce using rule 16
	else           reduce using rule 16
	match          reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	';'            reduce using rule 16
	','            reduce using rule 16
	'|'            reduce using rule 16
	'.'            reduce using rule 16
	'\\'           reduce using rule 16
	%eof           reduce using rule 16


State 116

	cases -> cases '|' pattern '->' expr .              (rule 65)

	id             reduce using rule 65
	HOLE           reduce using rule 65
	number         reduce using rule 65
	string         reduce using rule 65
	boolean        reduce using rule 65
	'!'            reduce using rule 65
	'+'            reduce using rule 65
	'`'            reduce using rule 65
	if             reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	match          reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	'{'            reduce using rule 65
	'}'            reduce using rule 65
	';'            reduce using rule 65
	','            reduce using rule 65
	'|'            reduce using rule 65
	'.'            reduce using rule 65
	'\\'           reduce using rule 65
	%eof           reduce using rule 65


State 117

	patRecordKeys -> identifier ',' patRecordKeys .     (rule 49)

	'}'            reduce using rule 49
	'|'            reduce using rule 49


State 118

	pattern -> '{' patRecordKeys patRest '}' .          (rule 60)

	')'            reduce using rule 60
	'->'           reduce using rule 60


State 119

	patListElems -> identifier ',' patListElems .       (rule 44)

	']'            reduce using rule 44
	'|'            reduce using rule 44


State 120

	patRest -> '|' identifier .                         (rule 51)

	']'            reduce using rule 51
	'}'            reduce using rule 51


State 121

	pattern -> '[' patListElems patRest ']' .           (rule 59)

	')'            reduce using rule 59
	'->'           reduce using rule 59


State 122

	patTupleElems -> ',' identifier .                   (rule 45)
	patTupleElems -> ',' identifier . patTupleElems     (rule 46)

	')'            reduce using rule 45
	','            shift, and enter state 108

	patTupleElems  goto state 124

State 123

	pattern -> '(' identifier patTupleElems ')' .       (rule 57)

	')'            reduce using rule 57
	'->'           reduce using rule 57


State 124

	patTupleElems -> ',' identifier patTupleElems .     (rule 46)

	')'            reduce using rule 46


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 80
Number of terminals: 68
Number of non-terminals: 35
Number of states: 125
