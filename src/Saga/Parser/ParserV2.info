-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ./src/Saga/Parser/ParserV2.y
-----------------------------------------------------------------------------

state 14 contains 11 shift/reduce conflicts.

rule 25 is unused
rule 26 is unused

terminal '-' is unused
terminal '*' is unused
terminal '/' is unused
terminal '^' is unused
terminal '++' is unused
terminal '==' is unused
terminal '!=' is unused
terminal '<' is unused
terminal '<=' is unused
terminal '>' is unused
terminal '>=' is unused
terminal '||' is unused
terminal '&&' is unused
terminal '|>' is unused
terminal '<|' is unused
terminal op is unused
terminal let is unused
terminal in is unused
terminal where is unused
terminal with is unused
terminal data is unused
terminal ty is unused
terminal alias is unused
terminal kind is unused
terminal forall is unused
terminal exists is unused
terminal proof is unused
terminal infer is unused
terminal protocol is unused
terminal interface is unused
terminal instance is unused
terminal implements is unused
terminal module is unused
terminal import is unused
terminal ';' is unused
terminal '=>' is unused
terminal '|->' is unused
terminal '=' is unused
terminal '::' is unused
terminal newline is unused
terminal eof is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseSagaExpr -> expr                       (0)
	identifier -> id                                   (1)
	hole -> HOLE                                       (2)
	patListElems -> identifier                         (3)
	patListElems -> identifier ',' patListElems        (4)
	patTupleElems -> ',' identifier                    (5)
	patTupleElems -> ',' identifier patTupleElems      (6)
	patRecordKeys ->                                   (7)
	patRecordKeys -> identifier                        (8)
	patRecordKeys -> identifier ',' patRecordKeys      (9)
	patRest ->                                         (10)
	patRest -> '|' identifier                          (11)
	patData -> identifier ':'                          (12)
	patData -> patData identifier                      (13)
	pattern -> identifier                              (14)
	pattern -> term                                    (15)
	pattern -> patData                                 (16)
	pattern -> '(' identifier patTupleElems ')'        (17)
	pattern -> '[' ']'                                 (18)
	pattern -> '[' patListElems patRest ']'            (19)
	pattern -> '{' patRecordKeys patRest '}'           (20)
	pattern -> '(' pattern ')'                         (21)
	cases -> '|' pattern '->' expr                     (22)
	cases -> cases '|' pattern '->' expr               (23)
	matchExpr -> match expr cases                      (24)
	patterns -> pattern ','                            (25)
	patterns -> patterns pattern                       (26)
	backcall -> identifier '<-' expr                   (27)
	statement -> backcall                              (28)
	stmts -> statement                                 (29)
	stmts -> stmts statement                           (30)
	returnStmt -> return expr                          (31)
	block -> returnStmt                                (32)
	block -> stmts returnStmt                          (33)
	expr -> expr1                                      (34)
	expr1 -> expr2                                     (35)
	expr1 -> expr1 '+' expr2                           (36)
	expr1 -> '.' identifier                            (37)
	expr2 -> expr3                                     (38)
	expr2 -> expr2 '`' exprBacktick '`' expr3          (39)
	exprBacktick -> expr3                              (40)
	exprBacktick -> exprBacktick '+' expr3             (41)
	expr3 -> expr4                                     (42)
	expr3 -> expr3 expr4                               (43)
	expr3 -> expr3 expr4 '!'                           (44)
	expr4 -> expr5                                     (45)
	expr4 -> expr4 '.' identifier                      (46)
	expr4 -> bangApply '.' identifier                  (47)
	bangApply -> exprAtom expr4 '!'                    (48)
	expr5 -> expr6                                     (49)
	expr5 -> if expr then expr else expr               (50)
	expr5 -> matchExpr                                 (51)
	expr5 -> '\\' params '->' expr                     (52)
	params ->                                          (53)
	params -> params identifier                        (54)
	expr6 -> exprAtom                                  (55)
	expr6 -> '{' block '}'                             (56)
	exprAtom -> hole                                   (57)
	exprAtom -> identifier                             (58)
	exprAtom -> term                                   (59)
	exprAtom -> tuple                                  (60)
	exprAtom -> list                                   (61)
	exprAtom -> record                                 (62)
	exprAtom -> '(' expr ')'                           (63)
	term -> number                                     (64)
	term -> string                                     (65)
	term -> boolean                                    (66)
	record -> '{' pairs '}'                            (67)
	pairs ->                                           (68)
	pairs -> identifier ':' expr ',' pairs             (69)
	pairs -> identifier ':' expr                       (70)
	list -> '[' listElements ']'                       (71)
	listElements ->                                    (72)
	listElements -> expr                               (73)
	listElements -> expr ',' listElements              (74)
	tuple -> '(' expr tupleElems ')'                   (75)
	tupleElems -> ',' expr                             (76)
	tupleElems -> ',' expr tupleElems                  (77)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { L.RangedToken (T.Id _) _ }
	HOLE           { L.RangedToken (T.Hole _) _ }
	number         { L.RangedToken (T.Number _) _ }
	string         { L.RangedToken (T.String _) _ }
	boolean        { L.RangedToken (T.Boolean _) _ }
	'!'            { L.RangedToken (T.Operator "!") _ }
	'+'            { L.RangedToken (T.Operator "+") _ }
	'-'            { L.RangedToken (T.Operator "-") _ }
	'*'            { L.RangedToken (T.Operator "*") _ }
	'/'            { L.RangedToken (T.Operator "/") _ }
	'^'            { L.RangedToken (T.Operator "^") _ }
	'++'           { L.RangedToken (T.Operator "++") _ }
	'=='           { L.RangedToken (T.Operator "==") _ }
	'!='           { L.RangedToken (T.Operator "!=") _ }
	'<'            { L.RangedToken (T.Operator "<") _ }
	'<='           { L.RangedToken (T.Operator "<=") _ }
	'>'            { L.RangedToken (T.Operator ">") _ }
	'>='           { L.RangedToken (T.Operator ">=") _ }
	'||'           { L.RangedToken (T.Operator "||") _ }
	'&&'           { L.RangedToken (T.Operator "&&") _ }
	'|>'           { L.RangedToken (T.Operator "|>") _ }
	'<|'           { L.RangedToken (T.Operator "<|") _ }
	'`'            { L.RangedToken (T.Operator "<|") _ }
	op             { L.RangedToken (T.Operator _) _ }
	let            { L.RangedToken T.Let _ }
	in             { L.RangedToken T.In _ }
	where          { L.RangedToken T.Where _ }
	with           { L.RangedToken T.With _ }
	if             { L.RangedToken T.If _ }
	then           { L.RangedToken T.Then _ }
	else           { L.RangedToken T.Else _ }
	match          { L.RangedToken T.Match _ }
	return         { L.RangedToken T.Return _ }
	data           { L.RangedToken T.Data _ }
	ty             { L.RangedToken T.Type _ }
	alias          { L.RangedToken T.Alias _ }
	kind           { L.RangedToken T.Kind _ }
	forall         { L.RangedToken T.Forall _ }
	exists         { L.RangedToken T.Exists _ }
	proof          { L.RangedToken T.Proof _ }
	infer          { L.RangedToken T.Infer _ }
	protocol       { L.RangedToken T.Protocol _ }
	interface      { L.RangedToken T.Interface _ }
	instance       { L.RangedToken T.Instance _ }
	implements     { L.RangedToken T.Implements _ }
	module         { L.RangedToken T.Module _ }
	import         { L.RangedToken T.Import _ }
	'('            { L.RangedToken T.LParen _ }
	')'            { L.RangedToken T.RParen _ }
	'['            { L.RangedToken T.LBrack _ }
	']'            { L.RangedToken T.RBrack _ }
	'{'            { L.RangedToken T.LCurly _ }
	'}'            { L.RangedToken T.RCurly _ }
	':'            { L.RangedToken T.Colon _ }
	';'            { L.RangedToken T.SemiColon _ }
	','            { L.RangedToken T.Comma _ }
	'->'           { L.RangedToken T.Arrow _ }
	'<-'           { L.RangedToken T.BackArrow _ }
	'=>'           { L.RangedToken T.FatArrow _ }
	'|->'          { L.RangedToken T.PipeArrow _ }
	'='            { L.RangedToken T.Equals _ }
	'|'            { L.RangedToken T.Pipe _ }
	'.'            { L.RangedToken T.Dot _ }
	'::'           { L.RangedToken T.Section _ }
	'\\'           { L.RangedToken T.BackSlash _ }
	newline        { L.RangedToken T.Newline _ }
	eof            { L.RangedToken T.EOF _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseSagaExpr rule  0
	identifier      rule  1
	hole            rule  2
	patListElems    rules 3, 4
	patTupleElems   rules 5, 6
	patRecordKeys   rules 7, 8, 9
	patRest         rules 10, 11
	patData         rules 12, 13
	pattern         rules 14, 15, 16, 17, 18, 19, 20, 21
	cases           rules 22, 23
	matchExpr       rule  24
	patterns        rules 25, 26
	backcall        rule  27
	statement       rule  28
	stmts           rules 29, 30
	returnStmt      rule  31
	block           rules 32, 33
	expr            rule  34
	expr1           rules 35, 36, 37
	expr2           rules 38, 39
	exprBacktick    rules 40, 41
	expr3           rules 42, 43, 44
	expr4           rules 45, 46, 47
	bangApply       rule  48
	expr5           rules 49, 50, 51, 52
	params          rules 53, 54
	expr6           rules 55, 56
	exprAtom        rules 57, 58, 59, 60, 61, 62, 63
	term            rules 64, 65, 66
	record          rule  67
	pairs           rules 68, 69, 70
	list            rule  71
	listElements    rules 72, 73, 74
	tuple           rule  75
	tupleElems      rules 76, 77

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseSagaExpr -> . expr                      (rule 0)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 6
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 1

	identifier -> . id                                  (rule 1)

	id             shift, and enter state 2


State 2

	identifier -> id .                                  (rule 1)

	id             reduce using rule 1
	HOLE           reduce using rule 1
	number         reduce using rule 1
	string         reduce using rule 1
	boolean        reduce using rule 1
	'!'            reduce using rule 1
	'+'            reduce using rule 1
	'`'            reduce using rule 1
	if             reduce using rule 1
	then           reduce using rule 1
	else           reduce using rule 1
	match          reduce using rule 1
	return         reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'{'            reduce using rule 1
	'}'            reduce using rule 1
	':'            reduce using rule 1
	','            reduce using rule 1
	'->'           reduce using rule 1
	'<-'           reduce using rule 1
	'|'            reduce using rule 1
	'.'            reduce using rule 1
	'\\'           reduce using rule 1
	%eof           reduce using rule 1


State 3

	exprAtom -> identifier .                            (rule 58)

	id             reduce using rule 58
	HOLE           reduce using rule 58
	number         reduce using rule 58
	string         reduce using rule 58
	boolean        reduce using rule 58
	'!'            reduce using rule 58
	'+'            reduce using rule 58
	'`'            reduce using rule 58
	if             reduce using rule 58
	then           reduce using rule 58
	else           reduce using rule 58
	match          reduce using rule 58
	return         reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'{'            reduce using rule 58
	'}'            reduce using rule 58
	','            reduce using rule 58
	'|'            reduce using rule 58
	'.'            reduce using rule 58
	'\\'           reduce using rule 58
	%eof           reduce using rule 58


State 4

	exprAtom -> hole .                                  (rule 57)

	id             reduce using rule 57
	HOLE           reduce using rule 57
	number         reduce using rule 57
	string         reduce using rule 57
	boolean        reduce using rule 57
	'!'            reduce using rule 57
	'+'            reduce using rule 57
	'`'            reduce using rule 57
	if             reduce using rule 57
	then           reduce using rule 57
	else           reduce using rule 57
	match          reduce using rule 57
	return         reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'{'            reduce using rule 57
	'}'            reduce using rule 57
	','            reduce using rule 57
	'|'            reduce using rule 57
	'.'            reduce using rule 57
	'\\'           reduce using rule 57
	%eof           reduce using rule 57


State 5

	expr5 -> matchExpr .                                (rule 51)

	id             reduce using rule 51
	HOLE           reduce using rule 51
	number         reduce using rule 51
	string         reduce using rule 51
	boolean        reduce using rule 51
	'!'            reduce using rule 51
	'+'            reduce using rule 51
	'`'            reduce using rule 51
	if             reduce using rule 51
	then           reduce using rule 51
	else           reduce using rule 51
	match          reduce using rule 51
	return         reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51
	','            reduce using rule 51
	'|'            reduce using rule 51
	'.'            reduce using rule 51
	'\\'           reduce using rule 51
	%eof           reduce using rule 51


State 6

	%start_parseSagaExpr -> expr .                      (rule 0)

	%eof           accept


State 7

	expr -> expr1 .                                     (rule 34)
	expr1 -> expr1 . '+' expr2                          (rule 36)

	id             reduce using rule 34
	HOLE           reduce using rule 34
	number         reduce using rule 34
	string         reduce using rule 34
	boolean        reduce using rule 34
	'!'            reduce using rule 34
	'+'            shift, and enter state 50
	'`'            reduce using rule 34
	if             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	match          reduce using rule 34
	return         reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	','            reduce using rule 34
	'|'            reduce using rule 34
	'.'            reduce using rule 34
	'\\'           reduce using rule 34
	%eof           reduce using rule 34


State 8

	expr1 -> expr2 .                                    (rule 35)
	expr2 -> expr2 . '`' exprBacktick '`' expr3         (rule 39)

	id             reduce using rule 35
	HOLE           reduce using rule 35
	number         reduce using rule 35
	string         reduce using rule 35
	boolean        reduce using rule 35
	'!'            reduce using rule 35
	'+'            reduce using rule 35
	'`'            shift, and enter state 49
	if             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	match          reduce using rule 35
	return         reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	','            reduce using rule 35
	'|'            reduce using rule 35
	'.'            reduce using rule 35
	'\\'           reduce using rule 35
	%eof           reduce using rule 35


State 9

	expr2 -> expr3 .                                    (rule 38)
	expr3 -> expr3 . expr4                              (rule 43)
	expr3 -> expr3 . expr4 '!'                          (rule 44)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	'!'            reduce using rule 38
	'+'            reduce using rule 38
	'`'            reduce using rule 38
	if             shift, and enter state 23
	then           reduce using rule 38
	else           reduce using rule 38
	match          shift, and enter state 24
	return         reduce using rule 38
	'('            shift, and enter state 25
	')'            reduce using rule 38
	'['            shift, and enter state 26
	']'            reduce using rule 38
	'{'            shift, and enter state 27
	'}'            reduce using rule 38
	','            reduce using rule 38
	'|'            reduce using rule 38
	'.'            reduce using rule 38
	'\\'           shift, and enter state 29
	%eof           reduce using rule 38

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr4          goto state 48
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 10

	expr3 -> expr4 .                                    (rule 42)
	expr4 -> expr4 . '.' identifier                     (rule 46)

	id             reduce using rule 42
	HOLE           reduce using rule 42
	number         reduce using rule 42
	string         reduce using rule 42
	boolean        reduce using rule 42
	'!'            reduce using rule 42
	'+'            reduce using rule 42
	'`'            reduce using rule 42
	if             reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	match          reduce using rule 42
	return         reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	','            reduce using rule 42
	'|'            reduce using rule 42
	'.'            shift, and enter state 47
	'\\'           reduce using rule 42
	%eof           reduce using rule 42


State 11

	expr4 -> bangApply . '.' identifier                 (rule 47)

	'.'            shift, and enter state 46


State 12

	expr4 -> expr5 .                                    (rule 45)

	id             reduce using rule 45
	HOLE           reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'+'            reduce using rule 45
	'`'            reduce using rule 45
	if             reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	match          reduce using rule 45
	return         reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	','            reduce using rule 45
	'|'            reduce using rule 45
	'.'            reduce using rule 45
	'\\'           reduce using rule 45
	%eof           reduce using rule 45


State 13

	expr5 -> expr6 .                                    (rule 49)

	id             reduce using rule 49
	HOLE           reduce using rule 49
	number         reduce using rule 49
	string         reduce using rule 49
	boolean        reduce using rule 49
	'!'            reduce using rule 49
	'+'            reduce using rule 49
	'`'            reduce using rule 49
	if             reduce using rule 49
	then           reduce using rule 49
	else           reduce using rule 49
	match          reduce using rule 49
	return         reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	','            reduce using rule 49
	'|'            reduce using rule 49
	'.'            reduce using rule 49
	'\\'           reduce using rule 49
	%eof           reduce using rule 49


State 14

	bangApply -> exprAtom . expr4 '!'                   (rule 48)
	expr6 -> exprAtom .                                 (rule 55)

	id             shift, and enter state 2
			(reduce using rule 55)

	HOLE           shift, and enter state 19
			(reduce using rule 55)

	number         shift, and enter state 20
			(reduce using rule 55)

	string         shift, and enter state 21
			(reduce using rule 55)

	boolean        shift, and enter state 22
			(reduce using rule 55)

	'!'            reduce using rule 55
	'+'            reduce using rule 55
	'`'            reduce using rule 55
	if             shift, and enter state 23
			(reduce using rule 55)

	then           reduce using rule 55
	else           reduce using rule 55
	match          shift, and enter state 24
			(reduce using rule 55)

	return         reduce using rule 55
	'('            shift, and enter state 25
			(reduce using rule 55)

	')'            reduce using rule 55
	'['            shift, and enter state 26
			(reduce using rule 55)

	']'            reduce using rule 55
	'{'            shift, and enter state 27
			(reduce using rule 55)

	'}'            reduce using rule 55
	','            reduce using rule 55
	'|'            reduce using rule 55
	'.'            reduce using rule 55
	'\\'           shift, and enter state 29
			(reduce using rule 55)

	%eof           reduce using rule 55

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr4          goto state 45
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 15

	exprAtom -> term .                                  (rule 59)

	id             reduce using rule 59
	HOLE           reduce using rule 59
	number         reduce using rule 59
	string         reduce using rule 59
	boolean        reduce using rule 59
	'!'            reduce using rule 59
	'+'            reduce using rule 59
	'`'            reduce using rule 59
	if             reduce using rule 59
	then           reduce using rule 59
	else           reduce using rule 59
	match          reduce using rule 59
	return         reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'{'            reduce using rule 59
	'}'            reduce using rule 59
	','            reduce using rule 59
	'|'            reduce using rule 59
	'.'            reduce using rule 59
	'\\'           reduce using rule 59
	%eof           reduce using rule 59


State 16

	exprAtom -> record .                                (rule 62)

	id             reduce using rule 62
	HOLE           reduce using rule 62
	number         reduce using rule 62
	string         reduce using rule 62
	boolean        reduce using rule 62
	'!'            reduce using rule 62
	'+'            reduce using rule 62
	'`'            reduce using rule 62
	if             reduce using rule 62
	then           reduce using rule 62
	else           reduce using rule 62
	match          reduce using rule 62
	return         reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'{'            reduce using rule 62
	'}'            reduce using rule 62
	','            reduce using rule 62
	'|'            reduce using rule 62
	'.'            reduce using rule 62
	'\\'           reduce using rule 62
	%eof           reduce using rule 62


State 17

	exprAtom -> list .                                  (rule 61)

	id             reduce using rule 61
	HOLE           reduce using rule 61
	number         reduce using rule 61
	string         reduce using rule 61
	boolean        reduce using rule 61
	'!'            reduce using rule 61
	'+'            reduce using rule 61
	'`'            reduce using rule 61
	if             reduce using rule 61
	then           reduce using rule 61
	else           reduce using rule 61
	match          reduce using rule 61
	return         reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'{'            reduce using rule 61
	'}'            reduce using rule 61
	','            reduce using rule 61
	'|'            reduce using rule 61
	'.'            reduce using rule 61
	'\\'           reduce using rule 61
	%eof           reduce using rule 61


State 18

	exprAtom -> tuple .                                 (rule 60)

	id             reduce using rule 60
	HOLE           reduce using rule 60
	number         reduce using rule 60
	string         reduce using rule 60
	boolean        reduce using rule 60
	'!'            reduce using rule 60
	'+'            reduce using rule 60
	'`'            reduce using rule 60
	if             reduce using rule 60
	then           reduce using rule 60
	else           reduce using rule 60
	match          reduce using rule 60
	return         reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'{'            reduce using rule 60
	'}'            reduce using rule 60
	','            reduce using rule 60
	'|'            reduce using rule 60
	'.'            reduce using rule 60
	'\\'           reduce using rule 60
	%eof           reduce using rule 60


State 19

	hole -> HOLE .                                      (rule 2)

	id             reduce using rule 2
	HOLE           reduce using rule 2
	number         reduce using rule 2
	string         reduce using rule 2
	boolean        reduce using rule 2
	'!'            reduce using rule 2
	'+'            reduce using rule 2
	'`'            reduce using rule 2
	if             reduce using rule 2
	then           reduce using rule 2
	else           reduce using rule 2
	match          reduce using rule 2
	return         reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'{'            reduce using rule 2
	'}'            reduce using rule 2
	','            reduce using rule 2
	'|'            reduce using rule 2
	'.'            reduce using rule 2
	'\\'           reduce using rule 2
	%eof           reduce using rule 2


State 20

	term -> number .                                    (rule 64)

	id             reduce using rule 64
	HOLE           reduce using rule 64
	number         reduce using rule 64
	string         reduce using rule 64
	boolean        reduce using rule 64
	'!'            reduce using rule 64
	'+'            reduce using rule 64
	'`'            reduce using rule 64
	if             reduce using rule 64
	then           reduce using rule 64
	else           reduce using rule 64
	match          reduce using rule 64
	return         reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	'{'            reduce using rule 64
	'}'            reduce using rule 64
	','            reduce using rule 64
	'->'           reduce using rule 64
	'|'            reduce using rule 64
	'.'            reduce using rule 64
	'\\'           reduce using rule 64
	%eof           reduce using rule 64


State 21

	term -> string .                                    (rule 65)

	id             reduce using rule 65
	HOLE           reduce using rule 65
	number         reduce using rule 65
	string         reduce using rule 65
	boolean        reduce using rule 65
	'!'            reduce using rule 65
	'+'            reduce using rule 65
	'`'            reduce using rule 65
	if             reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	match          reduce using rule 65
	return         reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	'{'            reduce using rule 65
	'}'            reduce using rule 65
	','            reduce using rule 65
	'->'           reduce using rule 65
	'|'            reduce using rule 65
	'.'            reduce using rule 65
	'\\'           reduce using rule 65
	%eof           reduce using rule 65


State 22

	term -> boolean .                                   (rule 66)

	id             reduce using rule 66
	HOLE           reduce using rule 66
	number         reduce using rule 66
	string         reduce using rule 66
	boolean        reduce using rule 66
	'!'            reduce using rule 66
	'+'            reduce using rule 66
	'`'            reduce using rule 66
	if             reduce using rule 66
	then           reduce using rule 66
	else           reduce using rule 66
	match          reduce using rule 66
	return         reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	'{'            reduce using rule 66
	'}'            reduce using rule 66
	','            reduce using rule 66
	'->'           reduce using rule 66
	'|'            reduce using rule 66
	'.'            reduce using rule 66
	'\\'           reduce using rule 66
	%eof           reduce using rule 66


State 23

	expr5 -> if . expr then expr else expr              (rule 50)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 44
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 24

	matchExpr -> match . expr cases                     (rule 24)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 43
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 25

	exprAtom -> '(' . expr ')'                          (rule 63)
	tuple -> '(' . expr tupleElems ')'                  (rule 75)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 42
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 26

	list -> '[' . listElements ']'                      (rule 71)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	']'            reduce using rule 72
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 40
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	listElements   goto state 41
	tuple          goto state 18

State 27

	expr6 -> '{' . block '}'                            (rule 56)
	record -> '{' . pairs '}'                           (rule 67)

	id             shift, and enter state 2
	return         shift, and enter state 39
	'}'            reduce using rule 68

	identifier     goto state 32
	backcall       goto state 33
	statement      goto state 34
	stmts          goto state 35
	returnStmt     goto state 36
	block          goto state 37
	pairs          goto state 38

State 28

	expr1 -> '.' . identifier                           (rule 37)

	id             shift, and enter state 2

	identifier     goto state 31

State 29

	expr5 -> '\\' . params '->' expr                    (rule 52)

	id             reduce using rule 53
	'->'           reduce using rule 53

	params         goto state 30

State 30

	expr5 -> '\\' params . '->' expr                    (rule 52)
	params -> params . identifier                       (rule 54)

	id             shift, and enter state 2
	'->'           shift, and enter state 75

	identifier     goto state 74

State 31

	expr1 -> '.' identifier .                           (rule 37)

	id             reduce using rule 37
	HOLE           reduce using rule 37
	number         reduce using rule 37
	string         reduce using rule 37
	boolean        reduce using rule 37
	'!'            reduce using rule 37
	'+'            reduce using rule 37
	'`'            reduce using rule 37
	if             reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	match          reduce using rule 37
	return         reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	','            reduce using rule 37
	'|'            reduce using rule 37
	'.'            reduce using rule 37
	'\\'           reduce using rule 37
	%eof           reduce using rule 37


State 32

	backcall -> identifier . '<-' expr                  (rule 27)
	pairs -> identifier . ':' expr ',' pairs            (rule 69)
	pairs -> identifier . ':' expr                      (rule 70)

	':'            shift, and enter state 72
	'<-'           shift, and enter state 73


State 33

	statement -> backcall .                             (rule 28)

	id             reduce using rule 28
	return         reduce using rule 28


State 34

	stmts -> statement .                                (rule 29)

	id             reduce using rule 29
	return         reduce using rule 29


State 35

	stmts -> stmts . statement                          (rule 30)
	block -> stmts . returnStmt                         (rule 33)

	id             shift, and enter state 2
	return         shift, and enter state 39

	identifier     goto state 69
	backcall       goto state 33
	statement      goto state 70
	returnStmt     goto state 71

State 36

	block -> returnStmt .                               (rule 32)

	'}'            reduce using rule 32


State 37

	expr6 -> '{' block . '}'                            (rule 56)

	'}'            shift, and enter state 68


State 38

	record -> '{' pairs . '}'                           (rule 67)

	'}'            shift, and enter state 67


State 39

	returnStmt -> return . expr                         (rule 31)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 66
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 40

	listElements -> expr .                              (rule 73)
	listElements -> expr . ',' listElements             (rule 74)

	']'            reduce using rule 73
	','            shift, and enter state 65


State 41

	list -> '[' listElements . ']'                      (rule 71)

	']'            shift, and enter state 64


State 42

	exprAtom -> '(' expr . ')'                          (rule 63)
	tuple -> '(' expr . tupleElems ')'                  (rule 75)

	')'            shift, and enter state 62
	','            shift, and enter state 63

	tupleElems     goto state 61

State 43

	matchExpr -> match expr . cases                     (rule 24)

	'|'            shift, and enter state 60

	cases          goto state 59

State 44

	expr5 -> if expr . then expr else expr              (rule 50)

	then           shift, and enter state 58


State 45

	expr4 -> expr4 . '.' identifier                     (rule 46)
	bangApply -> exprAtom expr4 . '!'                   (rule 48)

	'!'            shift, and enter state 57
	'.'            shift, and enter state 47


State 46

	expr4 -> bangApply '.' . identifier                 (rule 47)

	id             shift, and enter state 2

	identifier     goto state 56

State 47

	expr4 -> expr4 '.' . identifier                     (rule 46)

	id             shift, and enter state 2

	identifier     goto state 55

State 48

	expr3 -> expr3 expr4 .                              (rule 43)
	expr3 -> expr3 expr4 . '!'                          (rule 44)
	expr4 -> expr4 . '.' identifier                     (rule 46)

	id             reduce using rule 43
	HOLE           reduce using rule 43
	number         reduce using rule 43
	string         reduce using rule 43
	boolean        reduce using rule 43
	'!'            shift, and enter state 54
	'+'            reduce using rule 43
	'`'            reduce using rule 43
	if             reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	match          reduce using rule 43
	return         reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	','            reduce using rule 43
	'|'            reduce using rule 43
	'.'            shift, and enter state 47
	'\\'           reduce using rule 43
	%eof           reduce using rule 43


State 49

	expr2 -> expr2 '`' . exprBacktick '`' expr3         (rule 39)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	exprBacktick   goto state 52
	expr3          goto state 53
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 50

	expr1 -> expr1 '+' . expr2                          (rule 36)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr2          goto state 51
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 51

	expr1 -> expr1 '+' expr2 .                          (rule 36)
	expr2 -> expr2 . '`' exprBacktick '`' expr3         (rule 39)

	id             reduce using rule 36
	HOLE           reduce using rule 36
	number         reduce using rule 36
	string         reduce using rule 36
	boolean        reduce using rule 36
	'!'            reduce using rule 36
	'+'            reduce using rule 36
	'`'            shift, and enter state 49
	if             reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	match          reduce using rule 36
	return         reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	','            reduce using rule 36
	'|'            reduce using rule 36
	'.'            reduce using rule 36
	'\\'           reduce using rule 36
	%eof           reduce using rule 36


State 52

	expr2 -> expr2 '`' exprBacktick . '`' expr3         (rule 39)
	exprBacktick -> exprBacktick . '+' expr3            (rule 41)

	'+'            shift, and enter state 91
	'`'            shift, and enter state 92


State 53

	exprBacktick -> expr3 .                             (rule 40)
	expr3 -> expr3 . expr4                              (rule 43)
	expr3 -> expr3 . expr4 '!'                          (rule 44)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	'+'            reduce using rule 40
	'`'            reduce using rule 40
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr4          goto state 48
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 54

	expr3 -> expr3 expr4 '!' .                          (rule 44)

	id             reduce using rule 44
	HOLE           reduce using rule 44
	number         reduce using rule 44
	string         reduce using rule 44
	boolean        reduce using rule 44
	'!'            reduce using rule 44
	'+'            reduce using rule 44
	'`'            reduce using rule 44
	if             reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	match          reduce using rule 44
	return         reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	','            reduce using rule 44
	'|'            reduce using rule 44
	'.'            reduce using rule 44
	'\\'           reduce using rule 44
	%eof           reduce using rule 44


State 55

	expr4 -> expr4 '.' identifier .                     (rule 46)

	id             reduce using rule 46
	HOLE           reduce using rule 46
	number         reduce using rule 46
	string         reduce using rule 46
	boolean        reduce using rule 46
	'!'            reduce using rule 46
	'+'            reduce using rule 46
	'`'            reduce using rule 46
	if             reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	match          reduce using rule 46
	return         reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	','            reduce using rule 46
	'|'            reduce using rule 46
	'.'            reduce using rule 46
	'\\'           reduce using rule 46
	%eof           reduce using rule 46


State 56

	expr4 -> bangApply '.' identifier .                 (rule 47)

	id             reduce using rule 47
	HOLE           reduce using rule 47
	number         reduce using rule 47
	string         reduce using rule 47
	boolean        reduce using rule 47
	'!'            reduce using rule 47
	'+'            reduce using rule 47
	'`'            reduce using rule 47
	if             reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	match          reduce using rule 47
	return         reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	','            reduce using rule 47
	'|'            reduce using rule 47
	'.'            reduce using rule 47
	'\\'           reduce using rule 47
	%eof           reduce using rule 47


State 57

	bangApply -> exprAtom expr4 '!' .                   (rule 48)

	'.'            reduce using rule 48


State 58

	expr5 -> if expr then . expr else expr              (rule 50)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 90
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 59

	cases -> cases . '|' pattern '->' expr              (rule 23)
	matchExpr -> match expr cases .                     (rule 24)

	id             reduce using rule 24
	HOLE           reduce using rule 24
	number         reduce using rule 24
	string         reduce using rule 24
	boolean        reduce using rule 24
	'!'            reduce using rule 24
	'+'            reduce using rule 24
	'`'            reduce using rule 24
	if             reduce using rule 24
	then           reduce using rule 24
	else           reduce using rule 24
	match          reduce using rule 24
	return         reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'['            reduce using rule 24
	']'            reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	','            reduce using rule 24
	'|'            shift, and enter state 89
	'.'            reduce using rule 24
	'\\'           reduce using rule 24
	%eof           reduce using rule 24


State 60

	cases -> '|' . pattern '->' expr                    (rule 22)

	id             shift, and enter state 2
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	'('            shift, and enter state 86
	'['            shift, and enter state 87
	'{'            shift, and enter state 88

	identifier     goto state 82
	patData        goto state 83
	pattern        goto state 84
	term           goto state 85

State 61

	tuple -> '(' expr tupleElems . ')'                  (rule 75)

	')'            shift, and enter state 81


State 62

	exprAtom -> '(' expr ')' .                          (rule 63)

	id             reduce using rule 63
	HOLE           reduce using rule 63
	number         reduce using rule 63
	string         reduce using rule 63
	boolean        reduce using rule 63
	'!'            reduce using rule 63
	'+'            reduce using rule 63
	'`'            reduce using rule 63
	if             reduce using rule 63
	then           reduce using rule 63
	else           reduce using rule 63
	match          reduce using rule 63
	return         reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	'{'            reduce using rule 63
	'}'            reduce using rule 63
	','            reduce using rule 63
	'|'            reduce using rule 63
	'.'            reduce using rule 63
	'\\'           reduce using rule 63
	%eof           reduce using rule 63


State 63

	tupleElems -> ',' . expr                            (rule 76)
	tupleElems -> ',' . expr tupleElems                 (rule 77)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 80
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 64

	list -> '[' listElements ']' .                      (rule 71)

	id             reduce using rule 71
	HOLE           reduce using rule 71
	number         reduce using rule 71
	string         reduce using rule 71
	boolean        reduce using rule 71
	'!'            reduce using rule 71
	'+'            reduce using rule 71
	'`'            reduce using rule 71
	if             reduce using rule 71
	then           reduce using rule 71
	else           reduce using rule 71
	match          reduce using rule 71
	return         reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	'['            reduce using rule 71
	']'            reduce using rule 71
	'{'            reduce using rule 71
	'}'            reduce using rule 71
	','            reduce using rule 71
	'|'            reduce using rule 71
	'.'            reduce using rule 71
	'\\'           reduce using rule 71
	%eof           reduce using rule 71


State 65

	listElements -> expr ',' . listElements             (rule 74)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	']'            reduce using rule 72
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 40
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	listElements   goto state 79
	tuple          goto state 18

State 66

	returnStmt -> return expr .                         (rule 31)

	'}'            reduce using rule 31


State 67

	record -> '{' pairs '}' .                           (rule 67)

	id             reduce using rule 67
	HOLE           reduce using rule 67
	number         reduce using rule 67
	string         reduce using rule 67
	boolean        reduce using rule 67
	'!'            reduce using rule 67
	'+'            reduce using rule 67
	'`'            reduce using rule 67
	if             reduce using rule 67
	then           reduce using rule 67
	else           reduce using rule 67
	match          reduce using rule 67
	return         reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	'{'            reduce using rule 67
	'}'            reduce using rule 67
	','            reduce using rule 67
	'|'            reduce using rule 67
	'.'            reduce using rule 67
	'\\'           reduce using rule 67
	%eof           reduce using rule 67


State 68

	expr6 -> '{' block '}' .                            (rule 56)

	id             reduce using rule 56
	HOLE           reduce using rule 56
	number         reduce using rule 56
	string         reduce using rule 56
	boolean        reduce using rule 56
	'!'            reduce using rule 56
	'+'            reduce using rule 56
	'`'            reduce using rule 56
	if             reduce using rule 56
	then           reduce using rule 56
	else           reduce using rule 56
	match          reduce using rule 56
	return         reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'{'            reduce using rule 56
	'}'            reduce using rule 56
	','            reduce using rule 56
	'|'            reduce using rule 56
	'.'            reduce using rule 56
	'\\'           reduce using rule 56
	%eof           reduce using rule 56


State 69

	backcall -> identifier . '<-' expr                  (rule 27)

	'<-'           shift, and enter state 73


State 70

	stmts -> stmts statement .                          (rule 30)

	id             reduce using rule 30
	return         reduce using rule 30


State 71

	block -> stmts returnStmt .                         (rule 33)

	'}'            reduce using rule 33


State 72

	pairs -> identifier ':' . expr ',' pairs            (rule 69)
	pairs -> identifier ':' . expr                      (rule 70)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 78
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 73

	backcall -> identifier '<-' . expr                  (rule 27)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 77
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 74

	params -> params identifier .                       (rule 54)

	id             reduce using rule 54
	'->'           reduce using rule 54


State 75

	expr5 -> '\\' params '->' . expr                    (rule 52)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 76
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 76

	expr5 -> '\\' params '->' expr .                    (rule 52)

	id             reduce using rule 52
	HOLE           reduce using rule 52
	number         reduce using rule 52
	string         reduce using rule 52
	boolean        reduce using rule 52
	'!'            reduce using rule 52
	'+'            reduce using rule 52
	'`'            reduce using rule 52
	if             reduce using rule 52
	then           reduce using rule 52
	else           reduce using rule 52
	match          reduce using rule 52
	return         reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	','            reduce using rule 52
	'|'            reduce using rule 52
	'.'            reduce using rule 52
	'\\'           reduce using rule 52
	%eof           reduce using rule 52


State 77

	backcall -> identifier '<-' expr .                  (rule 27)

	id             reduce using rule 27
	return         reduce using rule 27


State 78

	pairs -> identifier ':' expr . ',' pairs            (rule 69)
	pairs -> identifier ':' expr .                      (rule 70)

	'}'            reduce using rule 70
	','            shift, and enter state 108


State 79

	listElements -> expr ',' listElements .             (rule 74)

	']'            reduce using rule 74


State 80

	tupleElems -> ',' expr .                            (rule 76)
	tupleElems -> ',' expr . tupleElems                 (rule 77)

	')'            reduce using rule 76
	','            shift, and enter state 63

	tupleElems     goto state 107

State 81

	tuple -> '(' expr tupleElems ')' .                  (rule 75)

	id             reduce using rule 75
	HOLE           reduce using rule 75
	number         reduce using rule 75
	string         reduce using rule 75
	boolean        reduce using rule 75
	'!'            reduce using rule 75
	'+'            reduce using rule 75
	'`'            reduce using rule 75
	if             reduce using rule 75
	then           reduce using rule 75
	else           reduce using rule 75
	match          reduce using rule 75
	return         reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	'['            reduce using rule 75
	']'            reduce using rule 75
	'{'            reduce using rule 75
	'}'            reduce using rule 75
	','            reduce using rule 75
	'|'            reduce using rule 75
	'.'            reduce using rule 75
	'\\'           reduce using rule 75
	%eof           reduce using rule 75


State 82

	patData -> identifier . ':'                         (rule 12)
	pattern -> identifier .                             (rule 14)

	':'            shift, and enter state 106
	'->'           reduce using rule 14


State 83

	patData -> patData . identifier                     (rule 13)
	pattern -> patData .                                (rule 16)

	id             shift, and enter state 2
	')'            reduce using rule 16
	'->'           reduce using rule 16

	identifier     goto state 105

State 84

	cases -> '|' pattern . '->' expr                    (rule 22)

	'->'           shift, and enter state 104


State 85

	pattern -> term .                                   (rule 15)

	')'            reduce using rule 15
	'->'           reduce using rule 15


State 86

	pattern -> '(' . identifier patTupleElems ')'       (rule 17)
	pattern -> '(' . pattern ')'                        (rule 21)

	id             shift, and enter state 2
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	'('            shift, and enter state 86
	'['            shift, and enter state 87
	'{'            shift, and enter state 88

	identifier     goto state 102
	patData        goto state 83
	pattern        goto state 103
	term           goto state 85

State 87

	pattern -> '[' . ']'                                (rule 18)
	pattern -> '[' . patListElems patRest ']'           (rule 19)

	id             shift, and enter state 2
	']'            shift, and enter state 101

	identifier     goto state 99
	patListElems   goto state 100

State 88

	pattern -> '{' . patRecordKeys patRest '}'          (rule 20)

	id             shift, and enter state 2
	'}'            reduce using rule 7
	'|'            reduce using rule 7

	identifier     goto state 97
	patRecordKeys  goto state 98

State 89

	cases -> cases '|' . pattern '->' expr              (rule 23)

	id             shift, and enter state 2
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	'('            shift, and enter state 86
	'['            shift, and enter state 87
	'{'            shift, and enter state 88

	identifier     goto state 82
	patData        goto state 83
	pattern        goto state 96
	term           goto state 85

State 90

	expr5 -> if expr then expr . else expr              (rule 50)

	else           shift, and enter state 95


State 91

	exprBacktick -> exprBacktick '+' . expr3            (rule 41)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr3          goto state 94
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 92

	expr2 -> expr2 '`' exprBacktick '`' . expr3         (rule 39)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr3          goto state 93
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 93

	expr2 -> expr2 '`' exprBacktick '`' expr3 .         (rule 39)
	expr3 -> expr3 . expr4                              (rule 43)
	expr3 -> expr3 . expr4 '!'                          (rule 44)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	'!'            reduce using rule 39
	'+'            reduce using rule 39
	'`'            reduce using rule 39
	if             shift, and enter state 23
	then           reduce using rule 39
	else           reduce using rule 39
	match          shift, and enter state 24
	return         reduce using rule 39
	'('            shift, and enter state 25
	')'            reduce using rule 39
	'['            shift, and enter state 26
	']'            reduce using rule 39
	'{'            shift, and enter state 27
	'}'            reduce using rule 39
	','            reduce using rule 39
	'|'            reduce using rule 39
	'.'            reduce using rule 39
	'\\'           shift, and enter state 29
	%eof           reduce using rule 39

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr4          goto state 48
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 94

	exprBacktick -> exprBacktick '+' expr3 .            (rule 41)
	expr3 -> expr3 . expr4                              (rule 43)
	expr3 -> expr3 . expr4 '!'                          (rule 44)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	'+'            reduce using rule 41
	'`'            reduce using rule 41
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr4          goto state 48
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 95

	expr5 -> if expr then expr else . expr              (rule 50)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 121
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 96

	cases -> cases '|' pattern . '->' expr              (rule 23)

	'->'           shift, and enter state 120


State 97

	patRecordKeys -> identifier .                       (rule 8)
	patRecordKeys -> identifier . ',' patRecordKeys     (rule 9)

	'}'            reduce using rule 8
	','            shift, and enter state 119
	'|'            reduce using rule 8


State 98

	pattern -> '{' patRecordKeys . patRest '}'          (rule 20)

	'}'            reduce using rule 10
	'|'            shift, and enter state 116

	patRest        goto state 118

State 99

	patListElems -> identifier .                        (rule 3)
	patListElems -> identifier . ',' patListElems       (rule 4)

	']'            reduce using rule 3
	','            shift, and enter state 117
	'|'            reduce using rule 3


State 100

	pattern -> '[' patListElems . patRest ']'           (rule 19)

	']'            reduce using rule 10
	'|'            shift, and enter state 116

	patRest        goto state 115

State 101

	pattern -> '[' ']' .                                (rule 18)

	')'            reduce using rule 18
	'->'           reduce using rule 18


State 102

	patData -> identifier . ':'                         (rule 12)
	pattern -> identifier .                             (rule 14)
	pattern -> '(' identifier . patTupleElems ')'       (rule 17)

	')'            reduce using rule 14
	':'            shift, and enter state 106
	','            shift, and enter state 114

	patTupleElems  goto state 113

State 103

	pattern -> '(' pattern . ')'                        (rule 21)

	')'            shift, and enter state 112


State 104

	cases -> '|' pattern '->' . expr                    (rule 22)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 111
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 105

	patData -> patData identifier .                     (rule 13)

	id             reduce using rule 13
	')'            reduce using rule 13
	'->'           reduce using rule 13


State 106

	patData -> identifier ':' .                         (rule 12)

	id             reduce using rule 12
	')'            reduce using rule 12
	'->'           reduce using rule 12


State 107

	tupleElems -> ',' expr tupleElems .                 (rule 77)

	')'            reduce using rule 77


State 108

	pairs -> identifier ':' expr ',' . pairs            (rule 69)

	id             shift, and enter state 2
	'}'            reduce using rule 68

	identifier     goto state 109
	pairs          goto state 110

State 109

	pairs -> identifier . ':' expr ',' pairs            (rule 69)
	pairs -> identifier . ':' expr                      (rule 70)

	':'            shift, and enter state 72


State 110

	pairs -> identifier ':' expr ',' pairs .            (rule 69)

	'}'            reduce using rule 69


State 111

	cases -> '|' pattern '->' expr .                    (rule 22)

	id             reduce using rule 22
	HOLE           reduce using rule 22
	number         reduce using rule 22
	string         reduce using rule 22
	boolean        reduce using rule 22
	'!'            reduce using rule 22
	'+'            reduce using rule 22
	'`'            reduce using rule 22
	if             reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	match          reduce using rule 22
	return         reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'['            reduce using rule 22
	']'            reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	','            reduce using rule 22
	'|'            reduce using rule 22
	'.'            reduce using rule 22
	'\\'           reduce using rule 22
	%eof           reduce using rule 22


State 112

	pattern -> '(' pattern ')' .                        (rule 21)

	')'            reduce using rule 21
	'->'           reduce using rule 21


State 113

	pattern -> '(' identifier patTupleElems . ')'       (rule 17)

	')'            shift, and enter state 129


State 114

	patTupleElems -> ',' . identifier                   (rule 5)
	patTupleElems -> ',' . identifier patTupleElems     (rule 6)

	id             shift, and enter state 2

	identifier     goto state 128

State 115

	pattern -> '[' patListElems patRest . ']'           (rule 19)

	']'            shift, and enter state 127


State 116

	patRest -> '|' . identifier                         (rule 11)

	id             shift, and enter state 2

	identifier     goto state 126

State 117

	patListElems -> identifier ',' . patListElems       (rule 4)

	id             shift, and enter state 2

	identifier     goto state 99
	patListElems   goto state 125

State 118

	pattern -> '{' patRecordKeys patRest . '}'          (rule 20)

	'}'            shift, and enter state 124


State 119

	patRecordKeys -> identifier ',' . patRecordKeys     (rule 9)

	id             shift, and enter state 2
	'}'            reduce using rule 7
	'|'            reduce using rule 7

	identifier     goto state 97
	patRecordKeys  goto state 123

State 120

	cases -> cases '|' pattern '->' . expr              (rule 23)

	id             shift, and enter state 2
	HOLE           shift, and enter state 19
	number         shift, and enter state 20
	string         shift, and enter state 21
	boolean        shift, and enter state 22
	if             shift, and enter state 23
	match          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'{'            shift, and enter state 27
	'.'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 3
	hole           goto state 4
	matchExpr      goto state 5
	expr           goto state 122
	expr1          goto state 7
	expr2          goto state 8
	expr3          goto state 9
	expr4          goto state 10
	bangApply      goto state 11
	expr5          goto state 12
	expr6          goto state 13
	exprAtom       goto state 14
	term           goto state 15
	record         goto state 16
	list           goto state 17
	tuple          goto state 18

State 121

	expr5 -> if expr then expr else expr .              (rule 50)

	id             reduce using rule 50
	HOLE           reduce using rule 50
	number         reduce using rule 50
	string         reduce using rule 50
	boolean        reduce using rule 50
	'!'            reduce using rule 50
	'+'            reduce using rule 50
	'`'            reduce using rule 50
	if             reduce using rule 50
	then           reduce using rule 50
	else           reduce using rule 50
	match          reduce using rule 50
	return         reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'{'            reduce using rule 50
	'}'            reduce using rule 50
	','            reduce using rule 50
	'|'            reduce using rule 50
	'.'            reduce using rule 50
	'\\'           reduce using rule 50
	%eof           reduce using rule 50


State 122

	cases -> cases '|' pattern '->' expr .              (rule 23)

	id             reduce using rule 23
	HOLE           reduce using rule 23
	number         reduce using rule 23
	string         reduce using rule 23
	boolean        reduce using rule 23
	'!'            reduce using rule 23
	'+'            reduce using rule 23
	'`'            reduce using rule 23
	if             reduce using rule 23
	then           reduce using rule 23
	else           reduce using rule 23
	match          reduce using rule 23
	return         reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'['            reduce using rule 23
	']'            reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	','            reduce using rule 23
	'|'            reduce using rule 23
	'.'            reduce using rule 23
	'\\'           reduce using rule 23
	%eof           reduce using rule 23


State 123

	patRecordKeys -> identifier ',' patRecordKeys .     (rule 9)

	'}'            reduce using rule 9
	'|'            reduce using rule 9


State 124

	pattern -> '{' patRecordKeys patRest '}' .          (rule 20)

	')'            reduce using rule 20
	'->'           reduce using rule 20


State 125

	patListElems -> identifier ',' patListElems .       (rule 4)

	']'            reduce using rule 4
	'|'            reduce using rule 4


State 126

	patRest -> '|' identifier .                         (rule 11)

	']'            reduce using rule 11
	'}'            reduce using rule 11


State 127

	pattern -> '[' patListElems patRest ']' .           (rule 19)

	')'            reduce using rule 19
	'->'           reduce using rule 19


State 128

	patTupleElems -> ',' identifier .                   (rule 5)
	patTupleElems -> ',' identifier . patTupleElems     (rule 6)

	')'            reduce using rule 5
	','            shift, and enter state 114

	patTupleElems  goto state 130

State 129

	pattern -> '(' identifier patTupleElems ')' .       (rule 17)

	')'            reduce using rule 17
	'->'           reduce using rule 17


State 130

	patTupleElems -> ',' identifier patTupleElems .     (rule 6)

	')'            reduce using rule 6


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 78
Number of terminals: 67
Number of non-terminals: 35
Number of states: 131
