-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ./src/Saga/Parser/ParserHM.y
-----------------------------------------------------------------------------

state 68 contains 1 shift/reduce conflicts.
state 69 contains 1 reduce/reduce conflicts.
state 156 contains 1 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 159 contains 1 shift/reduce conflicts.

terminal op is unused
terminal in is unused
terminal with is unused
terminal alias is unused
terminal kind is unused
terminal forall is unused
terminal exists is unused
terminal proof is unused
terminal infer is unused
terminal protocol is unused
terminal interface is unused
terminal module is unused
terminal import is unused
terminal newline is unused
terminal eof is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseSagaScript -> script                   (0)
	%start_parseSagaExpr -> expr                       (1)
	%start_parseSagaType -> typeExpr                   (2)
	%start_parseSagaKind -> kindExpr                   (3)
	%start_parseSagaDec -> dec                         (4)
	identifier -> id                                   (5)
	pairs ->                                           (6)
	pairs -> identifier ':' expr ',' pairs             (7)
	pairs -> identifier ':' expr                       (8)
	record -> '{' pairs '}'                            (9)
	listElements ->                                    (10)
	listElements -> expr                               (11)
	listElements -> expr ',' listElements              (12)
	list -> '[' listElements ']'                       (13)
	tupleElems -> ',' expr                             (14)
	tupleElems -> ',' expr tupleElems                  (15)
	tuple -> '(' expr tupleElems ')'                   (16)
	params ->                                          (17)
	params -> params identifier                        (18)
	args ->                                            (19)
	args -> args atom                                  (20)
	fnApplication -> atom args '!'                     (21)
	controlFlow -> if expr then expr else expr         (22)
	patListElems -> identifier                         (23)
	patListElems -> identifier ',' patListElems        (24)
	patTupleElems -> ',' identifier                    (25)
	patTupleElems -> ',' identifier patTupleElems      (26)
	patRecordKeys ->                                   (27)
	patRecordKeys -> identifier                        (28)
	patRecordKeys -> identifier ',' patRecordKeys      (29)
	patRest ->                                         (30)
	patRest -> '|' identifier                          (31)
	patData -> identifier ':'                          (32)
	patData -> patData identifier                      (33)
	pattern -> identifier                              (34)
	pattern -> term                                    (35)
	pattern -> patData                                 (36)
	pattern -> '(' identifier patTupleElems ')'        (37)
	pattern -> '[' ']'                                 (38)
	pattern -> '[' patListElems patRest ']'            (39)
	pattern -> '{' patRecordKeys patRest '}'           (40)
	pattern -> '(' pattern ')'                         (41)
	term -> number                                     (42)
	term -> string                                     (43)
	term -> boolean                                    (44)
	atom -> identifier                                 (45)
	atom -> term                                       (46)
	atom -> tuple                                      (47)
	atom -> list                                       (48)
	atom -> record                                     (49)
	atom -> '{' block '}'                              (50)
	atom -> '(' expr ')'                               (51)
	cases -> '|' pattern '->' expr                     (52)
	cases -> cases '|' pattern '->' expr               (53)
	matchExpr -> match expr cases                      (54)
	binding -> identifier '=' expr                     (55)
	bindings -> binding                                (56)
	bindings -> bindings ',' binding                   (57)
	expr -> controlFlow                                (58)
	expr -> matchExpr                                  (59)
	expr -> fnApplication                              (60)
	expr -> '\\' params '->' expr                      (61)
	expr -> atom                                       (62)
	expr -> '.' atom                                   (63)
	expr -> expr '.' identifier                        (64)
	expr -> expr '+' expr                              (65)
	expr -> expr '-' expr                              (66)
	expr -> expr '*' expr                              (67)
	expr -> expr '/' expr                              (68)
	expr -> expr '^' expr                              (69)
	expr -> expr '||' expr                             (70)
	expr -> expr '&&' expr                             (71)
	expr -> expr '==' expr                             (72)
	expr -> expr '!=' expr                             (73)
	expr -> expr '<' expr                              (74)
	expr -> expr '>' expr                              (75)
	expr -> expr '<=' expr                             (76)
	expr -> expr '>=' expr                             (77)
	expr -> expr '|>' expr                             (78)
	expr -> expr '<|' expr                             (79)
	expr -> expr '++' expr                             (80)
	patterns -> pattern ','                            (81)
	patterns -> patterns pattern                       (82)
	statement -> return expr                           (83)
	statement -> pattern '<-' expr                     (84)
	statement -> patterns '<-' expr                    (85)
	statement -> dec                                   (86)
	statement -> fnApplication                         (87)
	block -> statement ';'                             (88)
	block -> block statement ';'                       (89)
	tpairs ->                                          (90)
	tpairs -> identifier ':' typeExpr ',' tpairs       (91)
	tpairs -> identifier ':' typeExpr                  (92)
	trecord -> '{' tpairs '}'                          (93)
	ttupleElems -> ',' typeExpr                        (94)
	ttupleElems -> ',' typeExpr ttupleElems            (95)
	ttuple -> '(' typeExpr ttupleElems ')'             (96)
	type -> number                                     (97)
	type -> boolean                                    (98)
	type -> string                                     (99)
	type -> ttuple                                     (100)
	type -> trecord                                    (101)
	typeAtom -> type                                   (102)
	typeAtom -> identifier                             (103)
	typeAtom -> '(' typeExpr ')'                       (104)
	typeArgs ->                                        (105)
	typeArgs -> typeArgs typeAtom                      (106)
	tbinding -> identifier '=' typeExpr                (107)
	tbinding -> identifier implements typeExpr         (108)
	tbinding -> identifier '|->' typeExpr              (109)
	tbinding -> identifier '|' typeExpr                (110)
	tbindings -> tbinding                              (111)
	tbindings -> tbindings ',' tbinding                (112)
	tagged -> identifier ':' typeExpr                  (113)
	union -> '|' typeExpr                              (114)
	union -> union '|' typeExpr                        (115)
	typeExpr -> typeAtom                               (116)
	typeExpr -> tagged                                 (117)
	typeExpr -> union                                  (118)
	typeExpr -> typeExpr '->' typeExpr                 (119)
	typeExpr -> '\\' params '=>' typeExpr              (120)
	typeExpr -> typeAtom typeArgs '!'                  (121)
	typeAnnotation ->                                  (122)
	typeAnnotation -> ':' typeExpr                     (123)
	typeAnnotation -> ':' typeExpr where tbindings     (124)
	typeAnnotation -> ':' instance identifier ':' typeExpr   (125)
	kindExpr -> kindExpr '->' kindExpr                 (126)
	kindExpr -> '(' kindExpr ')'                       (127)
	kindExpr -> identifier                             (128)
	kindAnnotation ->                                  (129)
	kindAnnotation -> '::' kindExpr                    (130)
	dataExpr -> identifier ':' typeExpr                (131)
	dataExprs -> dataExpr                              (132)
	dataExprs -> dataExprs '|' dataExpr                (133)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr   (134)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr where bindings   (135)
	dec -> data identifier kindAnnotation '=' dataExprs   (136)
	dec -> data identifier kindAnnotation '=' dataExprs where tbindings   (137)
	dec -> ty identifier kindAnnotation '=' typeExpr   (138)
	dec -> ty identifier kindAnnotation '=' typeExpr where tbindings   (139)
	declarations -> dec                                (140)
	declarations -> declarations dec                   (141)
	script -> declarations                             (142)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { L.RangedToken (T.Id _) _ }
	number         { L.RangedToken (T.Number _) _ }
	string         { L.RangedToken (T.String _) _ }
	boolean        { L.RangedToken (T.Boolean _) _ }
	'!'            { L.RangedToken (T.Operator "!") _ }
	'+'            { L.RangedToken (T.Operator "+") _ }
	'-'            { L.RangedToken (T.Operator "-") _ }
	'*'            { L.RangedToken (T.Operator "*") _ }
	'/'            { L.RangedToken (T.Operator "/") _ }
	'^'            { L.RangedToken (T.Operator "^") _ }
	'++'           { L.RangedToken (T.Operator "++") _ }
	'=='           { L.RangedToken (T.Operator "==") _ }
	'!='           { L.RangedToken (T.Operator "!=") _ }
	'<'            { L.RangedToken (T.Operator "<") _ }
	'<='           { L.RangedToken (T.Operator "<=") _ }
	'>'            { L.RangedToken (T.Operator ">") _ }
	'>='           { L.RangedToken (T.Operator ">=") _ }
	'||'           { L.RangedToken (T.Operator "||") _ }
	'&&'           { L.RangedToken (T.Operator "&&") _ }
	'|>'           { L.RangedToken (T.Operator "|>") _ }
	'<|'           { L.RangedToken (T.Operator "<|") _ }
	op             { L.RangedToken (T.Operator _) _ }
	let            { L.RangedToken T.Let _ }
	in             { L.RangedToken T.In _ }
	where          { L.RangedToken T.Where _ }
	with           { L.RangedToken T.With _ }
	if             { L.RangedToken T.If _ }
	then           { L.RangedToken T.Then _ }
	else           { L.RangedToken T.Else _ }
	match          { L.RangedToken T.Match _ }
	return         { L.RangedToken T.Return _ }
	data           { L.RangedToken T.Data _ }
	ty             { L.RangedToken T.Type _ }
	alias          { L.RangedToken T.Alias _ }
	kind           { L.RangedToken T.Kind _ }
	forall         { L.RangedToken T.Forall _ }
	exists         { L.RangedToken T.Exists _ }
	proof          { L.RangedToken T.Proof _ }
	infer          { L.RangedToken T.Infer _ }
	protocol       { L.RangedToken T.Protocol _ }
	interface      { L.RangedToken T.Interface _ }
	instance       { L.RangedToken T.Instance _ }
	implements     { L.RangedToken T.Implements _ }
	module         { L.RangedToken T.Module _ }
	import         { L.RangedToken T.Import _ }
	'('            { L.RangedToken T.LParen _ }
	')'            { L.RangedToken T.RParen _ }
	'['            { L.RangedToken T.LBrack _ }
	']'            { L.RangedToken T.RBrack _ }
	'{'            { L.RangedToken T.LCurly _ }
	'}'            { L.RangedToken T.RCurly _ }
	':'            { L.RangedToken T.Colon _ }
	';'            { L.RangedToken T.SemiColon _ }
	','            { L.RangedToken T.Comma _ }
	'->'           { L.RangedToken T.Arrow _ }
	'<-'           { L.RangedToken T.BackArrow _ }
	'=>'           { L.RangedToken T.FatArrow _ }
	'|->'          { L.RangedToken T.PipeArrow _ }
	'='            { L.RangedToken T.Equals _ }
	'|'            { L.RangedToken T.Pipe _ }
	'.'            { L.RangedToken T.Dot _ }
	'::'           { L.RangedToken T.Section _ }
	'\\'           { L.RangedToken T.BackSlash _ }
	newline        { L.RangedToken T.Newline _ }
	eof            { L.RangedToken T.EOF _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseSagaScript rule  0
	%start_parseSagaExpr rule  1
	%start_parseSagaType rule  2
	%start_parseSagaKind rule  3
	%start_parseSagaDec rule  4
	identifier      rule  5
	pairs           rules 6, 7, 8
	record          rule  9
	listElements    rules 10, 11, 12
	list            rule  13
	tupleElems      rules 14, 15
	tuple           rule  16
	params          rules 17, 18
	args            rules 19, 20
	fnApplication   rule  21
	controlFlow     rule  22
	patListElems    rules 23, 24
	patTupleElems   rules 25, 26
	patRecordKeys   rules 27, 28, 29
	patRest         rules 30, 31
	patData         rules 32, 33
	pattern         rules 34, 35, 36, 37, 38, 39, 40, 41
	term            rules 42, 43, 44
	atom            rules 45, 46, 47, 48, 49, 50, 51
	cases           rules 52, 53
	matchExpr       rule  54
	binding         rule  55
	bindings        rules 56, 57
	expr            rules 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80
	patterns        rules 81, 82
	statement       rules 83, 84, 85, 86, 87
	block           rules 88, 89
	tpairs          rules 90, 91, 92
	trecord         rule  93
	ttupleElems     rules 94, 95
	ttuple          rule  96
	type            rules 97, 98, 99, 100, 101
	typeAtom        rules 102, 103, 104
	typeArgs        rules 105, 106
	tbinding        rules 107, 108, 109, 110
	tbindings       rules 111, 112
	tagged          rule  113
	union           rules 114, 115
	typeExpr        rules 116, 117, 118, 119, 120, 121
	typeAnnotation  rules 122, 123, 124, 125
	kindExpr        rules 126, 127, 128
	kindAnnotation  rules 129, 130
	dataExpr        rule  131
	dataExprs       rules 132, 133
	dec             rules 134, 135, 136, 137, 138, 139
	declarations    rules 140, 141
	script          rule  142

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseSagaScript -> . script                  (rule 0)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10

	dec            goto state 49
	declarations   goto state 50
	script         goto state 51

State 1

	%start_parseSagaExpr -> . expr                      (rule 1)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 38

State 2

	%start_parseSagaType -> . typeExpr                  (rule 2)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 21

State 3

	%start_parseSagaKind -> . kindExpr                  (rule 3)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 12

State 4

	%start_parseSagaDec -> . dec                        (rule 4)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10

	dec            goto state 7

State 5

	identifier -> . id                                  (rule 5)

	id             shift, and enter state 6


State 6

	identifier -> id .                                  (rule 5)

	id             reduce using rule 5
	number         reduce using rule 5
	string         reduce using rule 5
	boolean        reduce using rule 5
	'!'            reduce using rule 5
	'+'            reduce using rule 5
	'-'            reduce using rule 5
	'*'            reduce using rule 5
	'/'            reduce using rule 5
	'^'            reduce using rule 5
	'++'           reduce using rule 5
	'=='           reduce using rule 5
	'!='           reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	'||'           reduce using rule 5
	'&&'           reduce using rule 5
	'|>'           reduce using rule 5
	'<|'           reduce using rule 5
	let            reduce using rule 5
	where          reduce using rule 5
	then           reduce using rule 5
	else           reduce using rule 5
	data           reduce using rule 5
	ty             reduce using rule 5
	implements     reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	'['            reduce using rule 5
	']'            reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	':'            reduce using rule 5
	';'            reduce using rule 5
	','            reduce using rule 5
	'->'           reduce using rule 5
	'<-'           reduce using rule 5
	'=>'           reduce using rule 5
	'|->'          reduce using rule 5
	'='            reduce using rule 5
	'|'            reduce using rule 5
	'.'            reduce using rule 5
	'::'           reduce using rule 5
	%eof           reduce using rule 5


State 7

	%start_parseSagaDec -> dec .                        (rule 4)

	%eof           accept


State 8

	dec -> let . identifier typeAnnotation kindAnnotation '=' expr    (rule 134)
	dec -> let . identifier typeAnnotation kindAnnotation '=' expr where bindings    (rule 135)

	id             shift, and enter state 6

	identifier     goto state 106

State 9

	dec -> data . identifier kindAnnotation '=' dataExprs    (rule 136)
	dec -> data . identifier kindAnnotation '=' dataExprs where tbindings    (rule 137)

	id             shift, and enter state 6

	identifier     goto state 105

State 10

	dec -> ty . identifier kindAnnotation '=' typeExpr    (rule 138)
	dec -> ty . identifier kindAnnotation '=' typeExpr where tbindings    (rule 139)

	id             shift, and enter state 6

	identifier     goto state 104

State 11

	kindExpr -> identifier .                            (rule 128)

	')'            reduce using rule 128
	'->'           reduce using rule 128
	'='            reduce using rule 128
	%eof           reduce using rule 128


State 12

	%start_parseSagaKind -> kindExpr .                  (rule 3)
	kindExpr -> kindExpr . '->' kindExpr                (rule 126)

	'->'           shift, and enter state 103
	%eof           accept


State 13

	kindExpr -> '(' . kindExpr ')'                      (rule 127)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 102

State 14

	typeAtom -> identifier .                            (rule 103)
	tagged -> identifier . ':' typeExpr                 (rule 113)

	id             reduce using rule 103
	number         reduce using rule 103
	string         reduce using rule 103
	boolean        reduce using rule 103
	'!'            reduce using rule 103
	let            reduce using rule 103
	where          reduce using rule 103
	data           reduce using rule 103
	ty             reduce using rule 103
	'('            reduce using rule 103
	')'            reduce using rule 103
	'{'            reduce using rule 103
	'}'            reduce using rule 103
	':'            shift, and enter state 101
	';'            reduce using rule 103
	','            reduce using rule 103
	'->'           reduce using rule 103
	'='            reduce using rule 103
	'|'            reduce using rule 103
	'::'           reduce using rule 103
	%eof           reduce using rule 103


State 15

	type -> trecord .                                   (rule 101)

	id             reduce using rule 101
	number         reduce using rule 101
	string         reduce using rule 101
	boolean        reduce using rule 101
	'!'            reduce using rule 101
	let            reduce using rule 101
	where          reduce using rule 101
	data           reduce using rule 101
	ty             reduce using rule 101
	'('            reduce using rule 101
	')'            reduce using rule 101
	'{'            reduce using rule 101
	'}'            reduce using rule 101
	';'            reduce using rule 101
	','            reduce using rule 101
	'->'           reduce using rule 101
	'='            reduce using rule 101
	'|'            reduce using rule 101
	'::'           reduce using rule 101
	%eof           reduce using rule 101


State 16

	type -> ttuple .                                    (rule 100)

	id             reduce using rule 100
	number         reduce using rule 100
	string         reduce using rule 100
	boolean        reduce using rule 100
	'!'            reduce using rule 100
	let            reduce using rule 100
	where          reduce using rule 100
	data           reduce using rule 100
	ty             reduce using rule 100
	'('            reduce using rule 100
	')'            reduce using rule 100
	'{'            reduce using rule 100
	'}'            reduce using rule 100
	';'            reduce using rule 100
	','            reduce using rule 100
	'->'           reduce using rule 100
	'='            reduce using rule 100
	'|'            reduce using rule 100
	'::'           reduce using rule 100
	%eof           reduce using rule 100


State 17

	typeAtom -> type .                                  (rule 102)

	id             reduce using rule 102
	number         reduce using rule 102
	string         reduce using rule 102
	boolean        reduce using rule 102
	'!'            reduce using rule 102
	let            reduce using rule 102
	where          reduce using rule 102
	data           reduce using rule 102
	ty             reduce using rule 102
	'('            reduce using rule 102
	')'            reduce using rule 102
	'{'            reduce using rule 102
	'}'            reduce using rule 102
	';'            reduce using rule 102
	','            reduce using rule 102
	'->'           reduce using rule 102
	'='            reduce using rule 102
	'|'            reduce using rule 102
	'::'           reduce using rule 102
	%eof           reduce using rule 102


State 18

	typeExpr -> typeAtom .                              (rule 116)
	typeExpr -> typeAtom . typeArgs '!'                 (rule 121)

	id             reduce using rule 105
	number         reduce using rule 105
	string         reduce using rule 105
	boolean        reduce using rule 105
	'!'            reduce using rule 105
	let            reduce using rule 116
	where          reduce using rule 116
	data           reduce using rule 116
	ty             reduce using rule 116
	'('            reduce using rule 105
	')'            reduce using rule 116
	'{'            reduce using rule 105
	'}'            reduce using rule 116
	';'            reduce using rule 116
	','            reduce using rule 116
	'->'           reduce using rule 116
	'='            reduce using rule 116
	'|'            reduce using rule 116
	'::'           reduce using rule 116
	%eof           reduce using rule 116

	typeArgs       goto state 100

State 19

	typeExpr -> tagged .                                (rule 117)

	let            reduce using rule 117
	where          reduce using rule 117
	data           reduce using rule 117
	ty             reduce using rule 117
	')'            reduce using rule 117
	'}'            reduce using rule 117
	';'            reduce using rule 117
	','            reduce using rule 117
	'->'           reduce using rule 117
	'='            reduce using rule 117
	'|'            reduce using rule 117
	'::'           reduce using rule 117
	%eof           reduce using rule 117


State 20

	union -> union . '|' typeExpr                       (rule 115)
	typeExpr -> union .                                 (rule 118)

	let            reduce using rule 118
	where          reduce using rule 118
	data           reduce using rule 118
	ty             reduce using rule 118
	')'            reduce using rule 118
	'}'            reduce using rule 118
	';'            reduce using rule 118
	','            reduce using rule 118
	'->'           reduce using rule 118
	'='            reduce using rule 118
	'|'            shift, and enter state 99
	'::'           reduce using rule 118
	%eof           reduce using rule 118


State 21

	%start_parseSagaType -> typeExpr .                  (rule 2)
	typeExpr -> typeExpr . '->' typeExpr                (rule 119)

	'->'           shift, and enter state 98
	%eof           accept


State 22

	type -> number .                                    (rule 97)

	id             reduce using rule 97
	number         reduce using rule 97
	string         reduce using rule 97
	boolean        reduce using rule 97
	'!'            reduce using rule 97
	let            reduce using rule 97
	where          reduce using rule 97
	data           reduce using rule 97
	ty             reduce using rule 97
	'('            reduce using rule 97
	')'            reduce using rule 97
	'{'            reduce using rule 97
	'}'            reduce using rule 97
	';'            reduce using rule 97
	','            reduce using rule 97
	'->'           reduce using rule 97
	'='            reduce using rule 97
	'|'            reduce using rule 97
	'::'           reduce using rule 97
	%eof           reduce using rule 97


State 23

	type -> string .                                    (rule 99)

	id             reduce using rule 99
	number         reduce using rule 99
	string         reduce using rule 99
	boolean        reduce using rule 99
	'!'            reduce using rule 99
	let            reduce using rule 99
	where          reduce using rule 99
	data           reduce using rule 99
	ty             reduce using rule 99
	'('            reduce using rule 99
	')'            reduce using rule 99
	'{'            reduce using rule 99
	'}'            reduce using rule 99
	';'            reduce using rule 99
	','            reduce using rule 99
	'->'           reduce using rule 99
	'='            reduce using rule 99
	'|'            reduce using rule 99
	'::'           reduce using rule 99
	%eof           reduce using rule 99


State 24

	type -> boolean .                                   (rule 98)

	id             reduce using rule 98
	number         reduce using rule 98
	string         reduce using rule 98
	boolean        reduce using rule 98
	'!'            reduce using rule 98
	let            reduce using rule 98
	where          reduce using rule 98
	data           reduce using rule 98
	ty             reduce using rule 98
	'('            reduce using rule 98
	')'            reduce using rule 98
	'{'            reduce using rule 98
	'}'            reduce using rule 98
	';'            reduce using rule 98
	','            reduce using rule 98
	'->'           reduce using rule 98
	'='            reduce using rule 98
	'|'            reduce using rule 98
	'::'           reduce using rule 98
	%eof           reduce using rule 98


State 25

	ttuple -> '(' . typeExpr ttupleElems ')'            (rule 96)
	typeAtom -> '(' . typeExpr ')'                      (rule 104)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 97

State 26

	trecord -> '{' . tpairs '}'                         (rule 93)

	id             shift, and enter state 6
	'}'            reduce using rule 90

	identifier     goto state 95
	tpairs         goto state 96

State 27

	union -> '|' . typeExpr                             (rule 114)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 94

State 28

	typeExpr -> '\\' . params '=>' typeExpr             (rule 120)

	id             reduce using rule 17
	'=>'           reduce using rule 17

	params         goto state 93

State 29

	atom -> identifier .                                (rule 45)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	'^'            reduce using rule 45
	'++'           reduce using rule 45
	'=='           reduce using rule 45
	'!='           reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45
	'&&'           reduce using rule 45
	'|>'           reduce using rule 45
	'<|'           reduce using rule 45
	let            reduce using rule 45
	where          reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	data           reduce using rule 45
	ty             reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	';'            reduce using rule 45
	','            reduce using rule 45
	'|'            reduce using rule 45
	'.'            reduce using rule 45
	%eof           reduce using rule 45


State 30

	atom -> record .                                    (rule 49)

	id             reduce using rule 49
	number         reduce using rule 49
	string         reduce using rule 49
	boolean        reduce using rule 49
	'!'            reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	'^'            reduce using rule 49
	'++'           reduce using rule 49
	'=='           reduce using rule 49
	'!='           reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49
	'&&'           reduce using rule 49
	'|>'           reduce using rule 49
	'<|'           reduce using rule 49
	let            reduce using rule 49
	where          reduce using rule 49
	then           reduce using rule 49
	else           reduce using rule 49
	data           reduce using rule 49
	ty             reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	';'            reduce using rule 49
	','            reduce using rule 49
	'|'            reduce using rule 49
	'.'            reduce using rule 49
	%eof           reduce using rule 49


State 31

	atom -> list .                                      (rule 48)

	id             reduce using rule 48
	number         reduce using rule 48
	string         reduce using rule 48
	boolean        reduce using rule 48
	'!'            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	'^'            reduce using rule 48
	'++'           reduce using rule 48
	'=='           reduce using rule 48
	'!='           reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48
	'&&'           reduce using rule 48
	'|>'           reduce using rule 48
	'<|'           reduce using rule 48
	let            reduce using rule 48
	where          reduce using rule 48
	then           reduce using rule 48
	else           reduce using rule 48
	data           reduce using rule 48
	ty             reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	';'            reduce using rule 48
	','            reduce using rule 48
	'|'            reduce using rule 48
	'.'            reduce using rule 48
	%eof           reduce using rule 48


State 32

	atom -> tuple .                                     (rule 47)

	id             reduce using rule 47
	number         reduce using rule 47
	string         reduce using rule 47
	boolean        reduce using rule 47
	'!'            reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	'^'            reduce using rule 47
	'++'           reduce using rule 47
	'=='           reduce using rule 47
	'!='           reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47
	'&&'           reduce using rule 47
	'|>'           reduce using rule 47
	'<|'           reduce using rule 47
	let            reduce using rule 47
	where          reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	data           reduce using rule 47
	ty             reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	';'            reduce using rule 47
	','            reduce using rule 47
	'|'            reduce using rule 47
	'.'            reduce using rule 47
	%eof           reduce using rule 47


State 33

	expr -> fnApplication .                             (rule 60)

	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'^'            reduce using rule 60
	'++'           reduce using rule 60
	'=='           reduce using rule 60
	'!='           reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60
	'&&'           reduce using rule 60
	'|>'           reduce using rule 60
	'<|'           reduce using rule 60
	let            reduce using rule 60
	where          reduce using rule 60
	then           reduce using rule 60
	else           reduce using rule 60
	data           reduce using rule 60
	ty             reduce using rule 60
	')'            reduce using rule 60
	']'            reduce using rule 60
	'}'            reduce using rule 60
	';'            reduce using rule 60
	','            reduce using rule 60
	'|'            reduce using rule 60
	'.'            reduce using rule 60
	%eof           reduce using rule 60


State 34

	expr -> controlFlow .                               (rule 58)

	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'^'            reduce using rule 58
	'++'           reduce using rule 58
	'=='           reduce using rule 58
	'!='           reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58
	'&&'           reduce using rule 58
	'|>'           reduce using rule 58
	'<|'           reduce using rule 58
	let            reduce using rule 58
	where          reduce using rule 58
	then           reduce using rule 58
	else           reduce using rule 58
	data           reduce using rule 58
	ty             reduce using rule 58
	')'            reduce using rule 58
	']'            reduce using rule 58
	'}'            reduce using rule 58
	';'            reduce using rule 58
	','            reduce using rule 58
	'|'            reduce using rule 58
	'.'            reduce using rule 58
	%eof           reduce using rule 58


State 35

	atom -> term .                                      (rule 46)

	id             reduce using rule 46
	number         reduce using rule 46
	string         reduce using rule 46
	boolean        reduce using rule 46
	'!'            reduce using rule 46
	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	'^'            reduce using rule 46
	'++'           reduce using rule 46
	'=='           reduce using rule 46
	'!='           reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46
	'&&'           reduce using rule 46
	'|>'           reduce using rule 46
	'<|'           reduce using rule 46
	let            reduce using rule 46
	where          reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	data           reduce using rule 46
	ty             reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	';'            reduce using rule 46
	','            reduce using rule 46
	'|'            reduce using rule 46
	'.'            reduce using rule 46
	%eof           reduce using rule 46


State 36

	fnApplication -> atom . args '!'                    (rule 21)
	expr -> atom .                                      (rule 62)

	id             reduce using rule 19
	number         reduce using rule 19
	string         reduce using rule 19
	boolean        reduce using rule 19
	'!'            reduce using rule 19
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'/'            reduce using rule 62
	'^'            reduce using rule 62
	'++'           reduce using rule 62
	'=='           reduce using rule 62
	'!='           reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62
	'&&'           reduce using rule 62
	'|>'           reduce using rule 62
	'<|'           reduce using rule 62
	let            reduce using rule 62
	where          reduce using rule 62
	then           reduce using rule 62
	else           reduce using rule 62
	data           reduce using rule 62
	ty             reduce using rule 62
	'('            reduce using rule 19
	')'            reduce using rule 62
	'['            reduce using rule 19
	']'            reduce using rule 62
	'{'            reduce using rule 19
	'}'            reduce using rule 62
	';'            reduce using rule 62
	','            reduce using rule 62
	'|'            reduce using rule 62
	'.'            reduce using rule 62
	%eof           reduce using rule 62

	args           goto state 92

State 37

	expr -> matchExpr .                                 (rule 59)

	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'^'            reduce using rule 59
	'++'           reduce using rule 59
	'=='           reduce using rule 59
	'!='           reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59
	'&&'           reduce using rule 59
	'|>'           reduce using rule 59
	'<|'           reduce using rule 59
	let            reduce using rule 59
	where          reduce using rule 59
	then           reduce using rule 59
	else           reduce using rule 59
	data           reduce using rule 59
	ty             reduce using rule 59
	')'            reduce using rule 59
	']'            reduce using rule 59
	'}'            reduce using rule 59
	';'            reduce using rule 59
	','            reduce using rule 59
	'|'            reduce using rule 59
	'.'            reduce using rule 59
	%eof           reduce using rule 59


State 38

	%start_parseSagaExpr -> expr .                      (rule 1)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	'.'            shift, and enter state 91
	%eof           accept


State 39

	term -> number .                                    (rule 42)

	id             reduce using rule 42
	number         reduce using rule 42
	string         reduce using rule 42
	boolean        reduce using rule 42
	'!'            reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'/'            reduce using rule 42
	'^'            reduce using rule 42
	'++'           reduce using rule 42
	'=='           reduce using rule 42
	'!='           reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42
	'&&'           reduce using rule 42
	'|>'           reduce using rule 42
	'<|'           reduce using rule 42
	let            reduce using rule 42
	where          reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	data           reduce using rule 42
	ty             reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	';'            reduce using rule 42
	','            reduce using rule 42
	'->'           reduce using rule 42
	'<-'           reduce using rule 42
	'|'            reduce using rule 42
	'.'            reduce using rule 42
	%eof           reduce using rule 42


State 40

	term -> string .                                    (rule 43)

	id             reduce using rule 43
	number         reduce using rule 43
	string         reduce using rule 43
	boolean        reduce using rule 43
	'!'            reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'^'            reduce using rule 43
	'++'           reduce using rule 43
	'=='           reduce using rule 43
	'!='           reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43
	'&&'           reduce using rule 43
	'|>'           reduce using rule 43
	'<|'           reduce using rule 43
	let            reduce using rule 43
	where          reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	data           reduce using rule 43
	ty             reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	';'            reduce using rule 43
	','            reduce using rule 43
	'->'           reduce using rule 43
	'<-'           reduce using rule 43
	'|'            reduce using rule 43
	'.'            reduce using rule 43
	%eof           reduce using rule 43


State 41

	term -> boolean .                                   (rule 44)

	id             reduce using rule 44
	number         reduce using rule 44
	string         reduce using rule 44
	boolean        reduce using rule 44
	'!'            reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'/'            reduce using rule 44
	'^'            reduce using rule 44
	'++'           reduce using rule 44
	'=='           reduce using rule 44
	'!='           reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44
	'&&'           reduce using rule 44
	'|>'           reduce using rule 44
	'<|'           reduce using rule 44
	let            reduce using rule 44
	where          reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	data           reduce using rule 44
	ty             reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	';'            reduce using rule 44
	','            reduce using rule 44
	'->'           reduce using rule 44
	'<-'           reduce using rule 44
	'|'            reduce using rule 44
	'.'            reduce using rule 44
	%eof           reduce using rule 44


State 42

	controlFlow -> if . expr then expr else expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 74

State 43

	matchExpr -> match . expr cases                     (rule 54)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 73

State 44

	tuple -> '(' . expr tupleElems ')'                  (rule 16)
	atom -> '(' . expr ')'                              (rule 51)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 72

State 45

	list -> '[' . listElements ']'                      (rule 13)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	']'            reduce using rule 10
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	listElements   goto state 70
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 71

State 46

	record -> '{' . pairs '}'                           (rule 9)
	atom -> '{' . block '}'                             (rule 50)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	let            shift, and enter state 8
	return         shift, and enter state 66
	data           shift, and enter state 9
	ty             shift, and enter state 10
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	'{'            shift, and enter state 69
	'}'            reduce using rule 6

	identifier     goto state 55
	pairs          goto state 56
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 57
	patData        goto state 58
	pattern        goto state 59
	term           goto state 60
	atom           goto state 61
	patterns       goto state 62
	statement      goto state 63
	block          goto state 64
	dec            goto state 65

State 47

	expr -> '.' . atom                                  (rule 63)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	term           goto state 35
	atom           goto state 54

State 48

	expr -> '\\' . params '->' expr                     (rule 61)

	id             reduce using rule 17
	'->'           reduce using rule 17

	params         goto state 53

State 49

	declarations -> dec .                               (rule 140)

	let            reduce using rule 140
	data           reduce using rule 140
	ty             reduce using rule 140
	%eof           reduce using rule 140


State 50

	declarations -> declarations . dec                  (rule 141)
	script -> declarations .                            (rule 142)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10
	%eof           reduce using rule 142

	dec            goto state 52

State 51

	%start_parseSagaScript -> script .                  (rule 0)

	%eof           accept


State 52

	declarations -> declarations dec .                  (rule 141)

	let            reduce using rule 141
	data           reduce using rule 141
	ty             reduce using rule 141
	%eof           reduce using rule 141


State 53

	params -> params . identifier                       (rule 18)
	expr -> '\\' params . '->' expr                     (rule 61)

	id             shift, and enter state 6
	'->'           shift, and enter state 178

	identifier     goto state 125

State 54

	expr -> '.' atom .                                  (rule 63)

	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	'^'            reduce using rule 63
	'++'           reduce using rule 63
	'=='           reduce using rule 63
	'!='           reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63
	'&&'           reduce using rule 63
	'|>'           reduce using rule 63
	'<|'           reduce using rule 63
	let            reduce using rule 63
	where          reduce using rule 63
	then           reduce using rule 63
	else           reduce using rule 63
	data           reduce using rule 63
	ty             reduce using rule 63
	')'            reduce using rule 63
	']'            reduce using rule 63
	'}'            reduce using rule 63
	';'            reduce using rule 63
	','            reduce using rule 63
	'|'            reduce using rule 63
	'.'            reduce using rule 63
	%eof           reduce using rule 63


State 55

	pairs -> identifier . ':' expr ',' pairs            (rule 7)
	pairs -> identifier . ':' expr                      (rule 8)
	patData -> identifier . ':'                         (rule 32)
	pattern -> identifier .                             (rule 34)
	atom -> identifier .                                (rule 45)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'('            reduce using rule 45
	'['            reduce using rule 45
	'{'            reduce using rule 45
	':'            shift, and enter state 177
	','            reduce using rule 34
	'<-'           reduce using rule 34


State 56

	record -> '{' pairs . '}'                           (rule 9)

	'}'            shift, and enter state 176


State 57

	statement -> fnApplication .                        (rule 87)

	';'            reduce using rule 87


State 58

	patData -> patData . identifier                     (rule 33)
	pattern -> patData .                                (rule 36)

	id             shift, and enter state 6
	number         reduce using rule 36
	string         reduce using rule 36
	boolean        reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	'{'            reduce using rule 36
	','            reduce using rule 36
	'->'           reduce using rule 36
	'<-'           reduce using rule 36

	identifier     goto state 175

State 59

	patterns -> pattern . ','                           (rule 81)
	statement -> pattern . '<-' expr                    (rule 84)

	','            shift, and enter state 173
	'<-'           shift, and enter state 174


State 60

	pattern -> term .                                   (rule 35)
	atom -> term .                                      (rule 46)

	id             reduce using rule 46
	number         reduce using rule 46
	string         reduce using rule 46
	boolean        reduce using rule 46
	'!'            reduce using rule 46
	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	'^'            reduce using rule 46
	'++'           reduce using rule 46
	'=='           reduce using rule 46
	'!='           reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46
	'&&'           reduce using rule 46
	'|>'           reduce using rule 46
	'<|'           reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	'{'            reduce using rule 46
	','            reduce using rule 46
	'<-'           reduce using rule 35
	'.'            reduce using rule 46


State 61

	fnApplication -> atom . args '!'                    (rule 21)

	id             reduce using rule 19
	number         reduce using rule 19
	string         reduce using rule 19
	boolean        reduce using rule 19
	'!'            reduce using rule 19
	'('            reduce using rule 19
	'['            reduce using rule 19
	'{'            reduce using rule 19

	args           goto state 92

State 62

	patterns -> patterns . pattern                      (rule 82)
	statement -> patterns . '<-' expr                   (rule 85)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	'('            shift, and enter state 169
	'['            shift, and enter state 170
	'{'            shift, and enter state 171
	'<-'           shift, and enter state 172

	identifier     goto state 166
	patData        goto state 58
	pattern        goto state 167
	term           goto state 168

State 63

	block -> statement . ';'                            (rule 88)

	';'            shift, and enter state 165


State 64

	atom -> '{' block . '}'                             (rule 50)
	block -> block . statement ';'                      (rule 89)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	let            shift, and enter state 8
	return         shift, and enter state 66
	data           shift, and enter state 9
	ty             shift, and enter state 10
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	'{'            shift, and enter state 69
	'}'            shift, and enter state 164

	identifier     goto state 162
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 57
	patData        goto state 58
	pattern        goto state 59
	term           goto state 60
	atom           goto state 61
	patterns       goto state 62
	statement      goto state 163
	dec            goto state 65

State 65

	statement -> dec .                                  (rule 86)

	';'            reduce using rule 86


State 66

	statement -> return . expr                          (rule 83)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 161

State 67

	tuple -> '(' . expr tupleElems ')'                  (rule 16)
	pattern -> '(' . identifier patTupleElems ')'       (rule 37)
	pattern -> '(' . pattern ')'                        (rule 41)
	atom -> '(' . expr ')'                              (rule 51)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	'{'            shift, and enter state 69
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 159
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	patData        goto state 58
	pattern        goto state 160
	term           goto state 60
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 72

State 68

	list -> '[' . listElements ']'                      (rule 13)
	pattern -> '[' . ']'                                (rule 38)
	pattern -> '[' . patListElems patRest ']'           (rule 39)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	']'            shift, and enter state 158
			(reduce using rule 10)

	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 156
	record         goto state 30
	listElements   goto state 70
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	patListElems   goto state 157
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 71

State 69

	record -> '{' . pairs '}'                           (rule 9)
	pattern -> '{' . patRecordKeys patRest '}'          (rule 40)
	atom -> '{' . block '}'                             (rule 50)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	let            shift, and enter state 8
	return         shift, and enter state 66
	data           shift, and enter state 9
	ty             shift, and enter state 10
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	'{'            shift, and enter state 69
	'}'            reduce using rule 27
			(reduce using rule 6)

	'|'            reduce using rule 27

	identifier     goto state 154
	pairs          goto state 56
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 57
	patRecordKeys  goto state 155
	patData        goto state 58
	pattern        goto state 59
	term           goto state 60
	atom           goto state 61
	patterns       goto state 62
	statement      goto state 63
	block          goto state 64
	dec            goto state 65

State 70

	list -> '[' listElements . ']'                      (rule 13)

	']'            shift, and enter state 153


State 71

	listElements -> expr .                              (rule 11)
	listElements -> expr . ',' listElements             (rule 12)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	']'            reduce using rule 11
	','            shift, and enter state 152
	'.'            shift, and enter state 91


State 72

	tuple -> '(' expr . tupleElems ')'                  (rule 16)
	atom -> '(' expr . ')'                              (rule 51)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	')'            shift, and enter state 150
	','            shift, and enter state 151
	'.'            shift, and enter state 91

	tupleElems     goto state 149

State 73

	matchExpr -> match expr . cases                     (rule 54)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	'|'            shift, and enter state 148
	'.'            shift, and enter state 91

	cases          goto state 147

State 74

	controlFlow -> if expr . then expr else expr        (rule 22)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	then           shift, and enter state 146
	'.'            shift, and enter state 91


State 75

	expr -> expr '+' . expr                             (rule 65)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 145

State 76

	expr -> expr '-' . expr                             (rule 66)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 144

State 77

	expr -> expr '*' . expr                             (rule 67)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 143

State 78

	expr -> expr '/' . expr                             (rule 68)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 142

State 79

	expr -> expr '^' . expr                             (rule 69)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 141

State 80

	expr -> expr '++' . expr                            (rule 80)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 140

State 81

	expr -> expr '==' . expr                            (rule 72)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 139

State 82

	expr -> expr '!=' . expr                            (rule 73)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 138

State 83

	expr -> expr '<' . expr                             (rule 74)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 137

State 84

	expr -> expr '<=' . expr                            (rule 76)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 136

State 85

	expr -> expr '>' . expr                             (rule 75)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 135

State 86

	expr -> expr '>=' . expr                            (rule 77)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 134

State 87

	expr -> expr '||' . expr                            (rule 70)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 133

State 88

	expr -> expr '&&' . expr                            (rule 71)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 132

State 89

	expr -> expr '|>' . expr                            (rule 78)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 131

State 90

	expr -> expr '<|' . expr                            (rule 79)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 130

State 91

	expr -> expr '.' . identifier                       (rule 64)

	id             shift, and enter state 6

	identifier     goto state 129

State 92

	args -> args . atom                                 (rule 20)
	fnApplication -> atom args . '!'                    (rule 21)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	'!'            shift, and enter state 128
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	term           goto state 35
	atom           goto state 127

State 93

	params -> params . identifier                       (rule 18)
	typeExpr -> '\\' params . '=>' typeExpr             (rule 120)

	id             shift, and enter state 6
	'=>'           shift, and enter state 126

	identifier     goto state 125

State 94

	union -> '|' typeExpr .                             (rule 114)
	typeExpr -> typeExpr . '->' typeExpr                (rule 119)

	let            reduce using rule 114
	where          reduce using rule 114
	data           reduce using rule 114
	ty             reduce using rule 114
	')'            reduce using rule 114
	'}'            reduce using rule 114
	';'            reduce using rule 114
	','            reduce using rule 114
	'->'           shift, and enter state 98
	'='            reduce using rule 114
	'|'            reduce using rule 114
	'::'           reduce using rule 114
	%eof           reduce using rule 114


State 95

	tpairs -> identifier . ':' typeExpr ',' tpairs      (rule 91)
	tpairs -> identifier . ':' typeExpr                 (rule 92)

	':'            shift, and enter state 124


State 96

	trecord -> '{' tpairs . '}'                         (rule 93)

	'}'            shift, and enter state 123


State 97

	ttuple -> '(' typeExpr . ttupleElems ')'            (rule 96)
	typeAtom -> '(' typeExpr . ')'                      (rule 104)
	typeExpr -> typeExpr . '->' typeExpr                (rule 119)

	')'            shift, and enter state 121
	','            shift, and enter state 122
	'->'           shift, and enter state 98

	ttupleElems    goto state 120

State 98

	typeExpr -> typeExpr '->' . typeExpr                (rule 119)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 119

State 99

	union -> union '|' . typeExpr                       (rule 115)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 118

State 100

	typeArgs -> typeArgs . typeAtom                     (rule 106)
	typeExpr -> typeAtom typeArgs . '!'                 (rule 121)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'!'            shift, and enter state 117
	'('            shift, and enter state 25
	'{'            shift, and enter state 26

	identifier     goto state 115
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 116

State 101

	tagged -> identifier ':' . typeExpr                 (rule 113)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 114

State 102

	kindExpr -> kindExpr . '->' kindExpr                (rule 126)
	kindExpr -> '(' kindExpr . ')'                      (rule 127)

	')'            shift, and enter state 113
	'->'           shift, and enter state 103


State 103

	kindExpr -> kindExpr '->' . kindExpr                (rule 126)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 112

State 104

	dec -> ty identifier . kindAnnotation '=' typeExpr    (rule 138)
	dec -> ty identifier . kindAnnotation '=' typeExpr where tbindings    (rule 139)

	'='            reduce using rule 129
	'::'           shift, and enter state 110

	kindAnnotation goto state 111

State 105

	dec -> data identifier . kindAnnotation '=' dataExprs    (rule 136)
	dec -> data identifier . kindAnnotation '=' dataExprs where tbindings    (rule 137)

	'='            reduce using rule 129
	'::'           shift, and enter state 110

	kindAnnotation goto state 109

State 106

	dec -> let identifier . typeAnnotation kindAnnotation '=' expr    (rule 134)
	dec -> let identifier . typeAnnotation kindAnnotation '=' expr where bindings    (rule 135)

	':'            shift, and enter state 108
	'='            reduce using rule 122
	'::'           reduce using rule 122

	typeAnnotation goto state 107

State 107

	dec -> let identifier typeAnnotation . kindAnnotation '=' expr    (rule 134)
	dec -> let identifier typeAnnotation . kindAnnotation '=' expr where bindings    (rule 135)

	'='            reduce using rule 129
	'::'           shift, and enter state 110

	kindAnnotation goto state 211

State 108

	typeAnnotation -> ':' . typeExpr                    (rule 123)
	typeAnnotation -> ':' . typeExpr where tbindings    (rule 124)
	typeAnnotation -> ':' . instance identifier ':' typeExpr    (rule 125)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	instance       shift, and enter state 210
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 209

State 109

	dec -> data identifier kindAnnotation . '=' dataExprs    (rule 136)
	dec -> data identifier kindAnnotation . '=' dataExprs where tbindings    (rule 137)

	'='            shift, and enter state 208


State 110

	kindAnnotation -> '::' . kindExpr                   (rule 130)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 207

State 111

	dec -> ty identifier kindAnnotation . '=' typeExpr    (rule 138)
	dec -> ty identifier kindAnnotation . '=' typeExpr where tbindings    (rule 139)

	'='            shift, and enter state 206


State 112

	kindExpr -> kindExpr . '->' kindExpr                (rule 126)
	kindExpr -> kindExpr '->' kindExpr .                (rule 126)

	')'            reduce using rule 126
	'->'           reduce using rule 126
	'='            reduce using rule 126
	%eof           reduce using rule 126


State 113

	kindExpr -> '(' kindExpr ')' .                      (rule 127)

	')'            reduce using rule 127
	'->'           reduce using rule 127
	'='            reduce using rule 127
	%eof           reduce using rule 127


State 114

	tagged -> identifier ':' typeExpr .                 (rule 113)
	typeExpr -> typeExpr . '->' typeExpr                (rule 119)

	let            reduce using rule 113
	where          reduce using rule 113
	data           reduce using rule 113
	ty             reduce using rule 113
	')'            reduce using rule 113
	'}'            reduce using rule 113
	';'            reduce using rule 113
	','            reduce using rule 113
	'->'           shift, and enter state 98
	'='            reduce using rule 113
	'|'            reduce using rule 113
	'::'           reduce using rule 113
	%eof           reduce using rule 113


State 115

	typeAtom -> identifier .                            (rule 103)

	id             reduce using rule 103
	number         reduce using rule 103
	string         reduce using rule 103
	boolean        reduce using rule 103
	'!'            reduce using rule 103
	'('            reduce using rule 103
	'{'            reduce using rule 103


State 116

	typeArgs -> typeArgs typeAtom .                     (rule 106)

	id             reduce using rule 106
	number         reduce using rule 106
	string         reduce using rule 106
	boolean        reduce using rule 106
	'!'            reduce using rule 106
	'('            reduce using rule 106
	'{'            reduce using rule 106


State 117

	typeExpr -> typeAtom typeArgs '!' .                 (rule 121)

	let            reduce using rule 121
	where          reduce using rule 121
	data           reduce using rule 121
	ty             reduce using rule 121
	')'            reduce using rule 121
	'}'            reduce using rule 121
	';'            reduce using rule 121
	','            reduce using rule 121
	'->'           reduce using rule 121
	'='            reduce using rule 121
	'|'            reduce using rule 121
	'::'           reduce using rule 121
	%eof           reduce using rule 121


State 118

	union -> union '|' typeExpr .                       (rule 115)
	typeExpr -> typeExpr . '->' typeExpr                (rule 119)

	let            reduce using rule 115
	where          reduce using rule 115
	data           reduce using rule 115
	ty             reduce using rule 115
	')'            reduce using rule 115
	'}'            reduce using rule 115
	';'            reduce using rule 115
	','            reduce using rule 115
	'->'           shift, and enter state 98
	'='            reduce using rule 115
	'|'            reduce using rule 115
	'::'           reduce using rule 115
	%eof           reduce using rule 115


State 119

	typeExpr -> typeExpr . '->' typeExpr                (rule 119)
	typeExpr -> typeExpr '->' typeExpr .                (rule 119)

	let            reduce using rule 119
	where          reduce using rule 119
	data           reduce using rule 119
	ty             reduce using rule 119
	')'            reduce using rule 119
	'}'            reduce using rule 119
	';'            reduce using rule 119
	','            reduce using rule 119
	'->'           shift, and enter state 98
	'='            reduce using rule 119
	'|'            reduce using rule 119
	'::'           reduce using rule 119
	%eof           reduce using rule 119


State 120

	ttuple -> '(' typeExpr ttupleElems . ')'            (rule 96)

	')'            shift, and enter state 205


State 121

	typeAtom -> '(' typeExpr ')' .                      (rule 104)

	id             reduce using rule 104
	number         reduce using rule 104
	string         reduce using rule 104
	boolean        reduce using rule 104
	'!'            reduce using rule 104
	let            reduce using rule 104
	where          reduce using rule 104
	data           reduce using rule 104
	ty             reduce using rule 104
	'('            reduce using rule 104
	')'            reduce using rule 104
	'{'            reduce using rule 104
	'}'            reduce using rule 104
	';'            reduce using rule 104
	','            reduce using rule 104
	'->'           reduce using rule 104
	'='            reduce using rule 104
	'|'            reduce using rule 104
	'::'           reduce using rule 104
	%eof           reduce using rule 104


State 122

	ttupleElems -> ',' . typeExpr                       (rule 94)
	ttupleElems -> ',' . typeExpr ttupleElems           (rule 95)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 204

State 123

	trecord -> '{' tpairs '}' .                         (rule 93)

	id             reduce using rule 93
	number         reduce using rule 93
	string         reduce using rule 93
	boolean        reduce using rule 93
	'!'            reduce using rule 93
	let            reduce using rule 93
	where          reduce using rule 93
	data           reduce using rule 93
	ty             reduce using rule 93
	'('            reduce using rule 93
	')'            reduce using rule 93
	'{'            reduce using rule 93
	'}'            reduce using rule 93
	';'            reduce using rule 93
	','            reduce using rule 93
	'->'           reduce using rule 93
	'='            reduce using rule 93
	'|'            reduce using rule 93
	'::'           reduce using rule 93
	%eof           reduce using rule 93


State 124

	tpairs -> identifier ':' . typeExpr ',' tpairs      (rule 91)
	tpairs -> identifier ':' . typeExpr                 (rule 92)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 203

State 125

	params -> params identifier .                       (rule 18)

	id             reduce using rule 18
	'->'           reduce using rule 18
	'=>'           reduce using rule 18


State 126

	typeExpr -> '\\' params '=>' . typeExpr             (rule 120)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 202

State 127

	args -> args atom .                                 (rule 20)

	id             reduce using rule 20
	number         reduce using rule 20
	string         reduce using rule 20
	boolean        reduce using rule 20
	'!'            reduce using rule 20
	'('            reduce using rule 20
	'['            reduce using rule 20
	'{'            reduce using rule 20


State 128

	fnApplication -> atom args '!' .                    (rule 21)

	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'^'            reduce using rule 21
	'++'           reduce using rule 21
	'=='           reduce using rule 21
	'!='           reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'||'           reduce using rule 21
	'&&'           reduce using rule 21
	'|>'           reduce using rule 21
	'<|'           reduce using rule 21
	let            reduce using rule 21
	where          reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	data           reduce using rule 21
	ty             reduce using rule 21
	')'            reduce using rule 21
	']'            reduce using rule 21
	'}'            reduce using rule 21
	';'            reduce using rule 21
	','            reduce using rule 21
	'|'            reduce using rule 21
	'.'            reduce using rule 21
	%eof           reduce using rule 21


State 129

	expr -> expr '.' identifier .                       (rule 64)

	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	'^'            reduce using rule 64
	'++'           reduce using rule 64
	'=='           reduce using rule 64
	'!='           reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'||'           reduce using rule 64
	'&&'           reduce using rule 64
	'|>'           reduce using rule 64
	'<|'           reduce using rule 64
	let            reduce using rule 64
	where          reduce using rule 64
	then           reduce using rule 64
	else           reduce using rule 64
	data           reduce using rule 64
	ty             reduce using rule 64
	')'            reduce using rule 64
	']'            reduce using rule 64
	'}'            reduce using rule 64
	';'            reduce using rule 64
	','            reduce using rule 64
	'|'            reduce using rule 64
	'.'            reduce using rule 64
	%eof           reduce using rule 64


State 130

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr '<|' expr .                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 79
	where          reduce using rule 79
	then           reduce using rule 79
	else           reduce using rule 79
	data           reduce using rule 79
	ty             reduce using rule 79
	')'            reduce using rule 79
	']'            reduce using rule 79
	'}'            reduce using rule 79
	';'            reduce using rule 79
	','            reduce using rule 79
	'|'            reduce using rule 79
	'.'            reduce using rule 79
	%eof           reduce using rule 79


State 131

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr '|>' expr .                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 78
	where          reduce using rule 78
	then           reduce using rule 78
	else           reduce using rule 78
	data           reduce using rule 78
	ty             reduce using rule 78
	')'            reduce using rule 78
	']'            reduce using rule 78
	'}'            reduce using rule 78
	';'            reduce using rule 78
	','            reduce using rule 78
	'|'            reduce using rule 78
	'.'            reduce using rule 78
	%eof           reduce using rule 78


State 132

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr '&&' expr .                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 71
	where          reduce using rule 71
	then           reduce using rule 71
	else           reduce using rule 71
	data           reduce using rule 71
	ty             reduce using rule 71
	')'            reduce using rule 71
	']'            reduce using rule 71
	'}'            reduce using rule 71
	';'            reduce using rule 71
	','            reduce using rule 71
	'|'            reduce using rule 71
	'.'            reduce using rule 71
	%eof           reduce using rule 71


State 133

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr '||' expr .                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 70
	where          reduce using rule 70
	then           reduce using rule 70
	else           reduce using rule 70
	data           reduce using rule 70
	ty             reduce using rule 70
	')'            reduce using rule 70
	']'            reduce using rule 70
	'}'            reduce using rule 70
	';'            reduce using rule 70
	','            reduce using rule 70
	'|'            reduce using rule 70
	'.'            reduce using rule 70
	%eof           reduce using rule 70


State 134

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr '>=' expr .                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 77
	where          reduce using rule 77
	then           reduce using rule 77
	else           reduce using rule 77
	data           reduce using rule 77
	ty             reduce using rule 77
	')'            reduce using rule 77
	']'            reduce using rule 77
	'}'            reduce using rule 77
	';'            reduce using rule 77
	','            reduce using rule 77
	'|'            reduce using rule 77
	'.'            reduce using rule 77
	%eof           reduce using rule 77


State 135

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr '>' expr .                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 75
	where          reduce using rule 75
	then           reduce using rule 75
	else           reduce using rule 75
	data           reduce using rule 75
	ty             reduce using rule 75
	')'            reduce using rule 75
	']'            reduce using rule 75
	'}'            reduce using rule 75
	';'            reduce using rule 75
	','            reduce using rule 75
	'|'            reduce using rule 75
	'.'            reduce using rule 75
	%eof           reduce using rule 75


State 136

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr '<=' expr .                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 76
	where          reduce using rule 76
	then           reduce using rule 76
	else           reduce using rule 76
	data           reduce using rule 76
	ty             reduce using rule 76
	')'            reduce using rule 76
	']'            reduce using rule 76
	'}'            reduce using rule 76
	';'            reduce using rule 76
	','            reduce using rule 76
	'|'            reduce using rule 76
	'.'            reduce using rule 76
	%eof           reduce using rule 76


State 137

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr '<' expr .                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 74
	where          reduce using rule 74
	then           reduce using rule 74
	else           reduce using rule 74
	data           reduce using rule 74
	ty             reduce using rule 74
	')'            reduce using rule 74
	']'            reduce using rule 74
	'}'            reduce using rule 74
	';'            reduce using rule 74
	','            reduce using rule 74
	'|'            reduce using rule 74
	'.'            reduce using rule 74
	%eof           reduce using rule 74


State 138

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr '!=' expr .                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 73
	where          reduce using rule 73
	then           reduce using rule 73
	else           reduce using rule 73
	data           reduce using rule 73
	ty             reduce using rule 73
	')'            reduce using rule 73
	']'            reduce using rule 73
	'}'            reduce using rule 73
	';'            reduce using rule 73
	','            reduce using rule 73
	'|'            reduce using rule 73
	'.'            reduce using rule 73
	%eof           reduce using rule 73


State 139

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr '==' expr .                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 72
	where          reduce using rule 72
	then           reduce using rule 72
	else           reduce using rule 72
	data           reduce using rule 72
	ty             reduce using rule 72
	')'            reduce using rule 72
	']'            reduce using rule 72
	'}'            reduce using rule 72
	';'            reduce using rule 72
	','            reduce using rule 72
	'|'            reduce using rule 72
	'.'            reduce using rule 72
	%eof           reduce using rule 72


State 140

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)
	expr -> expr '++' expr .                            (rule 80)

	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           reduce using rule 80
	'=='           reduce using rule 80
	'!='           reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'||'           reduce using rule 80
	'&&'           reduce using rule 80
	'|>'           reduce using rule 80
	'<|'           reduce using rule 80
	let            reduce using rule 80
	where          reduce using rule 80
	then           reduce using rule 80
	else           reduce using rule 80
	data           reduce using rule 80
	ty             reduce using rule 80
	')'            reduce using rule 80
	']'            reduce using rule 80
	'}'            reduce using rule 80
	';'            reduce using rule 80
	','            reduce using rule 80
	'|'            reduce using rule 80
	'.'            reduce using rule 80
	%eof           reduce using rule 80


State 141

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr '^' expr .                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'/'            reduce using rule 69
	'^'            reduce using rule 69
	'++'           reduce using rule 69
	'=='           reduce using rule 69
	'!='           reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'||'           reduce using rule 69
	'&&'           reduce using rule 69
	'|>'           reduce using rule 69
	'<|'           reduce using rule 69
	let            reduce using rule 69
	where          reduce using rule 69
	then           reduce using rule 69
	else           reduce using rule 69
	data           reduce using rule 69
	ty             reduce using rule 69
	')'            reduce using rule 69
	']'            reduce using rule 69
	'}'            reduce using rule 69
	';'            reduce using rule 69
	','            reduce using rule 69
	'|'            reduce using rule 69
	'.'            reduce using rule 69
	%eof           reduce using rule 69


State 142

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr '/' expr .                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'/'            reduce using rule 68
	'^'            shift, and enter state 79
	'++'           reduce using rule 68
	'=='           reduce using rule 68
	'!='           reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'||'           reduce using rule 68
	'&&'           reduce using rule 68
	'|>'           reduce using rule 68
	'<|'           reduce using rule 68
	let            reduce using rule 68
	where          reduce using rule 68
	then           reduce using rule 68
	else           reduce using rule 68
	data           reduce using rule 68
	ty             reduce using rule 68
	')'            reduce using rule 68
	']'            reduce using rule 68
	'}'            reduce using rule 68
	';'            reduce using rule 68
	','            reduce using rule 68
	'|'            reduce using rule 68
	'.'            reduce using rule 68
	%eof           reduce using rule 68


State 143

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr '*' expr .                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	'^'            shift, and enter state 79
	'++'           reduce using rule 67
	'=='           reduce using rule 67
	'!='           reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'||'           reduce using rule 67
	'&&'           reduce using rule 67
	'|>'           reduce using rule 67
	'<|'           reduce using rule 67
	let            reduce using rule 67
	where          reduce using rule 67
	then           reduce using rule 67
	else           reduce using rule 67
	data           reduce using rule 67
	ty             reduce using rule 67
	')'            reduce using rule 67
	']'            reduce using rule 67
	'}'            reduce using rule 67
	';'            reduce using rule 67
	','            reduce using rule 67
	'|'            reduce using rule 67
	'.'            reduce using rule 67
	%eof           reduce using rule 67


State 144

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr '-' expr .                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           reduce using rule 66
	'=='           reduce using rule 66
	'!='           reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'||'           reduce using rule 66
	'&&'           reduce using rule 66
	'|>'           reduce using rule 66
	'<|'           reduce using rule 66
	let            reduce using rule 66
	where          reduce using rule 66
	then           reduce using rule 66
	else           reduce using rule 66
	data           reduce using rule 66
	ty             reduce using rule 66
	')'            reduce using rule 66
	']'            reduce using rule 66
	'}'            reduce using rule 66
	';'            reduce using rule 66
	','            reduce using rule 66
	'|'            reduce using rule 66
	'.'            reduce using rule 66
	%eof           reduce using rule 66


State 145

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr '+' expr .                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           reduce using rule 65
	'=='           reduce using rule 65
	'!='           reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'||'           reduce using rule 65
	'&&'           reduce using rule 65
	'|>'           reduce using rule 65
	'<|'           reduce using rule 65
	let            reduce using rule 65
	where          reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	data           reduce using rule 65
	ty             reduce using rule 65
	')'            reduce using rule 65
	']'            reduce using rule 65
	'}'            reduce using rule 65
	';'            reduce using rule 65
	','            reduce using rule 65
	'|'            reduce using rule 65
	'.'            reduce using rule 65
	%eof           reduce using rule 65


State 146

	controlFlow -> if expr then . expr else expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 201

State 147

	cases -> cases . '|' pattern '->' expr              (rule 53)
	matchExpr -> match expr cases .                     (rule 54)

	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'^'            reduce using rule 54
	'++'           reduce using rule 54
	'=='           reduce using rule 54
	'!='           reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54
	'&&'           reduce using rule 54
	'|>'           reduce using rule 54
	'<|'           reduce using rule 54
	let            reduce using rule 54
	where          reduce using rule 54
	then           reduce using rule 54
	else           reduce using rule 54
	data           reduce using rule 54
	ty             reduce using rule 54
	')'            reduce using rule 54
	']'            reduce using rule 54
	'}'            reduce using rule 54
	';'            reduce using rule 54
	','            reduce using rule 54
	'|'            shift, and enter state 200
	'.'            reduce using rule 54
	%eof           reduce using rule 54


State 148

	cases -> '|' . pattern '->' expr                    (rule 52)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	'('            shift, and enter state 169
	'['            shift, and enter state 170
	'{'            shift, and enter state 171

	identifier     goto state 166
	patData        goto state 58
	pattern        goto state 199
	term           goto state 168

State 149

	tuple -> '(' expr tupleElems . ')'                  (rule 16)

	')'            shift, and enter state 198


State 150

	atom -> '(' expr ')' .                              (rule 51)

	id             reduce using rule 51
	number         reduce using rule 51
	string         reduce using rule 51
	boolean        reduce using rule 51
	'!'            reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'^'            reduce using rule 51
	'++'           reduce using rule 51
	'=='           reduce using rule 51
	'!='           reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51
	'&&'           reduce using rule 51
	'|>'           reduce using rule 51
	'<|'           reduce using rule 51
	let            reduce using rule 51
	where          reduce using rule 51
	then           reduce using rule 51
	else           reduce using rule 51
	data           reduce using rule 51
	ty             reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51
	';'            reduce using rule 51
	','            reduce using rule 51
	'|'            reduce using rule 51
	'.'            reduce using rule 51
	%eof           reduce using rule 51


State 151

	tupleElems -> ',' . expr                            (rule 14)
	tupleElems -> ',' . expr tupleElems                 (rule 15)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 197

State 152

	listElements -> expr ',' . listElements             (rule 12)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	']'            reduce using rule 10
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	listElements   goto state 196
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 71

State 153

	list -> '[' listElements ']' .                      (rule 13)

	id             reduce using rule 13
	number         reduce using rule 13
	string         reduce using rule 13
	boolean        reduce using rule 13
	'!'            reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            reduce using rule 13
	'/'            reduce using rule 13
	'^'            reduce using rule 13
	'++'           reduce using rule 13
	'=='           reduce using rule 13
	'!='           reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'||'           reduce using rule 13
	'&&'           reduce using rule 13
	'|>'           reduce using rule 13
	'<|'           reduce using rule 13
	let            reduce using rule 13
	where          reduce using rule 13
	then           reduce using rule 13
	else           reduce using rule 13
	data           reduce using rule 13
	ty             reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'['            reduce using rule 13
	']'            reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	';'            reduce using rule 13
	','            reduce using rule 13
	'|'            reduce using rule 13
	'.'            reduce using rule 13
	%eof           reduce using rule 13


State 154

	pairs -> identifier . ':' expr ',' pairs            (rule 7)
	pairs -> identifier . ':' expr                      (rule 8)
	patRecordKeys -> identifier .                       (rule 28)
	patRecordKeys -> identifier . ',' patRecordKeys     (rule 29)
	patData -> identifier . ':'                         (rule 32)
	pattern -> identifier .                             (rule 34)
	atom -> identifier .                                (rule 45)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'('            reduce using rule 45
	'['            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 28
	':'            shift, and enter state 177
	','            shift, and enter state 195
	'<-'           reduce using rule 34
	'|'            reduce using rule 28


State 155

	pattern -> '{' patRecordKeys . patRest '}'          (rule 40)

	'}'            reduce using rule 30
	'|'            shift, and enter state 192

	patRest        goto state 194

State 156

	patListElems -> identifier .                        (rule 23)
	patListElems -> identifier . ',' patListElems       (rule 24)
	atom -> identifier .                                (rule 45)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	'^'            reduce using rule 45
	'++'           reduce using rule 45
	'=='           reduce using rule 45
	'!='           reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45
	'&&'           reduce using rule 45
	'|>'           reduce using rule 45
	'<|'           reduce using rule 45
	'('            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
			(reduce using rule 23)

	'{'            reduce using rule 45
	','            shift, and enter state 193
			(reduce using rule 45)

	'|'            reduce using rule 23
	'.'            reduce using rule 45


State 157

	pattern -> '[' patListElems . patRest ']'           (rule 39)

	']'            reduce using rule 30
	'|'            shift, and enter state 192

	patRest        goto state 191

State 158

	pattern -> '[' ']' .                                (rule 38)

	id             reduce using rule 38
	number         reduce using rule 38
	string         reduce using rule 38
	boolean        reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'['            reduce using rule 38
	'{'            reduce using rule 38
	','            reduce using rule 38
	'->'           reduce using rule 38
	'<-'           reduce using rule 38


State 159

	patData -> identifier . ':'                         (rule 32)
	pattern -> identifier .                             (rule 34)
	pattern -> '(' identifier . patTupleElems ')'       (rule 37)
	atom -> identifier .                                (rule 45)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	'^'            reduce using rule 45
	'++'           reduce using rule 45
	'=='           reduce using rule 45
	'!='           reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45
	'&&'           reduce using rule 45
	'|>'           reduce using rule 45
	'<|'           reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	'{'            reduce using rule 45
	':'            shift, and enter state 186
	','            shift, and enter state 190
			(reduce using rule 45)

	'.'            reduce using rule 45

	patTupleElems  goto state 189

State 160

	pattern -> '(' pattern . ')'                        (rule 41)

	')'            shift, and enter state 188


State 161

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)
	statement -> return expr .                          (rule 83)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	';'            reduce using rule 83
	'.'            shift, and enter state 91


State 162

	patData -> identifier . ':'                         (rule 32)
	pattern -> identifier .                             (rule 34)
	atom -> identifier .                                (rule 45)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'('            reduce using rule 45
	'['            reduce using rule 45
	'{'            reduce using rule 45
	':'            shift, and enter state 186
	','            reduce using rule 34
	'<-'           reduce using rule 34


State 163

	block -> block statement . ';'                      (rule 89)

	';'            shift, and enter state 187


State 164

	atom -> '{' block '}' .                             (rule 50)

	id             reduce using rule 50
	number         reduce using rule 50
	string         reduce using rule 50
	boolean        reduce using rule 50
	'!'            reduce using rule 50
	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'^'            reduce using rule 50
	'++'           reduce using rule 50
	'=='           reduce using rule 50
	'!='           reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50
	'&&'           reduce using rule 50
	'|>'           reduce using rule 50
	'<|'           reduce using rule 50
	let            reduce using rule 50
	where          reduce using rule 50
	then           reduce using rule 50
	else           reduce using rule 50
	data           reduce using rule 50
	ty             reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'{'            reduce using rule 50
	'}'            reduce using rule 50
	';'            reduce using rule 50
	','            reduce using rule 50
	'|'            reduce using rule 50
	'.'            reduce using rule 50
	%eof           reduce using rule 50


State 165

	block -> statement ';' .                            (rule 88)

	id             reduce using rule 88
	number         reduce using rule 88
	string         reduce using rule 88
	boolean        reduce using rule 88
	let            reduce using rule 88
	return         reduce using rule 88
	data           reduce using rule 88
	ty             reduce using rule 88
	'('            reduce using rule 88
	'['            reduce using rule 88
	'{'            reduce using rule 88
	'}'            reduce using rule 88


State 166

	patData -> identifier . ':'                         (rule 32)
	pattern -> identifier .                             (rule 34)

	id             reduce using rule 34
	number         reduce using rule 34
	string         reduce using rule 34
	boolean        reduce using rule 34
	'('            reduce using rule 34
	'['            reduce using rule 34
	'{'            reduce using rule 34
	':'            shift, and enter state 186
	'->'           reduce using rule 34
	'<-'           reduce using rule 34


State 167

	patterns -> patterns pattern .                      (rule 82)

	id             reduce using rule 82
	number         reduce using rule 82
	string         reduce using rule 82
	boolean        reduce using rule 82
	'('            reduce using rule 82
	'['            reduce using rule 82
	'{'            reduce using rule 82
	'<-'           reduce using rule 82


State 168

	pattern -> term .                                   (rule 35)

	id             reduce using rule 35
	number         reduce using rule 35
	string         reduce using rule 35
	boolean        reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	'{'            reduce using rule 35
	'->'           reduce using rule 35
	'<-'           reduce using rule 35


State 169

	pattern -> '(' . identifier patTupleElems ')'       (rule 37)
	pattern -> '(' . pattern ')'                        (rule 41)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	'('            shift, and enter state 169
	'['            shift, and enter state 170
	'{'            shift, and enter state 171

	identifier     goto state 185
	patData        goto state 58
	pattern        goto state 160
	term           goto state 168

State 170

	pattern -> '[' . ']'                                (rule 38)
	pattern -> '[' . patListElems patRest ']'           (rule 39)

	id             shift, and enter state 6
	']'            shift, and enter state 158

	identifier     goto state 184
	patListElems   goto state 157

State 171

	pattern -> '{' . patRecordKeys patRest '}'          (rule 40)

	id             shift, and enter state 6
	'}'            reduce using rule 27
	'|'            reduce using rule 27

	identifier     goto state 183
	patRecordKeys  goto state 155

State 172

	statement -> patterns '<-' . expr                   (rule 85)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 182

State 173

	patterns -> pattern ',' .                           (rule 81)

	id             reduce using rule 81
	number         reduce using rule 81
	string         reduce using rule 81
	boolean        reduce using rule 81
	'('            reduce using rule 81
	'['            reduce using rule 81
	'{'            reduce using rule 81
	'<-'           reduce using rule 81


State 174

	statement -> pattern '<-' . expr                    (rule 84)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 181

State 175

	patData -> patData identifier .                     (rule 33)

	id             reduce using rule 33
	number         reduce using rule 33
	string         reduce using rule 33
	boolean        reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'['            reduce using rule 33
	'{'            reduce using rule 33
	','            reduce using rule 33
	'->'           reduce using rule 33
	'<-'           reduce using rule 33


State 176

	record -> '{' pairs '}' .                           (rule 9)

	id             reduce using rule 9
	number         reduce using rule 9
	string         reduce using rule 9
	boolean        reduce using rule 9
	'!'            reduce using rule 9
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'*'            reduce using rule 9
	'/'            reduce using rule 9
	'^'            reduce using rule 9
	'++'           reduce using rule 9
	'=='           reduce using rule 9
	'!='           reduce using rule 9
	'<'            reduce using rule 9
	'<='           reduce using rule 9
	'>'            reduce using rule 9
	'>='           reduce using rule 9
	'||'           reduce using rule 9
	'&&'           reduce using rule 9
	'|>'           reduce using rule 9
	'<|'           reduce using rule 9
	let            reduce using rule 9
	where          reduce using rule 9
	then           reduce using rule 9
	else           reduce using rule 9
	data           reduce using rule 9
	ty             reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'['            reduce using rule 9
	']'            reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	';'            reduce using rule 9
	','            reduce using rule 9
	'|'            reduce using rule 9
	'.'            reduce using rule 9
	%eof           reduce using rule 9


State 177

	pairs -> identifier ':' . expr ',' pairs            (rule 7)
	pairs -> identifier ':' . expr                      (rule 8)
	patData -> identifier ':' .                         (rule 32)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	','            reduce using rule 32
	'<-'           reduce using rule 32
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 180

State 178

	expr -> '\\' params '->' . expr                     (rule 61)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 179

State 179

	expr -> '\\' params '->' expr .                     (rule 61)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	let            reduce using rule 61
	where          reduce using rule 61
	then           reduce using rule 61
	else           reduce using rule 61
	data           reduce using rule 61
	ty             reduce using rule 61
	')'            reduce using rule 61
	']'            reduce using rule 61
	'}'            reduce using rule 61
	';'            reduce using rule 61
	','            reduce using rule 61
	'|'            reduce using rule 61
	'.'            shift, and enter state 91
	%eof           reduce using rule 61


State 180

	pairs -> identifier ':' expr . ',' pairs            (rule 7)
	pairs -> identifier ':' expr .                      (rule 8)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	'}'            reduce using rule 8
	','            shift, and enter state 232
	'.'            shift, and enter state 91


State 181

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)
	statement -> pattern '<-' expr .                    (rule 84)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	';'            reduce using rule 84
	'.'            shift, and enter state 91


State 182

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)
	statement -> patterns '<-' expr .                   (rule 85)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	';'            reduce using rule 85
	'.'            shift, and enter state 91


State 183

	patRecordKeys -> identifier .                       (rule 28)
	patRecordKeys -> identifier . ',' patRecordKeys     (rule 29)

	'}'            reduce using rule 28
	','            shift, and enter state 195
	'|'            reduce using rule 28


State 184

	patListElems -> identifier .                        (rule 23)
	patListElems -> identifier . ',' patListElems       (rule 24)

	']'            reduce using rule 23
	','            shift, and enter state 193
	'|'            reduce using rule 23


State 185

	patData -> identifier . ':'                         (rule 32)
	pattern -> identifier .                             (rule 34)
	pattern -> '(' identifier . patTupleElems ')'       (rule 37)

	')'            reduce using rule 34
	':'            shift, and enter state 186
	','            shift, and enter state 190

	patTupleElems  goto state 189

State 186

	patData -> identifier ':' .                         (rule 32)

	id             reduce using rule 32
	number         reduce using rule 32
	string         reduce using rule 32
	boolean        reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	'{'            reduce using rule 32
	','            reduce using rule 32
	'->'           reduce using rule 32
	'<-'           reduce using rule 32


State 187

	block -> block statement ';' .                      (rule 89)

	id             reduce using rule 89
	number         reduce using rule 89
	string         reduce using rule 89
	boolean        reduce using rule 89
	let            reduce using rule 89
	return         reduce using rule 89
	data           reduce using rule 89
	ty             reduce using rule 89
	'('            reduce using rule 89
	'['            reduce using rule 89
	'{'            reduce using rule 89
	'}'            reduce using rule 89


State 188

	pattern -> '(' pattern ')' .                        (rule 41)

	id             reduce using rule 41
	number         reduce using rule 41
	string         reduce using rule 41
	boolean        reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	'{'            reduce using rule 41
	','            reduce using rule 41
	'->'           reduce using rule 41
	'<-'           reduce using rule 41


State 189

	pattern -> '(' identifier patTupleElems . ')'       (rule 37)

	')'            shift, and enter state 231


State 190

	patTupleElems -> ',' . identifier                   (rule 25)
	patTupleElems -> ',' . identifier patTupleElems     (rule 26)

	id             shift, and enter state 6

	identifier     goto state 230

State 191

	pattern -> '[' patListElems patRest . ']'           (rule 39)

	']'            shift, and enter state 229


State 192

	patRest -> '|' . identifier                         (rule 31)

	id             shift, and enter state 6

	identifier     goto state 228

State 193

	patListElems -> identifier ',' . patListElems       (rule 24)

	id             shift, and enter state 6

	identifier     goto state 184
	patListElems   goto state 227

State 194

	pattern -> '{' patRecordKeys patRest . '}'          (rule 40)

	'}'            shift, and enter state 226


State 195

	patRecordKeys -> identifier ',' . patRecordKeys     (rule 29)

	id             shift, and enter state 6
	'}'            reduce using rule 27
	'|'            reduce using rule 27

	identifier     goto state 183
	patRecordKeys  goto state 225

State 196

	listElements -> expr ',' listElements .             (rule 12)

	']'            reduce using rule 12


State 197

	tupleElems -> ',' expr .                            (rule 14)
	tupleElems -> ',' expr . tupleElems                 (rule 15)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	')'            reduce using rule 14
	','            shift, and enter state 151
	'.'            shift, and enter state 91

	tupleElems     goto state 224

State 198

	tuple -> '(' expr tupleElems ')' .                  (rule 16)

	id             reduce using rule 16
	number         reduce using rule 16
	string         reduce using rule 16
	boolean        reduce using rule 16
	'!'            reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            reduce using rule 16
	'/'            reduce using rule 16
	'^'            reduce using rule 16
	'++'           reduce using rule 16
	'=='           reduce using rule 16
	'!='           reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'||'           reduce using rule 16
	'&&'           reduce using rule 16
	'|>'           reduce using rule 16
	'<|'           reduce using rule 16
	let            reduce using rule 16
	where          reduce using rule 16
	then           reduce using rule 16
	else           reduce using rule 16
	data           reduce using rule 16
	ty             reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	';'            reduce using rule 16
	','            reduce using rule 16
	'|'            reduce using rule 16
	'.'            reduce using rule 16
	%eof           reduce using rule 16


State 199

	cases -> '|' pattern . '->' expr                    (rule 52)

	'->'           shift, and enter state 223


State 200

	cases -> cases '|' . pattern '->' expr              (rule 53)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	'('            shift, and enter state 169
	'['            shift, and enter state 170
	'{'            shift, and enter state 171

	identifier     goto state 166
	patData        goto state 58
	pattern        goto state 222
	term           goto state 168

State 201

	controlFlow -> if expr then expr . else expr        (rule 22)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	else           shift, and enter state 221
	'.'            shift, and enter state 91


State 202

	typeExpr -> typeExpr . '->' typeExpr                (rule 119)
	typeExpr -> '\\' params '=>' typeExpr .             (rule 120)

	let            reduce using rule 120
	where          reduce using rule 120
	data           reduce using rule 120
	ty             reduce using rule 120
	')'            reduce using rule 120
	'}'            reduce using rule 120
	';'            reduce using rule 120
	','            reduce using rule 120
	'->'           shift, and enter state 98
	'='            reduce using rule 120
	'|'            reduce using rule 120
	'::'           reduce using rule 120
	%eof           reduce using rule 120


State 203

	tpairs -> identifier ':' typeExpr . ',' tpairs      (rule 91)
	tpairs -> identifier ':' typeExpr .                 (rule 92)
	typeExpr -> typeExpr . '->' typeExpr                (rule 119)

	'}'            reduce using rule 92
	','            shift, and enter state 220
	'->'           shift, and enter state 98


State 204

	ttupleElems -> ',' typeExpr .                       (rule 94)
	ttupleElems -> ',' typeExpr . ttupleElems           (rule 95)
	typeExpr -> typeExpr . '->' typeExpr                (rule 119)

	')'            reduce using rule 94
	','            shift, and enter state 122
	'->'           shift, and enter state 98

	ttupleElems    goto state 219

State 205

	ttuple -> '(' typeExpr ttupleElems ')' .            (rule 96)

	id             reduce using rule 96
	number         reduce using rule 96
	string         reduce using rule 96
	boolean        reduce using rule 96
	'!'            reduce using rule 96
	let            reduce using rule 96
	where          reduce using rule 96
	data           reduce using rule 96
	ty             reduce using rule 96
	'('            reduce using rule 96
	')'            reduce using rule 96
	'{'            reduce using rule 96
	'}'            reduce using rule 96
	';'            reduce using rule 96
	','            reduce using rule 96
	'->'           reduce using rule 96
	'='            reduce using rule 96
	'|'            reduce using rule 96
	'::'           reduce using rule 96
	%eof           reduce using rule 96


State 206

	dec -> ty identifier kindAnnotation '=' . typeExpr    (rule 138)
	dec -> ty identifier kindAnnotation '=' . typeExpr where tbindings    (rule 139)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 218

State 207

	kindExpr -> kindExpr . '->' kindExpr                (rule 126)
	kindAnnotation -> '::' kindExpr .                   (rule 130)

	'->'           shift, and enter state 103
	'='            reduce using rule 130


State 208

	dec -> data identifier kindAnnotation '=' . dataExprs    (rule 136)
	dec -> data identifier kindAnnotation '=' . dataExprs where tbindings    (rule 137)

	id             shift, and enter state 6

	identifier     goto state 215
	dataExpr       goto state 216
	dataExprs      goto state 217

State 209

	typeExpr -> typeExpr . '->' typeExpr                (rule 119)
	typeAnnotation -> ':' typeExpr .                    (rule 123)
	typeAnnotation -> ':' typeExpr . where tbindings    (rule 124)

	where          shift, and enter state 214
	'->'           shift, and enter state 98
	'='            reduce using rule 123
	'::'           reduce using rule 123


State 210

	typeAnnotation -> ':' instance . identifier ':' typeExpr    (rule 125)

	id             shift, and enter state 6

	identifier     goto state 213

State 211

	dec -> let identifier typeAnnotation kindAnnotation . '=' expr    (rule 134)
	dec -> let identifier typeAnnotation kindAnnotation . '=' expr where bindings    (rule 135)

	'='            shift, and enter state 212


State 212

	dec -> let identifier typeAnnotation kindAnnotation '=' . expr    (rule 134)
	dec -> let identifier typeAnnotation kindAnnotation '=' . expr where bindings    (rule 135)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 248

State 213

	typeAnnotation -> ':' instance identifier . ':' typeExpr    (rule 125)

	':'            shift, and enter state 247


State 214

	typeAnnotation -> ':' typeExpr where . tbindings    (rule 124)

	id             shift, and enter state 6

	identifier     goto state 244
	tbinding       goto state 245
	tbindings      goto state 246

State 215

	dataExpr -> identifier . ':' typeExpr               (rule 131)

	':'            shift, and enter state 243


State 216

	dataExprs -> dataExpr .                             (rule 132)

	let            reduce using rule 132
	where          reduce using rule 132
	data           reduce using rule 132
	ty             reduce using rule 132
	';'            reduce using rule 132
	'|'            reduce using rule 132
	%eof           reduce using rule 132


State 217

	dataExprs -> dataExprs . '|' dataExpr               (rule 133)
	dec -> data identifier kindAnnotation '=' dataExprs .    (rule 136)
	dec -> data identifier kindAnnotation '=' dataExprs . where tbindings    (rule 137)

	let            reduce using rule 136
	where          shift, and enter state 241
	data           reduce using rule 136
	ty             reduce using rule 136
	';'            reduce using rule 136
	'|'            shift, and enter state 242
	%eof           reduce using rule 136


State 218

	typeExpr -> typeExpr . '->' typeExpr                (rule 119)
	dec -> ty identifier kindAnnotation '=' typeExpr .    (rule 138)
	dec -> ty identifier kindAnnotation '=' typeExpr . where tbindings    (rule 139)

	let            reduce using rule 138
	where          shift, and enter state 240
	data           reduce using rule 138
	ty             reduce using rule 138
	';'            reduce using rule 138
	'->'           shift, and enter state 98
	%eof           reduce using rule 138


State 219

	ttupleElems -> ',' typeExpr ttupleElems .           (rule 95)

	')'            reduce using rule 95


State 220

	tpairs -> identifier ':' typeExpr ',' . tpairs      (rule 91)

	id             shift, and enter state 6
	'}'            reduce using rule 90

	identifier     goto state 95
	tpairs         goto state 239

State 221

	controlFlow -> if expr then expr else . expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 238

State 222

	cases -> cases '|' pattern . '->' expr              (rule 53)

	'->'           shift, and enter state 237


State 223

	cases -> '|' pattern '->' . expr                    (rule 52)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 236

State 224

	tupleElems -> ',' expr tupleElems .                 (rule 15)

	')'            reduce using rule 15


State 225

	patRecordKeys -> identifier ',' patRecordKeys .     (rule 29)

	'}'            reduce using rule 29
	'|'            reduce using rule 29


State 226

	pattern -> '{' patRecordKeys patRest '}' .          (rule 40)

	id             reduce using rule 40
	number         reduce using rule 40
	string         reduce using rule 40
	boolean        reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'['            reduce using rule 40
	'{'            reduce using rule 40
	','            reduce using rule 40
	'->'           reduce using rule 40
	'<-'           reduce using rule 40


State 227

	patListElems -> identifier ',' patListElems .       (rule 24)

	']'            reduce using rule 24
	'|'            reduce using rule 24


State 228

	patRest -> '|' identifier .                         (rule 31)

	']'            reduce using rule 31
	'}'            reduce using rule 31


State 229

	pattern -> '[' patListElems patRest ']' .           (rule 39)

	id             reduce using rule 39
	number         reduce using rule 39
	string         reduce using rule 39
	boolean        reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'['            reduce using rule 39
	'{'            reduce using rule 39
	','            reduce using rule 39
	'->'           reduce using rule 39
	'<-'           reduce using rule 39


State 230

	patTupleElems -> ',' identifier .                   (rule 25)
	patTupleElems -> ',' identifier . patTupleElems     (rule 26)

	')'            reduce using rule 25
	','            shift, and enter state 190

	patTupleElems  goto state 235

State 231

	pattern -> '(' identifier patTupleElems ')' .       (rule 37)

	id             reduce using rule 37
	number         reduce using rule 37
	string         reduce using rule 37
	boolean        reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'['            reduce using rule 37
	'{'            reduce using rule 37
	','            reduce using rule 37
	'->'           reduce using rule 37
	'<-'           reduce using rule 37


State 232

	pairs -> identifier ':' expr ',' . pairs            (rule 7)

	id             shift, and enter state 6
	'}'            reduce using rule 6

	identifier     goto state 233
	pairs          goto state 234

State 233

	pairs -> identifier . ':' expr ',' pairs            (rule 7)
	pairs -> identifier . ':' expr                      (rule 8)

	':'            shift, and enter state 261


State 234

	pairs -> identifier ':' expr ',' pairs .            (rule 7)

	'}'            reduce using rule 7


State 235

	patTupleElems -> ',' identifier patTupleElems .     (rule 26)

	')'            reduce using rule 26


State 236

	cases -> '|' pattern '->' expr .                    (rule 52)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	let            reduce using rule 52
	where          reduce using rule 52
	then           reduce using rule 52
	else           reduce using rule 52
	data           reduce using rule 52
	ty             reduce using rule 52
	')'            reduce using rule 52
	']'            reduce using rule 52
	'}'            reduce using rule 52
	';'            reduce using rule 52
	','            reduce using rule 52
	'|'            reduce using rule 52
	'.'            shift, and enter state 91
	%eof           reduce using rule 52


State 237

	cases -> cases '|' pattern '->' . expr              (rule 53)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 260

State 238

	controlFlow -> if expr then expr else expr .        (rule 22)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	let            reduce using rule 22
	where          reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	data           reduce using rule 22
	ty             reduce using rule 22
	')'            reduce using rule 22
	']'            reduce using rule 22
	'}'            reduce using rule 22
	';'            reduce using rule 22
	','            reduce using rule 22
	'|'            reduce using rule 22
	'.'            shift, and enter state 91
	%eof           reduce using rule 22


State 239

	tpairs -> identifier ':' typeExpr ',' tpairs .      (rule 91)

	'}'            reduce using rule 91


State 240

	dec -> ty identifier kindAnnotation '=' typeExpr where . tbindings    (rule 139)

	id             shift, and enter state 6

	identifier     goto state 244
	tbinding       goto state 245
	tbindings      goto state 259

State 241

	dec -> data identifier kindAnnotation '=' dataExprs where . tbindings    (rule 137)

	id             shift, and enter state 6

	identifier     goto state 244
	tbinding       goto state 245
	tbindings      goto state 258

State 242

	dataExprs -> dataExprs '|' . dataExpr               (rule 133)

	id             shift, and enter state 6

	identifier     goto state 215
	dataExpr       goto state 257

State 243

	dataExpr -> identifier ':' . typeExpr               (rule 131)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 256

State 244

	tbinding -> identifier . '=' typeExpr               (rule 107)
	tbinding -> identifier . implements typeExpr        (rule 108)
	tbinding -> identifier . '|->' typeExpr             (rule 109)
	tbinding -> identifier . '|' typeExpr               (rule 110)

	implements     shift, and enter state 252
	'|->'          shift, and enter state 253
	'='            shift, and enter state 254
	'|'            shift, and enter state 255


State 245

	tbindings -> tbinding .                             (rule 111)

	let            reduce using rule 111
	data           reduce using rule 111
	ty             reduce using rule 111
	';'            reduce using rule 111
	','            reduce using rule 111
	'='            reduce using rule 111
	'::'           reduce using rule 111
	%eof           reduce using rule 111


State 246

	tbindings -> tbindings . ',' tbinding               (rule 112)
	typeAnnotation -> ':' typeExpr where tbindings .    (rule 124)

	','            shift, and enter state 251
	'='            reduce using rule 124
	'::'           reduce using rule 124


State 247

	typeAnnotation -> ':' instance identifier ':' . typeExpr    (rule 125)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 250

State 248

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr .    (rule 134)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr . where bindings    (rule 135)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	let            reduce using rule 134
	where          shift, and enter state 249
	data           reduce using rule 134
	ty             reduce using rule 134
	';'            reduce using rule 134
	'.'            shift, and enter state 91
	%eof           reduce using rule 134


State 249

	dec -> let identifier typeAnnotation kindAnnotation '=' expr where . bindings    (rule 135)

	id             shift, and enter state 6

	identifier     goto state 267
	binding        goto state 268
	bindings       goto state 269

State 250

	typeExpr -> typeExpr . '->' typeExpr                (rule 119)
	typeAnnotation -> ':' instance identifier ':' typeExpr .    (rule 125)

	'->'           shift, and enter state 98
	'='            reduce using rule 125
	'::'           reduce using rule 125


State 251

	tbindings -> tbindings ',' . tbinding               (rule 112)

	id             shift, and enter state 6

	identifier     goto state 244
	tbinding       goto state 266

State 252

	tbinding -> identifier implements . typeExpr        (rule 108)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 265

State 253

	tbinding -> identifier '|->' . typeExpr             (rule 109)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 264

State 254

	tbinding -> identifier '=' . typeExpr               (rule 107)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 263

State 255

	tbinding -> identifier '|' . typeExpr               (rule 110)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 262

State 256

	typeExpr -> typeExpr . '->' typeExpr                (rule 119)
	dataExpr -> identifier ':' typeExpr .               (rule 131)

	let            reduce using rule 131
	where          reduce using rule 131
	data           reduce using rule 131
	ty             reduce using rule 131
	';'            reduce using rule 131
	'->'           shift, and enter state 98
	'|'            reduce using rule 131
	%eof           reduce using rule 131


State 257

	dataExprs -> dataExprs '|' dataExpr .               (rule 133)

	let            reduce using rule 133
	where          reduce using rule 133
	data           reduce using rule 133
	ty             reduce using rule 133
	';'            reduce using rule 133
	'|'            reduce using rule 133
	%eof           reduce using rule 133


State 258

	tbindings -> tbindings . ',' tbinding               (rule 112)
	dec -> data identifier kindAnnotation '=' dataExprs where tbindings .    (rule 137)

	let            reduce using rule 137
	data           reduce using rule 137
	ty             reduce using rule 137
	';'            reduce using rule 137
	','            shift, and enter state 251
	%eof           reduce using rule 137


State 259

	tbindings -> tbindings . ',' tbinding               (rule 112)
	dec -> ty identifier kindAnnotation '=' typeExpr where tbindings .    (rule 139)

	let            reduce using rule 139
	data           reduce using rule 139
	ty             reduce using rule 139
	';'            reduce using rule 139
	','            shift, and enter state 251
	%eof           reduce using rule 139


State 260

	cases -> cases '|' pattern '->' expr .              (rule 53)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	let            reduce using rule 53
	where          reduce using rule 53
	then           reduce using rule 53
	else           reduce using rule 53
	data           reduce using rule 53
	ty             reduce using rule 53
	')'            reduce using rule 53
	']'            reduce using rule 53
	'}'            reduce using rule 53
	';'            reduce using rule 53
	','            reduce using rule 53
	'|'            reduce using rule 53
	'.'            shift, and enter state 91
	%eof           reduce using rule 53


State 261

	pairs -> identifier ':' . expr ',' pairs            (rule 7)
	pairs -> identifier ':' . expr                      (rule 8)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 180

State 262

	tbinding -> identifier '|' typeExpr .               (rule 110)
	typeExpr -> typeExpr . '->' typeExpr                (rule 119)

	let            reduce using rule 110
	data           reduce using rule 110
	ty             reduce using rule 110
	';'            reduce using rule 110
	','            reduce using rule 110
	'->'           shift, and enter state 98
	'='            reduce using rule 110
	'::'           reduce using rule 110
	%eof           reduce using rule 110


State 263

	tbinding -> identifier '=' typeExpr .               (rule 107)
	typeExpr -> typeExpr . '->' typeExpr                (rule 119)

	let            reduce using rule 107
	data           reduce using rule 107
	ty             reduce using rule 107
	';'            reduce using rule 107
	','            reduce using rule 107
	'->'           shift, and enter state 98
	'='            reduce using rule 107
	'::'           reduce using rule 107
	%eof           reduce using rule 107


State 264

	tbinding -> identifier '|->' typeExpr .             (rule 109)
	typeExpr -> typeExpr . '->' typeExpr                (rule 119)

	let            reduce using rule 109
	data           reduce using rule 109
	ty             reduce using rule 109
	';'            reduce using rule 109
	','            reduce using rule 109
	'->'           shift, and enter state 98
	'='            reduce using rule 109
	'::'           reduce using rule 109
	%eof           reduce using rule 109


State 265

	tbinding -> identifier implements typeExpr .        (rule 108)
	typeExpr -> typeExpr . '->' typeExpr                (rule 119)

	let            reduce using rule 108
	data           reduce using rule 108
	ty             reduce using rule 108
	';'            reduce using rule 108
	','            reduce using rule 108
	'->'           shift, and enter state 98
	'='            reduce using rule 108
	'::'           reduce using rule 108
	%eof           reduce using rule 108


State 266

	tbindings -> tbindings ',' tbinding .               (rule 112)

	let            reduce using rule 112
	data           reduce using rule 112
	ty             reduce using rule 112
	';'            reduce using rule 112
	','            reduce using rule 112
	'='            reduce using rule 112
	'::'           reduce using rule 112
	%eof           reduce using rule 112


State 267

	binding -> identifier . '=' expr                    (rule 55)

	'='            shift, and enter state 271


State 268

	bindings -> binding .                               (rule 56)

	let            reduce using rule 56
	data           reduce using rule 56
	ty             reduce using rule 56
	';'            reduce using rule 56
	','            reduce using rule 56
	%eof           reduce using rule 56


State 269

	bindings -> bindings . ',' binding                  (rule 57)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr where bindings .    (rule 135)

	let            reduce using rule 135
	data           reduce using rule 135
	ty             reduce using rule 135
	';'            reduce using rule 135
	','            shift, and enter state 270
	%eof           reduce using rule 135


State 270

	bindings -> bindings ',' . binding                  (rule 57)

	id             shift, and enter state 6

	identifier     goto state 267
	binding        goto state 273

State 271

	binding -> identifier '=' . expr                    (rule 55)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 272

State 272

	binding -> identifier '=' expr .                    (rule 55)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 75
	'-'            shift, and enter state 76
	'*'            shift, and enter state 77
	'/'            shift, and enter state 78
	'^'            shift, and enter state 79
	'++'           shift, and enter state 80
	'=='           shift, and enter state 81
	'!='           shift, and enter state 82
	'<'            shift, and enter state 83
	'<='           shift, and enter state 84
	'>'            shift, and enter state 85
	'>='           shift, and enter state 86
	'||'           shift, and enter state 87
	'&&'           shift, and enter state 88
	'|>'           shift, and enter state 89
	'<|'           shift, and enter state 90
	let            reduce using rule 55
	data           reduce using rule 55
	ty             reduce using rule 55
	';'            reduce using rule 55
	','            reduce using rule 55
	'.'            shift, and enter state 91
	%eof           reduce using rule 55


State 273

	bindings -> bindings ',' binding .                  (rule 57)

	let            reduce using rule 57
	data           reduce using rule 57
	ty             reduce using rule 57
	';'            reduce using rule 57
	','            reduce using rule 57
	%eof           reduce using rule 57


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 143
Number of terminals: 65
Number of non-terminals: 52
Number of states: 274
