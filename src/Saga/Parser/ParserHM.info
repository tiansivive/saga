-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ./src/Saga/Parser/ParserHM.y
-----------------------------------------------------------------------------


terminal op is unused
terminal in is unused
terminal with is unused
terminal return is unused
terminal alias is unused
terminal kind is unused
terminal forall is unused
terminal exists is unused
terminal proof is unused
terminal infer is unused
terminal protocol is unused
terminal interface is unused
terminal module is unused
terminal import is unused
terminal '<-' is unused
terminal newline is unused
terminal eof is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseSagaScript -> script                   (0)
	%start_parseSagaExpr -> expr                       (1)
	%start_parseSagaType -> typeExpr                   (2)
	%start_parseSagaKind -> kindExpr                   (3)
	%start_parseSagaDec -> dec                         (4)
	identifier -> id                                   (5)
	pairs ->                                           (6)
	pairs -> identifier ':' expr ',' pairs             (7)
	pairs -> identifier ':' expr                       (8)
	record -> '{' pairs '}'                            (9)
	listElements ->                                    (10)
	listElements -> expr                               (11)
	listElements -> expr ',' listElements              (12)
	list -> '[' listElements ']'                       (13)
	tupleElems -> ',' expr                             (14)
	tupleElems -> ',' expr tupleElems                  (15)
	tuple -> '(' expr tupleElems ')'                   (16)
	params ->                                          (17)
	params -> params identifier                        (18)
	args ->                                            (19)
	args -> args atom                                  (20)
	fnApplication -> atom args '!'                     (21)
	controlFlow -> if expr then expr else expr         (22)
	patListElems -> identifier                         (23)
	patListElems -> identifier ',' patListElems        (24)
	patTupleElems -> ',' identifier                    (25)
	patTupleElems -> ',' identifier patTupleElems      (26)
	patRecordKeys ->                                   (27)
	patRecordKeys -> identifier                        (28)
	patRecordKeys -> identifier ',' patRecordKeys      (29)
	patData -> identifier ':'                          (30)
	patData -> patData identifier                      (31)
	pattern -> identifier                              (32)
	pattern -> term                                    (33)
	pattern -> '[' ']'                                 (34)
	pattern -> '[' patListElems ']'                    (35)
	pattern -> '(' identifier patTupleElems ')'        (36)
	pattern -> '{' patRecordKeys '}'                   (37)
	pattern -> patData                                 (38)
	term -> number                                     (39)
	term -> string                                     (40)
	term -> boolean                                    (41)
	atom -> identifier                                 (42)
	atom -> term                                       (43)
	atom -> tuple                                      (44)
	atom -> list                                       (45)
	atom -> record                                     (46)
	atom -> '(' expr ')'                               (47)
	cases -> '|' pattern '->' expr                     (48)
	cases -> cases '|' pattern '->' expr               (49)
	matchExpr -> match expr cases                      (50)
	binding -> identifier '=' expr                     (51)
	bindings -> binding                                (52)
	bindings -> bindings ',' binding                   (53)
	expr -> controlFlow                                (54)
	expr -> matchExpr                                  (55)
	expr -> fnApplication                              (56)
	expr -> '\\' params '->' expr                      (57)
	expr -> atom                                       (58)
	expr -> '.' atom                                   (59)
	expr -> expr '.' identifier                        (60)
	expr -> expr '+' expr                              (61)
	expr -> expr '-' expr                              (62)
	expr -> expr '*' expr                              (63)
	expr -> expr '/' expr                              (64)
	expr -> expr '||' expr                             (65)
	expr -> expr '&&' expr                             (66)
	expr -> expr '==' expr                             (67)
	expr -> expr '!=' expr                             (68)
	expr -> expr '<' expr                              (69)
	expr -> expr '>' expr                              (70)
	expr -> expr '<=' expr                             (71)
	expr -> expr '>=' expr                             (72)
	expr -> expr '|>' expr                             (73)
	expr -> expr '<|' expr                             (74)
	tpairs ->                                          (75)
	tpairs -> identifier ':' typeExpr ',' tpairs       (76)
	tpairs -> identifier ':' typeExpr                  (77)
	trecord -> '{' tpairs '}'                          (78)
	ttupleElems -> ',' typeExpr                        (79)
	ttupleElems -> ',' typeExpr ttupleElems            (80)
	ttuple -> '(' typeExpr ttupleElems ')'             (81)
	type -> number                                     (82)
	type -> boolean                                    (83)
	type -> string                                     (84)
	type -> ttuple                                     (85)
	type -> trecord                                    (86)
	typeAtom -> type                                   (87)
	typeAtom -> identifier                             (88)
	typeAtom -> '(' typeExpr ')'                       (89)
	typeArgs ->                                        (90)
	typeArgs -> typeArgs typeAtom                      (91)
	tbinding -> identifier '=' typeExpr                (92)
	tbinding -> identifier implements typeExpr         (93)
	tbinding -> identifier '|->' typeExpr              (94)
	tbinding -> identifier '|' typeExpr                (95)
	tbindings -> tbinding                              (96)
	tbindings -> tbindings ';' tbinding                (97)
	tagged -> identifier ':' typeExpr                  (98)
	typeExpr -> typeAtom                               (99)
	typeExpr -> tagged                                 (100)
	typeExpr -> typeExpr '->' typeExpr                 (101)
	typeExpr -> '\\' params '=>' typeExpr              (102)
	typeExpr -> typeAtom typeArgs '!'                  (103)
	typeAnnotation ->                                  (104)
	typeAnnotation -> ':' typeExpr                     (105)
	typeAnnotation -> ':' typeExpr where tbindings     (106)
	typeAnnotation -> ':' instance identifier ':' typeExpr   (107)
	kindExpr -> kindExpr '->' kindExpr                 (108)
	kindExpr -> '(' kindExpr ')'                       (109)
	kindExpr -> identifier                             (110)
	kindAnnotation ->                                  (111)
	kindAnnotation -> '::' kindExpr                    (112)
	dataExpr -> identifier ':' typeExpr                (113)
	dataExprs -> dataExpr                              (114)
	dataExprs -> dataExprs '|' dataExpr                (115)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr   (116)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr where bindings   (117)
	dec -> data identifier kindAnnotation '=' dataExprs   (118)
	dec -> data identifier kindAnnotation '=' dataExprs where tbindings   (119)
	dec -> ty identifier kindAnnotation '=' typeExpr   (120)
	dec -> ty identifier kindAnnotation '=' typeExpr where tbindings   (121)
	declarations -> dec                                (122)
	declarations -> declarations dec                   (123)
	script -> declarations                             (124)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { L.RangedToken (T.Id _) _ }
	number         { L.RangedToken (T.Number _) _ }
	string         { L.RangedToken (T.String _) _ }
	boolean        { L.RangedToken (T.Boolean _) _ }
	'!'            { L.RangedToken (T.Operator "!") _ }
	'+'            { L.RangedToken (T.Operator "+") _ }
	'-'            { L.RangedToken (T.Operator "-") _ }
	'*'            { L.RangedToken (T.Operator "*") _ }
	'/'            { L.RangedToken (T.Operator "/") _ }
	'=='           { L.RangedToken (T.Operator "==") _ }
	'!='           { L.RangedToken (T.Operator "!=") _ }
	'<'            { L.RangedToken (T.Operator "<") _ }
	'<='           { L.RangedToken (T.Operator "<=") _ }
	'>'            { L.RangedToken (T.Operator ">") _ }
	'>='           { L.RangedToken (T.Operator ">=") _ }
	'||'           { L.RangedToken (T.Operator "||") _ }
	'&&'           { L.RangedToken (T.Operator "&&") _ }
	'|>'           { L.RangedToken (T.Operator "|>") _ }
	'<|'           { L.RangedToken (T.Operator "<|") _ }
	op             { L.RangedToken (T.Operator _) _ }
	let            { L.RangedToken T.Let _ }
	in             { L.RangedToken T.In _ }
	where          { L.RangedToken T.Where _ }
	with           { L.RangedToken T.With _ }
	if             { L.RangedToken T.If _ }
	then           { L.RangedToken T.Then _ }
	else           { L.RangedToken T.Else _ }
	match          { L.RangedToken T.Match _ }
	return         { L.RangedToken T.Return _ }
	data           { L.RangedToken T.Data _ }
	ty             { L.RangedToken T.Type _ }
	alias          { L.RangedToken T.Alias _ }
	kind           { L.RangedToken T.Kind _ }
	forall         { L.RangedToken T.Forall _ }
	exists         { L.RangedToken T.Exists _ }
	proof          { L.RangedToken T.Proof _ }
	infer          { L.RangedToken T.Infer _ }
	protocol       { L.RangedToken T.Protocol _ }
	interface      { L.RangedToken T.Interface _ }
	instance       { L.RangedToken T.Instance _ }
	implements     { L.RangedToken T.Implements _ }
	module         { L.RangedToken T.Module _ }
	import         { L.RangedToken T.Import _ }
	'('            { L.RangedToken T.LParen _ }
	')'            { L.RangedToken T.RParen _ }
	'['            { L.RangedToken T.LBrack _ }
	']'            { L.RangedToken T.RBrack _ }
	'{'            { L.RangedToken T.LCurly _ }
	'}'            { L.RangedToken T.RCurly _ }
	':'            { L.RangedToken T.Colon _ }
	';'            { L.RangedToken T.SemiColon _ }
	','            { L.RangedToken T.Comma _ }
	'->'           { L.RangedToken T.Arrow _ }
	'<-'           { L.RangedToken T.BackArrow _ }
	'=>'           { L.RangedToken T.FatArrow _ }
	'|->'          { L.RangedToken T.PipeArrow _ }
	'='            { L.RangedToken T.Equals _ }
	'|'            { L.RangedToken T.Pipe _ }
	'.'            { L.RangedToken T.Dot _ }
	'::'           { L.RangedToken T.Section _ }
	'\\'           { L.RangedToken T.BackSlash _ }
	newline        { L.RangedToken T.Newline _ }
	eof            { L.RangedToken T.EOF _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseSagaScript rule  0
	%start_parseSagaExpr rule  1
	%start_parseSagaType rule  2
	%start_parseSagaKind rule  3
	%start_parseSagaDec rule  4
	identifier      rule  5
	pairs           rules 6, 7, 8
	record          rule  9
	listElements    rules 10, 11, 12
	list            rule  13
	tupleElems      rules 14, 15
	tuple           rule  16
	params          rules 17, 18
	args            rules 19, 20
	fnApplication   rule  21
	controlFlow     rule  22
	patListElems    rules 23, 24
	patTupleElems   rules 25, 26
	patRecordKeys   rules 27, 28, 29
	patData         rules 30, 31
	pattern         rules 32, 33, 34, 35, 36, 37, 38
	term            rules 39, 40, 41
	atom            rules 42, 43, 44, 45, 46, 47
	cases           rules 48, 49
	matchExpr       rule  50
	binding         rule  51
	bindings        rules 52, 53
	expr            rules 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74
	tpairs          rules 75, 76, 77
	trecord         rule  78
	ttupleElems     rules 79, 80
	ttuple          rule  81
	type            rules 82, 83, 84, 85, 86
	typeAtom        rules 87, 88, 89
	typeArgs        rules 90, 91
	tbinding        rules 92, 93, 94, 95
	tbindings       rules 96, 97
	tagged          rule  98
	typeExpr        rules 99, 100, 101, 102, 103
	typeAnnotation  rules 104, 105, 106, 107
	kindExpr        rules 108, 109, 110
	kindAnnotation  rules 111, 112
	dataExpr        rule  113
	dataExprs       rules 114, 115
	dec             rules 116, 117, 118, 119, 120, 121
	declarations    rules 122, 123
	script          rule  124

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseSagaScript -> . script                  (rule 0)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10

	dec            goto state 47
	declarations   goto state 48
	script         goto state 49

State 1

	%start_parseSagaExpr -> . expr                      (rule 1)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 36

State 2

	%start_parseSagaType -> . typeExpr                  (rule 2)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 20

State 3

	%start_parseSagaKind -> . kindExpr                  (rule 3)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 12

State 4

	%start_parseSagaDec -> . dec                        (rule 4)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10

	dec            goto state 7

State 5

	identifier -> . id                                  (rule 5)

	id             shift, and enter state 6


State 6

	identifier -> id .                                  (rule 5)

	id             reduce using rule 5
	number         reduce using rule 5
	string         reduce using rule 5
	boolean        reduce using rule 5
	'!'            reduce using rule 5
	'+'            reduce using rule 5
	'-'            reduce using rule 5
	'*'            reduce using rule 5
	'/'            reduce using rule 5
	'=='           reduce using rule 5
	'!='           reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	'||'           reduce using rule 5
	'&&'           reduce using rule 5
	'|>'           reduce using rule 5
	'<|'           reduce using rule 5
	let            reduce using rule 5
	where          reduce using rule 5
	then           reduce using rule 5
	else           reduce using rule 5
	data           reduce using rule 5
	ty             reduce using rule 5
	implements     reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	'['            reduce using rule 5
	']'            reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	':'            reduce using rule 5
	';'            reduce using rule 5
	','            reduce using rule 5
	'->'           reduce using rule 5
	'=>'           reduce using rule 5
	'|->'          reduce using rule 5
	'='            reduce using rule 5
	'|'            reduce using rule 5
	'.'            reduce using rule 5
	'::'           reduce using rule 5
	%eof           reduce using rule 5


State 7

	%start_parseSagaDec -> dec .                        (rule 4)

	%eof           accept


State 8

	dec -> let . identifier typeAnnotation kindAnnotation '=' expr    (rule 116)
	dec -> let . identifier typeAnnotation kindAnnotation '=' expr where bindings    (rule 117)

	id             shift, and enter state 6

	identifier     goto state 87

State 9

	dec -> data . identifier kindAnnotation '=' dataExprs    (rule 118)
	dec -> data . identifier kindAnnotation '=' dataExprs where tbindings    (rule 119)

	id             shift, and enter state 6

	identifier     goto state 86

State 10

	dec -> ty . identifier kindAnnotation '=' typeExpr    (rule 120)
	dec -> ty . identifier kindAnnotation '=' typeExpr where tbindings    (rule 121)

	id             shift, and enter state 6

	identifier     goto state 85

State 11

	kindExpr -> identifier .                            (rule 110)

	')'            reduce using rule 110
	'->'           reduce using rule 110
	'='            reduce using rule 110
	%eof           reduce using rule 110


State 12

	%start_parseSagaKind -> kindExpr .                  (rule 3)
	kindExpr -> kindExpr . '->' kindExpr                (rule 108)

	'->'           shift, and enter state 84
	%eof           accept


State 13

	kindExpr -> '(' . kindExpr ')'                      (rule 109)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 83

State 14

	typeAtom -> identifier .                            (rule 88)
	tagged -> identifier . ':' typeExpr                 (rule 98)

	id             reduce using rule 88
	number         reduce using rule 88
	string         reduce using rule 88
	boolean        reduce using rule 88
	'!'            reduce using rule 88
	let            reduce using rule 88
	where          reduce using rule 88
	data           reduce using rule 88
	ty             reduce using rule 88
	'('            reduce using rule 88
	')'            reduce using rule 88
	'{'            reduce using rule 88
	'}'            reduce using rule 88
	':'            shift, and enter state 82
	';'            reduce using rule 88
	','            reduce using rule 88
	'->'           reduce using rule 88
	'='            reduce using rule 88
	'|'            reduce using rule 88
	'::'           reduce using rule 88
	%eof           reduce using rule 88


State 15

	type -> trecord .                                   (rule 86)

	id             reduce using rule 86
	number         reduce using rule 86
	string         reduce using rule 86
	boolean        reduce using rule 86
	'!'            reduce using rule 86
	let            reduce using rule 86
	where          reduce using rule 86
	data           reduce using rule 86
	ty             reduce using rule 86
	'('            reduce using rule 86
	')'            reduce using rule 86
	'{'            reduce using rule 86
	'}'            reduce using rule 86
	';'            reduce using rule 86
	','            reduce using rule 86
	'->'           reduce using rule 86
	'='            reduce using rule 86
	'|'            reduce using rule 86
	'::'           reduce using rule 86
	%eof           reduce using rule 86


State 16

	type -> ttuple .                                    (rule 85)

	id             reduce using rule 85
	number         reduce using rule 85
	string         reduce using rule 85
	boolean        reduce using rule 85
	'!'            reduce using rule 85
	let            reduce using rule 85
	where          reduce using rule 85
	data           reduce using rule 85
	ty             reduce using rule 85
	'('            reduce using rule 85
	')'            reduce using rule 85
	'{'            reduce using rule 85
	'}'            reduce using rule 85
	';'            reduce using rule 85
	','            reduce using rule 85
	'->'           reduce using rule 85
	'='            reduce using rule 85
	'|'            reduce using rule 85
	'::'           reduce using rule 85
	%eof           reduce using rule 85


State 17

	typeAtom -> type .                                  (rule 87)

	id             reduce using rule 87
	number         reduce using rule 87
	string         reduce using rule 87
	boolean        reduce using rule 87
	'!'            reduce using rule 87
	let            reduce using rule 87
	where          reduce using rule 87
	data           reduce using rule 87
	ty             reduce using rule 87
	'('            reduce using rule 87
	')'            reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	';'            reduce using rule 87
	','            reduce using rule 87
	'->'           reduce using rule 87
	'='            reduce using rule 87
	'|'            reduce using rule 87
	'::'           reduce using rule 87
	%eof           reduce using rule 87


State 18

	typeExpr -> typeAtom .                              (rule 99)
	typeExpr -> typeAtom . typeArgs '!'                 (rule 103)

	id             reduce using rule 90
	number         reduce using rule 90
	string         reduce using rule 90
	boolean        reduce using rule 90
	'!'            reduce using rule 90
	let            reduce using rule 99
	where          reduce using rule 99
	data           reduce using rule 99
	ty             reduce using rule 99
	'('            reduce using rule 90
	')'            reduce using rule 99
	'{'            reduce using rule 90
	'}'            reduce using rule 99
	';'            reduce using rule 99
	','            reduce using rule 99
	'->'           reduce using rule 99
	'='            reduce using rule 99
	'|'            reduce using rule 99
	'::'           reduce using rule 99
	%eof           reduce using rule 99

	typeArgs       goto state 81

State 19

	typeExpr -> tagged .                                (rule 100)

	let            reduce using rule 100
	where          reduce using rule 100
	data           reduce using rule 100
	ty             reduce using rule 100
	')'            reduce using rule 100
	'}'            reduce using rule 100
	';'            reduce using rule 100
	','            reduce using rule 100
	'->'           reduce using rule 100
	'='            reduce using rule 100
	'|'            reduce using rule 100
	'::'           reduce using rule 100
	%eof           reduce using rule 100


State 20

	%start_parseSagaType -> typeExpr .                  (rule 2)
	typeExpr -> typeExpr . '->' typeExpr                (rule 101)

	'->'           shift, and enter state 80
	%eof           accept


State 21

	type -> number .                                    (rule 82)

	id             reduce using rule 82
	number         reduce using rule 82
	string         reduce using rule 82
	boolean        reduce using rule 82
	'!'            reduce using rule 82
	let            reduce using rule 82
	where          reduce using rule 82
	data           reduce using rule 82
	ty             reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	'{'            reduce using rule 82
	'}'            reduce using rule 82
	';'            reduce using rule 82
	','            reduce using rule 82
	'->'           reduce using rule 82
	'='            reduce using rule 82
	'|'            reduce using rule 82
	'::'           reduce using rule 82
	%eof           reduce using rule 82


State 22

	type -> string .                                    (rule 84)

	id             reduce using rule 84
	number         reduce using rule 84
	string         reduce using rule 84
	boolean        reduce using rule 84
	'!'            reduce using rule 84
	let            reduce using rule 84
	where          reduce using rule 84
	data           reduce using rule 84
	ty             reduce using rule 84
	'('            reduce using rule 84
	')'            reduce using rule 84
	'{'            reduce using rule 84
	'}'            reduce using rule 84
	';'            reduce using rule 84
	','            reduce using rule 84
	'->'           reduce using rule 84
	'='            reduce using rule 84
	'|'            reduce using rule 84
	'::'           reduce using rule 84
	%eof           reduce using rule 84


State 23

	type -> boolean .                                   (rule 83)

	id             reduce using rule 83
	number         reduce using rule 83
	string         reduce using rule 83
	boolean        reduce using rule 83
	'!'            reduce using rule 83
	let            reduce using rule 83
	where          reduce using rule 83
	data           reduce using rule 83
	ty             reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	'{'            reduce using rule 83
	'}'            reduce using rule 83
	';'            reduce using rule 83
	','            reduce using rule 83
	'->'           reduce using rule 83
	'='            reduce using rule 83
	'|'            reduce using rule 83
	'::'           reduce using rule 83
	%eof           reduce using rule 83


State 24

	ttuple -> '(' . typeExpr ttupleElems ')'            (rule 81)
	typeAtom -> '(' . typeExpr ')'                      (rule 89)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 79

State 25

	trecord -> '{' . tpairs '}'                         (rule 78)

	id             shift, and enter state 6
	'}'            reduce using rule 75

	identifier     goto state 77
	tpairs         goto state 78

State 26

	typeExpr -> '\\' . params '=>' typeExpr             (rule 102)

	id             reduce using rule 17
	'=>'           reduce using rule 17

	params         goto state 76

State 27

	atom -> identifier .                                (rule 42)

	id             reduce using rule 42
	number         reduce using rule 42
	string         reduce using rule 42
	boolean        reduce using rule 42
	'!'            reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'/'            reduce using rule 42
	'=='           reduce using rule 42
	'!='           reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42
	'&&'           reduce using rule 42
	'|>'           reduce using rule 42
	'<|'           reduce using rule 42
	let            reduce using rule 42
	where          reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	data           reduce using rule 42
	ty             reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	','            reduce using rule 42
	'|'            reduce using rule 42
	'.'            reduce using rule 42
	%eof           reduce using rule 42


State 28

	atom -> record .                                    (rule 46)

	id             reduce using rule 46
	number         reduce using rule 46
	string         reduce using rule 46
	boolean        reduce using rule 46
	'!'            reduce using rule 46
	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	'=='           reduce using rule 46
	'!='           reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46
	'&&'           reduce using rule 46
	'|>'           reduce using rule 46
	'<|'           reduce using rule 46
	let            reduce using rule 46
	where          reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	data           reduce using rule 46
	ty             reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	','            reduce using rule 46
	'|'            reduce using rule 46
	'.'            reduce using rule 46
	%eof           reduce using rule 46


State 29

	atom -> list .                                      (rule 45)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	'=='           reduce using rule 45
	'!='           reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45
	'&&'           reduce using rule 45
	'|>'           reduce using rule 45
	'<|'           reduce using rule 45
	let            reduce using rule 45
	where          reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	data           reduce using rule 45
	ty             reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	','            reduce using rule 45
	'|'            reduce using rule 45
	'.'            reduce using rule 45
	%eof           reduce using rule 45


State 30

	atom -> tuple .                                     (rule 44)

	id             reduce using rule 44
	number         reduce using rule 44
	string         reduce using rule 44
	boolean        reduce using rule 44
	'!'            reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'/'            reduce using rule 44
	'=='           reduce using rule 44
	'!='           reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44
	'&&'           reduce using rule 44
	'|>'           reduce using rule 44
	'<|'           reduce using rule 44
	let            reduce using rule 44
	where          reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	data           reduce using rule 44
	ty             reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	','            reduce using rule 44
	'|'            reduce using rule 44
	'.'            reduce using rule 44
	%eof           reduce using rule 44


State 31

	expr -> fnApplication .                             (rule 56)

	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'=='           reduce using rule 56
	'!='           reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56
	'&&'           reduce using rule 56
	'|>'           reduce using rule 56
	'<|'           reduce using rule 56
	let            reduce using rule 56
	where          reduce using rule 56
	then           reduce using rule 56
	else           reduce using rule 56
	data           reduce using rule 56
	ty             reduce using rule 56
	')'            reduce using rule 56
	']'            reduce using rule 56
	'}'            reduce using rule 56
	','            reduce using rule 56
	'|'            reduce using rule 56
	'.'            reduce using rule 56
	%eof           reduce using rule 56


State 32

	expr -> controlFlow .                               (rule 54)

	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'=='           reduce using rule 54
	'!='           reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54
	'&&'           reduce using rule 54
	'|>'           reduce using rule 54
	'<|'           reduce using rule 54
	let            reduce using rule 54
	where          reduce using rule 54
	then           reduce using rule 54
	else           reduce using rule 54
	data           reduce using rule 54
	ty             reduce using rule 54
	')'            reduce using rule 54
	']'            reduce using rule 54
	'}'            reduce using rule 54
	','            reduce using rule 54
	'|'            reduce using rule 54
	'.'            reduce using rule 54
	%eof           reduce using rule 54


State 33

	atom -> term .                                      (rule 43)

	id             reduce using rule 43
	number         reduce using rule 43
	string         reduce using rule 43
	boolean        reduce using rule 43
	'!'            reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'=='           reduce using rule 43
	'!='           reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43
	'&&'           reduce using rule 43
	'|>'           reduce using rule 43
	'<|'           reduce using rule 43
	let            reduce using rule 43
	where          reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	data           reduce using rule 43
	ty             reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	','            reduce using rule 43
	'|'            reduce using rule 43
	'.'            reduce using rule 43
	%eof           reduce using rule 43


State 34

	fnApplication -> atom . args '!'                    (rule 21)
	expr -> atom .                                      (rule 58)

	id             reduce using rule 19
	number         reduce using rule 19
	string         reduce using rule 19
	boolean        reduce using rule 19
	'!'            reduce using rule 19
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'=='           reduce using rule 58
	'!='           reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58
	'&&'           reduce using rule 58
	'|>'           reduce using rule 58
	'<|'           reduce using rule 58
	let            reduce using rule 58
	where          reduce using rule 58
	then           reduce using rule 58
	else           reduce using rule 58
	data           reduce using rule 58
	ty             reduce using rule 58
	'('            reduce using rule 19
	')'            reduce using rule 58
	'['            reduce using rule 19
	']'            reduce using rule 58
	'{'            reduce using rule 19
	'}'            reduce using rule 58
	','            reduce using rule 58
	'|'            reduce using rule 58
	'.'            reduce using rule 58
	%eof           reduce using rule 58

	args           goto state 75

State 35

	expr -> matchExpr .                                 (rule 55)

	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'=='           reduce using rule 55
	'!='           reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55
	'&&'           reduce using rule 55
	'|>'           reduce using rule 55
	'<|'           reduce using rule 55
	let            reduce using rule 55
	where          reduce using rule 55
	then           reduce using rule 55
	else           reduce using rule 55
	data           reduce using rule 55
	ty             reduce using rule 55
	')'            reduce using rule 55
	']'            reduce using rule 55
	'}'            reduce using rule 55
	','            reduce using rule 55
	'|'            reduce using rule 55
	'.'            reduce using rule 55
	%eof           reduce using rule 55


State 36

	%start_parseSagaExpr -> expr .                      (rule 1)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	'.'            shift, and enter state 74
	%eof           accept


State 37

	term -> number .                                    (rule 39)

	id             reduce using rule 39
	number         reduce using rule 39
	string         reduce using rule 39
	boolean        reduce using rule 39
	'!'            reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'*'            reduce using rule 39
	'/'            reduce using rule 39
	'=='           reduce using rule 39
	'!='           reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39
	'&&'           reduce using rule 39
	'|>'           reduce using rule 39
	'<|'           reduce using rule 39
	let            reduce using rule 39
	where          reduce using rule 39
	then           reduce using rule 39
	else           reduce using rule 39
	data           reduce using rule 39
	ty             reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	','            reduce using rule 39
	'->'           reduce using rule 39
	'|'            reduce using rule 39
	'.'            reduce using rule 39
	%eof           reduce using rule 39


State 38

	term -> string .                                    (rule 40)

	id             reduce using rule 40
	number         reduce using rule 40
	string         reduce using rule 40
	boolean        reduce using rule 40
	'!'            reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'*'            reduce using rule 40
	'/'            reduce using rule 40
	'=='           reduce using rule 40
	'!='           reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40
	'&&'           reduce using rule 40
	'|>'           reduce using rule 40
	'<|'           reduce using rule 40
	let            reduce using rule 40
	where          reduce using rule 40
	then           reduce using rule 40
	else           reduce using rule 40
	data           reduce using rule 40
	ty             reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	','            reduce using rule 40
	'->'           reduce using rule 40
	'|'            reduce using rule 40
	'.'            reduce using rule 40
	%eof           reduce using rule 40


State 39

	term -> boolean .                                   (rule 41)

	id             reduce using rule 41
	number         reduce using rule 41
	string         reduce using rule 41
	boolean        reduce using rule 41
	'!'            reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'*'            reduce using rule 41
	'/'            reduce using rule 41
	'=='           reduce using rule 41
	'!='           reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41
	'&&'           reduce using rule 41
	'|>'           reduce using rule 41
	'<|'           reduce using rule 41
	let            reduce using rule 41
	where          reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	data           reduce using rule 41
	ty             reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	','            reduce using rule 41
	'->'           reduce using rule 41
	'|'            reduce using rule 41
	'.'            reduce using rule 41
	%eof           reduce using rule 41


State 40

	controlFlow -> if . expr then expr else expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 59

State 41

	matchExpr -> match . expr cases                     (rule 50)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 58

State 42

	tuple -> '(' . expr tupleElems ')'                  (rule 16)
	atom -> '(' . expr ')'                              (rule 47)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 57

State 43

	list -> '[' . listElements ']'                      (rule 13)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	']'            reduce using rule 10
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	listElements   goto state 55
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 56

State 44

	record -> '{' . pairs '}'                           (rule 9)

	id             shift, and enter state 6
	'}'            reduce using rule 6

	identifier     goto state 53
	pairs          goto state 54

State 45

	expr -> '.' . atom                                  (rule 59)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	term           goto state 33
	atom           goto state 52

State 46

	expr -> '\\' . params '->' expr                     (rule 57)

	id             reduce using rule 17
	'->'           reduce using rule 17

	params         goto state 51

State 47

	declarations -> dec .                               (rule 122)

	let            reduce using rule 122
	data           reduce using rule 122
	ty             reduce using rule 122
	%eof           reduce using rule 122


State 48

	declarations -> declarations . dec                  (rule 123)
	script -> declarations .                            (rule 124)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10
	%eof           reduce using rule 124

	dec            goto state 50

State 49

	%start_parseSagaScript -> script .                  (rule 0)

	%eof           accept


State 50

	declarations -> declarations dec .                  (rule 123)

	let            reduce using rule 123
	data           reduce using rule 123
	ty             reduce using rule 123
	%eof           reduce using rule 123


State 51

	params -> params . identifier                       (rule 18)
	expr -> '\\' params . '->' expr                     (rule 57)

	id             shift, and enter state 6
	'->'           shift, and enter state 134

	identifier     goto state 105

State 52

	expr -> '.' atom .                                  (rule 59)

	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'=='           reduce using rule 59
	'!='           reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59
	'&&'           reduce using rule 59
	'|>'           reduce using rule 59
	'<|'           reduce using rule 59
	let            reduce using rule 59
	where          reduce using rule 59
	then           reduce using rule 59
	else           reduce using rule 59
	data           reduce using rule 59
	ty             reduce using rule 59
	')'            reduce using rule 59
	']'            reduce using rule 59
	'}'            reduce using rule 59
	','            reduce using rule 59
	'|'            reduce using rule 59
	'.'            reduce using rule 59
	%eof           reduce using rule 59


State 53

	pairs -> identifier . ':' expr ',' pairs            (rule 7)
	pairs -> identifier . ':' expr                      (rule 8)

	':'            shift, and enter state 133


State 54

	record -> '{' pairs . '}'                           (rule 9)

	'}'            shift, and enter state 132


State 55

	list -> '[' listElements . ']'                      (rule 13)

	']'            shift, and enter state 131


State 56

	listElements -> expr .                              (rule 11)
	listElements -> expr . ',' listElements             (rule 12)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	']'            reduce using rule 11
	','            shift, and enter state 130
	'.'            shift, and enter state 74


State 57

	tuple -> '(' expr . tupleElems ')'                  (rule 16)
	atom -> '(' expr . ')'                              (rule 47)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	')'            shift, and enter state 128
	','            shift, and enter state 129
	'.'            shift, and enter state 74

	tupleElems     goto state 127

State 58

	matchExpr -> match expr . cases                     (rule 50)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	'|'            shift, and enter state 126
	'.'            shift, and enter state 74

	cases          goto state 125

State 59

	controlFlow -> if expr . then expr else expr        (rule 22)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	then           shift, and enter state 124
	'.'            shift, and enter state 74


State 60

	expr -> expr '+' . expr                             (rule 61)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 123

State 61

	expr -> expr '-' . expr                             (rule 62)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 122

State 62

	expr -> expr '*' . expr                             (rule 63)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 121

State 63

	expr -> expr '/' . expr                             (rule 64)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 120

State 64

	expr -> expr '==' . expr                            (rule 67)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 119

State 65

	expr -> expr '!=' . expr                            (rule 68)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 118

State 66

	expr -> expr '<' . expr                             (rule 69)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 117

State 67

	expr -> expr '<=' . expr                            (rule 71)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 116

State 68

	expr -> expr '>' . expr                             (rule 70)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 115

State 69

	expr -> expr '>=' . expr                            (rule 72)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 114

State 70

	expr -> expr '||' . expr                            (rule 65)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 113

State 71

	expr -> expr '&&' . expr                            (rule 66)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 112

State 72

	expr -> expr '|>' . expr                            (rule 73)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 111

State 73

	expr -> expr '<|' . expr                            (rule 74)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 110

State 74

	expr -> expr '.' . identifier                       (rule 60)

	id             shift, and enter state 6

	identifier     goto state 109

State 75

	args -> args . atom                                 (rule 20)
	fnApplication -> atom args . '!'                    (rule 21)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	'!'            shift, and enter state 108
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	term           goto state 33
	atom           goto state 107

State 76

	params -> params . identifier                       (rule 18)
	typeExpr -> '\\' params . '=>' typeExpr             (rule 102)

	id             shift, and enter state 6
	'=>'           shift, and enter state 106

	identifier     goto state 105

State 77

	tpairs -> identifier . ':' typeExpr ',' tpairs      (rule 76)
	tpairs -> identifier . ':' typeExpr                 (rule 77)

	':'            shift, and enter state 104


State 78

	trecord -> '{' tpairs . '}'                         (rule 78)

	'}'            shift, and enter state 103


State 79

	ttuple -> '(' typeExpr . ttupleElems ')'            (rule 81)
	typeAtom -> '(' typeExpr . ')'                      (rule 89)
	typeExpr -> typeExpr . '->' typeExpr                (rule 101)

	')'            shift, and enter state 101
	','            shift, and enter state 102
	'->'           shift, and enter state 80

	ttupleElems    goto state 100

State 80

	typeExpr -> typeExpr '->' . typeExpr                (rule 101)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 99

State 81

	typeArgs -> typeArgs . typeAtom                     (rule 91)
	typeExpr -> typeAtom typeArgs . '!'                 (rule 103)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'!'            shift, and enter state 98
	'('            shift, and enter state 24
	'{'            shift, and enter state 25

	identifier     goto state 96
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 97

State 82

	tagged -> identifier ':' . typeExpr                 (rule 98)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 95

State 83

	kindExpr -> kindExpr . '->' kindExpr                (rule 108)
	kindExpr -> '(' kindExpr . ')'                      (rule 109)

	')'            shift, and enter state 94
	'->'           shift, and enter state 84


State 84

	kindExpr -> kindExpr '->' . kindExpr                (rule 108)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 93

State 85

	dec -> ty identifier . kindAnnotation '=' typeExpr    (rule 120)
	dec -> ty identifier . kindAnnotation '=' typeExpr where tbindings    (rule 121)

	'='            reduce using rule 111
	'::'           shift, and enter state 91

	kindAnnotation goto state 92

State 86

	dec -> data identifier . kindAnnotation '=' dataExprs    (rule 118)
	dec -> data identifier . kindAnnotation '=' dataExprs where tbindings    (rule 119)

	'='            reduce using rule 111
	'::'           shift, and enter state 91

	kindAnnotation goto state 90

State 87

	dec -> let identifier . typeAnnotation kindAnnotation '=' expr    (rule 116)
	dec -> let identifier . typeAnnotation kindAnnotation '=' expr where bindings    (rule 117)

	':'            shift, and enter state 89
	'='            reduce using rule 104
	'::'           reduce using rule 104

	typeAnnotation goto state 88

State 88

	dec -> let identifier typeAnnotation . kindAnnotation '=' expr    (rule 116)
	dec -> let identifier typeAnnotation . kindAnnotation '=' expr where bindings    (rule 117)

	'='            reduce using rule 111
	'::'           shift, and enter state 91

	kindAnnotation goto state 158

State 89

	typeAnnotation -> ':' . typeExpr                    (rule 105)
	typeAnnotation -> ':' . typeExpr where tbindings    (rule 106)
	typeAnnotation -> ':' . instance identifier ':' typeExpr    (rule 107)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	instance       shift, and enter state 157
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 156

State 90

	dec -> data identifier kindAnnotation . '=' dataExprs    (rule 118)
	dec -> data identifier kindAnnotation . '=' dataExprs where tbindings    (rule 119)

	'='            shift, and enter state 155


State 91

	kindAnnotation -> '::' . kindExpr                   (rule 112)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 154

State 92

	dec -> ty identifier kindAnnotation . '=' typeExpr    (rule 120)
	dec -> ty identifier kindAnnotation . '=' typeExpr where tbindings    (rule 121)

	'='            shift, and enter state 153


State 93

	kindExpr -> kindExpr . '->' kindExpr                (rule 108)
	kindExpr -> kindExpr '->' kindExpr .                (rule 108)

	')'            reduce using rule 108
	'->'           reduce using rule 108
	'='            reduce using rule 108
	%eof           reduce using rule 108


State 94

	kindExpr -> '(' kindExpr ')' .                      (rule 109)

	')'            reduce using rule 109
	'->'           reduce using rule 109
	'='            reduce using rule 109
	%eof           reduce using rule 109


State 95

	tagged -> identifier ':' typeExpr .                 (rule 98)
	typeExpr -> typeExpr . '->' typeExpr                (rule 101)

	let            reduce using rule 98
	where          reduce using rule 98
	data           reduce using rule 98
	ty             reduce using rule 98
	')'            reduce using rule 98
	'}'            reduce using rule 98
	';'            reduce using rule 98
	','            reduce using rule 98
	'->'           shift, and enter state 80
	'='            reduce using rule 98
	'|'            reduce using rule 98
	'::'           reduce using rule 98
	%eof           reduce using rule 98


State 96

	typeAtom -> identifier .                            (rule 88)

	id             reduce using rule 88
	number         reduce using rule 88
	string         reduce using rule 88
	boolean        reduce using rule 88
	'!'            reduce using rule 88
	'('            reduce using rule 88
	'{'            reduce using rule 88


State 97

	typeArgs -> typeArgs typeAtom .                     (rule 91)

	id             reduce using rule 91
	number         reduce using rule 91
	string         reduce using rule 91
	boolean        reduce using rule 91
	'!'            reduce using rule 91
	'('            reduce using rule 91
	'{'            reduce using rule 91


State 98

	typeExpr -> typeAtom typeArgs '!' .                 (rule 103)

	let            reduce using rule 103
	where          reduce using rule 103
	data           reduce using rule 103
	ty             reduce using rule 103
	')'            reduce using rule 103
	'}'            reduce using rule 103
	';'            reduce using rule 103
	','            reduce using rule 103
	'->'           reduce using rule 103
	'='            reduce using rule 103
	'|'            reduce using rule 103
	'::'           reduce using rule 103
	%eof           reduce using rule 103


State 99

	typeExpr -> typeExpr . '->' typeExpr                (rule 101)
	typeExpr -> typeExpr '->' typeExpr .                (rule 101)

	let            reduce using rule 101
	where          reduce using rule 101
	data           reduce using rule 101
	ty             reduce using rule 101
	')'            reduce using rule 101
	'}'            reduce using rule 101
	';'            reduce using rule 101
	','            reduce using rule 101
	'->'           shift, and enter state 80
	'='            reduce using rule 101
	'|'            reduce using rule 101
	'::'           reduce using rule 101
	%eof           reduce using rule 101


State 100

	ttuple -> '(' typeExpr ttupleElems . ')'            (rule 81)

	')'            shift, and enter state 152


State 101

	typeAtom -> '(' typeExpr ')' .                      (rule 89)

	id             reduce using rule 89
	number         reduce using rule 89
	string         reduce using rule 89
	boolean        reduce using rule 89
	'!'            reduce using rule 89
	let            reduce using rule 89
	where          reduce using rule 89
	data           reduce using rule 89
	ty             reduce using rule 89
	'('            reduce using rule 89
	')'            reduce using rule 89
	'{'            reduce using rule 89
	'}'            reduce using rule 89
	';'            reduce using rule 89
	','            reduce using rule 89
	'->'           reduce using rule 89
	'='            reduce using rule 89
	'|'            reduce using rule 89
	'::'           reduce using rule 89
	%eof           reduce using rule 89


State 102

	ttupleElems -> ',' . typeExpr                       (rule 79)
	ttupleElems -> ',' . typeExpr ttupleElems           (rule 80)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 151

State 103

	trecord -> '{' tpairs '}' .                         (rule 78)

	id             reduce using rule 78
	number         reduce using rule 78
	string         reduce using rule 78
	boolean        reduce using rule 78
	'!'            reduce using rule 78
	let            reduce using rule 78
	where          reduce using rule 78
	data           reduce using rule 78
	ty             reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	'{'            reduce using rule 78
	'}'            reduce using rule 78
	';'            reduce using rule 78
	','            reduce using rule 78
	'->'           reduce using rule 78
	'='            reduce using rule 78
	'|'            reduce using rule 78
	'::'           reduce using rule 78
	%eof           reduce using rule 78


State 104

	tpairs -> identifier ':' . typeExpr ',' tpairs      (rule 76)
	tpairs -> identifier ':' . typeExpr                 (rule 77)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 150

State 105

	params -> params identifier .                       (rule 18)

	id             reduce using rule 18
	'->'           reduce using rule 18
	'=>'           reduce using rule 18


State 106

	typeExpr -> '\\' params '=>' . typeExpr             (rule 102)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 149

State 107

	args -> args atom .                                 (rule 20)

	id             reduce using rule 20
	number         reduce using rule 20
	string         reduce using rule 20
	boolean        reduce using rule 20
	'!'            reduce using rule 20
	'('            reduce using rule 20
	'['            reduce using rule 20
	'{'            reduce using rule 20


State 108

	fnApplication -> atom args '!' .                    (rule 21)

	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'=='           reduce using rule 21
	'!='           reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'||'           reduce using rule 21
	'&&'           reduce using rule 21
	'|>'           reduce using rule 21
	'<|'           reduce using rule 21
	let            reduce using rule 21
	where          reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	data           reduce using rule 21
	ty             reduce using rule 21
	')'            reduce using rule 21
	']'            reduce using rule 21
	'}'            reduce using rule 21
	','            reduce using rule 21
	'|'            reduce using rule 21
	'.'            reduce using rule 21
	%eof           reduce using rule 21


State 109

	expr -> expr '.' identifier .                       (rule 60)

	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'=='           reduce using rule 60
	'!='           reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60
	'&&'           reduce using rule 60
	'|>'           reduce using rule 60
	'<|'           reduce using rule 60
	let            reduce using rule 60
	where          reduce using rule 60
	then           reduce using rule 60
	else           reduce using rule 60
	data           reduce using rule 60
	ty             reduce using rule 60
	')'            reduce using rule 60
	']'            reduce using rule 60
	'}'            reduce using rule 60
	','            reduce using rule 60
	'|'            reduce using rule 60
	'.'            reduce using rule 60
	%eof           reduce using rule 60


State 110

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)
	expr -> expr '<|' expr .                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 74
	where          reduce using rule 74
	then           reduce using rule 74
	else           reduce using rule 74
	data           reduce using rule 74
	ty             reduce using rule 74
	')'            reduce using rule 74
	']'            reduce using rule 74
	'}'            reduce using rule 74
	','            reduce using rule 74
	'|'            reduce using rule 74
	'.'            reduce using rule 74
	%eof           reduce using rule 74


State 111

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr '|>' expr .                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 73
	where          reduce using rule 73
	then           reduce using rule 73
	else           reduce using rule 73
	data           reduce using rule 73
	ty             reduce using rule 73
	')'            reduce using rule 73
	']'            reduce using rule 73
	'}'            reduce using rule 73
	','            reduce using rule 73
	'|'            reduce using rule 73
	'.'            reduce using rule 73
	%eof           reduce using rule 73


State 112

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr '&&' expr .                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 66
	where          reduce using rule 66
	then           reduce using rule 66
	else           reduce using rule 66
	data           reduce using rule 66
	ty             reduce using rule 66
	')'            reduce using rule 66
	']'            reduce using rule 66
	'}'            reduce using rule 66
	','            reduce using rule 66
	'|'            reduce using rule 66
	'.'            reduce using rule 66
	%eof           reduce using rule 66


State 113

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr '||' expr .                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 65
	where          reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	data           reduce using rule 65
	ty             reduce using rule 65
	')'            reduce using rule 65
	']'            reduce using rule 65
	'}'            reduce using rule 65
	','            reduce using rule 65
	'|'            reduce using rule 65
	'.'            reduce using rule 65
	%eof           reduce using rule 65


State 114

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr '>=' expr .                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 72
	where          reduce using rule 72
	then           reduce using rule 72
	else           reduce using rule 72
	data           reduce using rule 72
	ty             reduce using rule 72
	')'            reduce using rule 72
	']'            reduce using rule 72
	'}'            reduce using rule 72
	','            reduce using rule 72
	'|'            reduce using rule 72
	'.'            reduce using rule 72
	%eof           reduce using rule 72


State 115

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr '>' expr .                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 70
	where          reduce using rule 70
	then           reduce using rule 70
	else           reduce using rule 70
	data           reduce using rule 70
	ty             reduce using rule 70
	')'            reduce using rule 70
	']'            reduce using rule 70
	'}'            reduce using rule 70
	','            reduce using rule 70
	'|'            reduce using rule 70
	'.'            reduce using rule 70
	%eof           reduce using rule 70


State 116

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr '<=' expr .                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 71
	where          reduce using rule 71
	then           reduce using rule 71
	else           reduce using rule 71
	data           reduce using rule 71
	ty             reduce using rule 71
	')'            reduce using rule 71
	']'            reduce using rule 71
	'}'            reduce using rule 71
	','            reduce using rule 71
	'|'            reduce using rule 71
	'.'            reduce using rule 71
	%eof           reduce using rule 71


State 117

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr '<' expr .                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 69
	where          reduce using rule 69
	then           reduce using rule 69
	else           reduce using rule 69
	data           reduce using rule 69
	ty             reduce using rule 69
	')'            reduce using rule 69
	']'            reduce using rule 69
	'}'            reduce using rule 69
	','            reduce using rule 69
	'|'            reduce using rule 69
	'.'            reduce using rule 69
	%eof           reduce using rule 69


State 118

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr '!=' expr .                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 68
	where          reduce using rule 68
	then           reduce using rule 68
	else           reduce using rule 68
	data           reduce using rule 68
	ty             reduce using rule 68
	')'            reduce using rule 68
	']'            reduce using rule 68
	'}'            reduce using rule 68
	','            reduce using rule 68
	'|'            reduce using rule 68
	'.'            reduce using rule 68
	%eof           reduce using rule 68


State 119

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr '==' expr .                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 67
	where          reduce using rule 67
	then           reduce using rule 67
	else           reduce using rule 67
	data           reduce using rule 67
	ty             reduce using rule 67
	')'            reduce using rule 67
	']'            reduce using rule 67
	'}'            reduce using rule 67
	','            reduce using rule 67
	'|'            reduce using rule 67
	'.'            reduce using rule 67
	%eof           reduce using rule 67


State 120

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr '/' expr .                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	'=='           reduce using rule 64
	'!='           reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'||'           reduce using rule 64
	'&&'           reduce using rule 64
	'|>'           reduce using rule 64
	'<|'           reduce using rule 64
	let            reduce using rule 64
	where          reduce using rule 64
	then           reduce using rule 64
	else           reduce using rule 64
	data           reduce using rule 64
	ty             reduce using rule 64
	')'            reduce using rule 64
	']'            reduce using rule 64
	'}'            reduce using rule 64
	','            reduce using rule 64
	'|'            reduce using rule 64
	'.'            reduce using rule 64
	%eof           reduce using rule 64


State 121

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr '*' expr .                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	'=='           reduce using rule 63
	'!='           reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63
	'&&'           reduce using rule 63
	'|>'           reduce using rule 63
	'<|'           reduce using rule 63
	let            reduce using rule 63
	where          reduce using rule 63
	then           reduce using rule 63
	else           reduce using rule 63
	data           reduce using rule 63
	ty             reduce using rule 63
	')'            reduce using rule 63
	']'            reduce using rule 63
	'}'            reduce using rule 63
	','            reduce using rule 63
	'|'            reduce using rule 63
	'.'            reduce using rule 63
	%eof           reduce using rule 63


State 122

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr '-' expr .                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           reduce using rule 62
	'!='           reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62
	'&&'           reduce using rule 62
	'|>'           reduce using rule 62
	'<|'           reduce using rule 62
	let            reduce using rule 62
	where          reduce using rule 62
	then           reduce using rule 62
	else           reduce using rule 62
	data           reduce using rule 62
	ty             reduce using rule 62
	')'            reduce using rule 62
	']'            reduce using rule 62
	'}'            reduce using rule 62
	','            reduce using rule 62
	'|'            reduce using rule 62
	'.'            reduce using rule 62
	%eof           reduce using rule 62


State 123

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr '+' expr .                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           reduce using rule 61
	'!='           reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'||'           reduce using rule 61
	'&&'           reduce using rule 61
	'|>'           reduce using rule 61
	'<|'           reduce using rule 61
	let            reduce using rule 61
	where          reduce using rule 61
	then           reduce using rule 61
	else           reduce using rule 61
	data           reduce using rule 61
	ty             reduce using rule 61
	')'            reduce using rule 61
	']'            reduce using rule 61
	'}'            reduce using rule 61
	','            reduce using rule 61
	'|'            reduce using rule 61
	'.'            reduce using rule 61
	%eof           reduce using rule 61


State 124

	controlFlow -> if expr then . expr else expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 148

State 125

	cases -> cases . '|' pattern '->' expr              (rule 49)
	matchExpr -> match expr cases .                     (rule 50)

	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'=='           reduce using rule 50
	'!='           reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50
	'&&'           reduce using rule 50
	'|>'           reduce using rule 50
	'<|'           reduce using rule 50
	let            reduce using rule 50
	where          reduce using rule 50
	then           reduce using rule 50
	else           reduce using rule 50
	data           reduce using rule 50
	ty             reduce using rule 50
	')'            reduce using rule 50
	']'            reduce using rule 50
	'}'            reduce using rule 50
	','            reduce using rule 50
	'|'            shift, and enter state 147
	'.'            reduce using rule 50
	%eof           reduce using rule 50


State 126

	cases -> '|' . pattern '->' expr                    (rule 48)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	'('            shift, and enter state 144
	'['            shift, and enter state 145
	'{'            shift, and enter state 146

	identifier     goto state 140
	patData        goto state 141
	pattern        goto state 142
	term           goto state 143

State 127

	tuple -> '(' expr tupleElems . ')'                  (rule 16)

	')'            shift, and enter state 139


State 128

	atom -> '(' expr ')' .                              (rule 47)

	id             reduce using rule 47
	number         reduce using rule 47
	string         reduce using rule 47
	boolean        reduce using rule 47
	'!'            reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	'=='           reduce using rule 47
	'!='           reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47
	'&&'           reduce using rule 47
	'|>'           reduce using rule 47
	'<|'           reduce using rule 47
	let            reduce using rule 47
	where          reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	data           reduce using rule 47
	ty             reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	','            reduce using rule 47
	'|'            reduce using rule 47
	'.'            reduce using rule 47
	%eof           reduce using rule 47


State 129

	tupleElems -> ',' . expr                            (rule 14)
	tupleElems -> ',' . expr tupleElems                 (rule 15)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 138

State 130

	listElements -> expr ',' . listElements             (rule 12)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	']'            reduce using rule 10
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	listElements   goto state 137
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 56

State 131

	list -> '[' listElements ']' .                      (rule 13)

	id             reduce using rule 13
	number         reduce using rule 13
	string         reduce using rule 13
	boolean        reduce using rule 13
	'!'            reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            reduce using rule 13
	'/'            reduce using rule 13
	'=='           reduce using rule 13
	'!='           reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'||'           reduce using rule 13
	'&&'           reduce using rule 13
	'|>'           reduce using rule 13
	'<|'           reduce using rule 13
	let            reduce using rule 13
	where          reduce using rule 13
	then           reduce using rule 13
	else           reduce using rule 13
	data           reduce using rule 13
	ty             reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'['            reduce using rule 13
	']'            reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	','            reduce using rule 13
	'|'            reduce using rule 13
	'.'            reduce using rule 13
	%eof           reduce using rule 13


State 132

	record -> '{' pairs '}' .                           (rule 9)

	id             reduce using rule 9
	number         reduce using rule 9
	string         reduce using rule 9
	boolean        reduce using rule 9
	'!'            reduce using rule 9
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'*'            reduce using rule 9
	'/'            reduce using rule 9
	'=='           reduce using rule 9
	'!='           reduce using rule 9
	'<'            reduce using rule 9
	'<='           reduce using rule 9
	'>'            reduce using rule 9
	'>='           reduce using rule 9
	'||'           reduce using rule 9
	'&&'           reduce using rule 9
	'|>'           reduce using rule 9
	'<|'           reduce using rule 9
	let            reduce using rule 9
	where          reduce using rule 9
	then           reduce using rule 9
	else           reduce using rule 9
	data           reduce using rule 9
	ty             reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'['            reduce using rule 9
	']'            reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	','            reduce using rule 9
	'|'            reduce using rule 9
	'.'            reduce using rule 9
	%eof           reduce using rule 9


State 133

	pairs -> identifier ':' . expr ',' pairs            (rule 7)
	pairs -> identifier ':' . expr                      (rule 8)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 136

State 134

	expr -> '\\' params '->' . expr                     (rule 57)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 135

State 135

	expr -> '\\' params '->' expr .                     (rule 57)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	let            reduce using rule 57
	where          reduce using rule 57
	then           reduce using rule 57
	else           reduce using rule 57
	data           reduce using rule 57
	ty             reduce using rule 57
	')'            reduce using rule 57
	']'            reduce using rule 57
	'}'            reduce using rule 57
	','            reduce using rule 57
	'|'            reduce using rule 57
	'.'            shift, and enter state 74
	%eof           reduce using rule 57


State 136

	pairs -> identifier ':' expr . ',' pairs            (rule 7)
	pairs -> identifier ':' expr .                      (rule 8)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	'}'            reduce using rule 8
	','            shift, and enter state 180
	'.'            shift, and enter state 74


State 137

	listElements -> expr ',' listElements .             (rule 12)

	']'            reduce using rule 12


State 138

	tupleElems -> ',' expr .                            (rule 14)
	tupleElems -> ',' expr . tupleElems                 (rule 15)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	')'            reduce using rule 14
	','            shift, and enter state 129
	'.'            shift, and enter state 74

	tupleElems     goto state 179

State 139

	tuple -> '(' expr tupleElems ')' .                  (rule 16)

	id             reduce using rule 16
	number         reduce using rule 16
	string         reduce using rule 16
	boolean        reduce using rule 16
	'!'            reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            reduce using rule 16
	'/'            reduce using rule 16
	'=='           reduce using rule 16
	'!='           reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'||'           reduce using rule 16
	'&&'           reduce using rule 16
	'|>'           reduce using rule 16
	'<|'           reduce using rule 16
	let            reduce using rule 16
	where          reduce using rule 16
	then           reduce using rule 16
	else           reduce using rule 16
	data           reduce using rule 16
	ty             reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	','            reduce using rule 16
	'|'            reduce using rule 16
	'.'            reduce using rule 16
	%eof           reduce using rule 16


State 140

	patData -> identifier . ':'                         (rule 30)
	pattern -> identifier .                             (rule 32)

	':'            shift, and enter state 178
	'->'           reduce using rule 32


State 141

	patData -> patData . identifier                     (rule 31)
	pattern -> patData .                                (rule 38)

	id             shift, and enter state 6
	'->'           reduce using rule 38

	identifier     goto state 177

State 142

	cases -> '|' pattern . '->' expr                    (rule 48)

	'->'           shift, and enter state 176


State 143

	pattern -> term .                                   (rule 33)

	'->'           reduce using rule 33


State 144

	pattern -> '(' . identifier patTupleElems ')'       (rule 36)

	id             shift, and enter state 6

	identifier     goto state 175

State 145

	pattern -> '[' . ']'                                (rule 34)
	pattern -> '[' . patListElems ']'                   (rule 35)

	id             shift, and enter state 6
	']'            shift, and enter state 174

	identifier     goto state 172
	patListElems   goto state 173

State 146

	pattern -> '{' . patRecordKeys '}'                  (rule 37)

	id             shift, and enter state 6
	'}'            reduce using rule 27

	identifier     goto state 170
	patRecordKeys  goto state 171

State 147

	cases -> cases '|' . pattern '->' expr              (rule 49)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	'('            shift, and enter state 144
	'['            shift, and enter state 145
	'{'            shift, and enter state 146

	identifier     goto state 140
	patData        goto state 141
	pattern        goto state 169
	term           goto state 143

State 148

	controlFlow -> if expr then expr . else expr        (rule 22)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	else           shift, and enter state 168
	'.'            shift, and enter state 74


State 149

	typeExpr -> typeExpr . '->' typeExpr                (rule 101)
	typeExpr -> '\\' params '=>' typeExpr .             (rule 102)

	let            reduce using rule 102
	where          reduce using rule 102
	data           reduce using rule 102
	ty             reduce using rule 102
	')'            reduce using rule 102
	'}'            reduce using rule 102
	';'            reduce using rule 102
	','            reduce using rule 102
	'->'           shift, and enter state 80
	'='            reduce using rule 102
	'|'            reduce using rule 102
	'::'           reduce using rule 102
	%eof           reduce using rule 102


State 150

	tpairs -> identifier ':' typeExpr . ',' tpairs      (rule 76)
	tpairs -> identifier ':' typeExpr .                 (rule 77)
	typeExpr -> typeExpr . '->' typeExpr                (rule 101)

	'}'            reduce using rule 77
	','            shift, and enter state 167
	'->'           shift, and enter state 80


State 151

	ttupleElems -> ',' typeExpr .                       (rule 79)
	ttupleElems -> ',' typeExpr . ttupleElems           (rule 80)
	typeExpr -> typeExpr . '->' typeExpr                (rule 101)

	')'            reduce using rule 79
	','            shift, and enter state 102
	'->'           shift, and enter state 80

	ttupleElems    goto state 166

State 152

	ttuple -> '(' typeExpr ttupleElems ')' .            (rule 81)

	id             reduce using rule 81
	number         reduce using rule 81
	string         reduce using rule 81
	boolean        reduce using rule 81
	'!'            reduce using rule 81
	let            reduce using rule 81
	where          reduce using rule 81
	data           reduce using rule 81
	ty             reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	'{'            reduce using rule 81
	'}'            reduce using rule 81
	';'            reduce using rule 81
	','            reduce using rule 81
	'->'           reduce using rule 81
	'='            reduce using rule 81
	'|'            reduce using rule 81
	'::'           reduce using rule 81
	%eof           reduce using rule 81


State 153

	dec -> ty identifier kindAnnotation '=' . typeExpr    (rule 120)
	dec -> ty identifier kindAnnotation '=' . typeExpr where tbindings    (rule 121)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 165

State 154

	kindExpr -> kindExpr . '->' kindExpr                (rule 108)
	kindAnnotation -> '::' kindExpr .                   (rule 112)

	'->'           shift, and enter state 84
	'='            reduce using rule 112


State 155

	dec -> data identifier kindAnnotation '=' . dataExprs    (rule 118)
	dec -> data identifier kindAnnotation '=' . dataExprs where tbindings    (rule 119)

	id             shift, and enter state 6

	identifier     goto state 162
	dataExpr       goto state 163
	dataExprs      goto state 164

State 156

	typeExpr -> typeExpr . '->' typeExpr                (rule 101)
	typeAnnotation -> ':' typeExpr .                    (rule 105)
	typeAnnotation -> ':' typeExpr . where tbindings    (rule 106)

	where          shift, and enter state 161
	'->'           shift, and enter state 80
	'='            reduce using rule 105
	'::'           reduce using rule 105


State 157

	typeAnnotation -> ':' instance . identifier ':' typeExpr    (rule 107)

	id             shift, and enter state 6

	identifier     goto state 160

State 158

	dec -> let identifier typeAnnotation kindAnnotation . '=' expr    (rule 116)
	dec -> let identifier typeAnnotation kindAnnotation . '=' expr where bindings    (rule 117)

	'='            shift, and enter state 159


State 159

	dec -> let identifier typeAnnotation kindAnnotation '=' . expr    (rule 116)
	dec -> let identifier typeAnnotation kindAnnotation '=' . expr where bindings    (rule 117)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 200

State 160

	typeAnnotation -> ':' instance identifier . ':' typeExpr    (rule 107)

	':'            shift, and enter state 199


State 161

	typeAnnotation -> ':' typeExpr where . tbindings    (rule 106)

	id             shift, and enter state 6

	identifier     goto state 196
	tbinding       goto state 197
	tbindings      goto state 198

State 162

	dataExpr -> identifier . ':' typeExpr               (rule 113)

	':'            shift, and enter state 195


State 163

	dataExprs -> dataExpr .                             (rule 114)

	let            reduce using rule 114
	where          reduce using rule 114
	data           reduce using rule 114
	ty             reduce using rule 114
	'|'            reduce using rule 114
	%eof           reduce using rule 114


State 164

	dataExprs -> dataExprs . '|' dataExpr               (rule 115)
	dec -> data identifier kindAnnotation '=' dataExprs .    (rule 118)
	dec -> data identifier kindAnnotation '=' dataExprs . where tbindings    (rule 119)

	let            reduce using rule 118
	where          shift, and enter state 193
	data           reduce using rule 118
	ty             reduce using rule 118
	'|'            shift, and enter state 194
	%eof           reduce using rule 118


State 165

	typeExpr -> typeExpr . '->' typeExpr                (rule 101)
	dec -> ty identifier kindAnnotation '=' typeExpr .    (rule 120)
	dec -> ty identifier kindAnnotation '=' typeExpr . where tbindings    (rule 121)

	let            reduce using rule 120
	where          shift, and enter state 192
	data           reduce using rule 120
	ty             reduce using rule 120
	'->'           shift, and enter state 80
	%eof           reduce using rule 120


State 166

	ttupleElems -> ',' typeExpr ttupleElems .           (rule 80)

	')'            reduce using rule 80


State 167

	tpairs -> identifier ':' typeExpr ',' . tpairs      (rule 76)

	id             shift, and enter state 6
	'}'            reduce using rule 75

	identifier     goto state 77
	tpairs         goto state 191

State 168

	controlFlow -> if expr then expr else . expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 190

State 169

	cases -> cases '|' pattern . '->' expr              (rule 49)

	'->'           shift, and enter state 189


State 170

	patRecordKeys -> identifier .                       (rule 28)
	patRecordKeys -> identifier . ',' patRecordKeys     (rule 29)

	'}'            reduce using rule 28
	','            shift, and enter state 188


State 171

	pattern -> '{' patRecordKeys . '}'                  (rule 37)

	'}'            shift, and enter state 187


State 172

	patListElems -> identifier .                        (rule 23)
	patListElems -> identifier . ',' patListElems       (rule 24)

	']'            reduce using rule 23
	','            shift, and enter state 186


State 173

	pattern -> '[' patListElems . ']'                   (rule 35)

	']'            shift, and enter state 185


State 174

	pattern -> '[' ']' .                                (rule 34)

	'->'           reduce using rule 34


State 175

	pattern -> '(' identifier . patTupleElems ')'       (rule 36)

	','            shift, and enter state 184

	patTupleElems  goto state 183

State 176

	cases -> '|' pattern '->' . expr                    (rule 48)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 182

State 177

	patData -> patData identifier .                     (rule 31)

	id             reduce using rule 31
	'->'           reduce using rule 31


State 178

	patData -> identifier ':' .                         (rule 30)

	id             reduce using rule 30
	'->'           reduce using rule 30


State 179

	tupleElems -> ',' expr tupleElems .                 (rule 15)

	')'            reduce using rule 15


State 180

	pairs -> identifier ':' expr ',' . pairs            (rule 7)

	id             shift, and enter state 6
	'}'            reduce using rule 6

	identifier     goto state 53
	pairs          goto state 181

State 181

	pairs -> identifier ':' expr ',' pairs .            (rule 7)

	'}'            reduce using rule 7


State 182

	cases -> '|' pattern '->' expr .                    (rule 48)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	let            reduce using rule 48
	where          reduce using rule 48
	then           reduce using rule 48
	else           reduce using rule 48
	data           reduce using rule 48
	ty             reduce using rule 48
	')'            reduce using rule 48
	']'            reduce using rule 48
	'}'            reduce using rule 48
	','            reduce using rule 48
	'|'            reduce using rule 48
	'.'            shift, and enter state 74
	%eof           reduce using rule 48


State 183

	pattern -> '(' identifier patTupleElems . ')'       (rule 36)

	')'            shift, and enter state 216


State 184

	patTupleElems -> ',' . identifier                   (rule 25)
	patTupleElems -> ',' . identifier patTupleElems     (rule 26)

	id             shift, and enter state 6

	identifier     goto state 215

State 185

	pattern -> '[' patListElems ']' .                   (rule 35)

	'->'           reduce using rule 35


State 186

	patListElems -> identifier ',' . patListElems       (rule 24)

	id             shift, and enter state 6

	identifier     goto state 172
	patListElems   goto state 214

State 187

	pattern -> '{' patRecordKeys '}' .                  (rule 37)

	'->'           reduce using rule 37


State 188

	patRecordKeys -> identifier ',' . patRecordKeys     (rule 29)

	id             shift, and enter state 6
	'}'            reduce using rule 27

	identifier     goto state 170
	patRecordKeys  goto state 213

State 189

	cases -> cases '|' pattern '->' . expr              (rule 49)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 212

State 190

	controlFlow -> if expr then expr else expr .        (rule 22)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	let            reduce using rule 22
	where          reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	data           reduce using rule 22
	ty             reduce using rule 22
	')'            reduce using rule 22
	']'            reduce using rule 22
	'}'            reduce using rule 22
	','            reduce using rule 22
	'|'            reduce using rule 22
	'.'            shift, and enter state 74
	%eof           reduce using rule 22


State 191

	tpairs -> identifier ':' typeExpr ',' tpairs .      (rule 76)

	'}'            reduce using rule 76


State 192

	dec -> ty identifier kindAnnotation '=' typeExpr where . tbindings    (rule 121)

	id             shift, and enter state 6

	identifier     goto state 196
	tbinding       goto state 197
	tbindings      goto state 211

State 193

	dec -> data identifier kindAnnotation '=' dataExprs where . tbindings    (rule 119)

	id             shift, and enter state 6

	identifier     goto state 196
	tbinding       goto state 197
	tbindings      goto state 210

State 194

	dataExprs -> dataExprs '|' . dataExpr               (rule 115)

	id             shift, and enter state 6

	identifier     goto state 162
	dataExpr       goto state 209

State 195

	dataExpr -> identifier ':' . typeExpr               (rule 113)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 208

State 196

	tbinding -> identifier . '=' typeExpr               (rule 92)
	tbinding -> identifier . implements typeExpr        (rule 93)
	tbinding -> identifier . '|->' typeExpr             (rule 94)
	tbinding -> identifier . '|' typeExpr               (rule 95)

	implements     shift, and enter state 204
	'|->'          shift, and enter state 205
	'='            shift, and enter state 206
	'|'            shift, and enter state 207


State 197

	tbindings -> tbinding .                             (rule 96)

	let            reduce using rule 96
	data           reduce using rule 96
	ty             reduce using rule 96
	';'            reduce using rule 96
	'='            reduce using rule 96
	'::'           reduce using rule 96
	%eof           reduce using rule 96


State 198

	tbindings -> tbindings . ';' tbinding               (rule 97)
	typeAnnotation -> ':' typeExpr where tbindings .    (rule 106)

	';'            shift, and enter state 203
	'='            reduce using rule 106
	'::'           reduce using rule 106


State 199

	typeAnnotation -> ':' instance identifier ':' . typeExpr    (rule 107)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 202

State 200

	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr .    (rule 116)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr . where bindings    (rule 117)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	let            reduce using rule 116
	where          shift, and enter state 201
	data           reduce using rule 116
	ty             reduce using rule 116
	'.'            shift, and enter state 74
	%eof           reduce using rule 116


State 201

	dec -> let identifier typeAnnotation kindAnnotation '=' expr where . bindings    (rule 117)

	id             shift, and enter state 6

	identifier     goto state 223
	binding        goto state 224
	bindings       goto state 225

State 202

	typeExpr -> typeExpr . '->' typeExpr                (rule 101)
	typeAnnotation -> ':' instance identifier ':' typeExpr .    (rule 107)

	'->'           shift, and enter state 80
	'='            reduce using rule 107
	'::'           reduce using rule 107


State 203

	tbindings -> tbindings ';' . tbinding               (rule 97)

	id             shift, and enter state 6

	identifier     goto state 196
	tbinding       goto state 222

State 204

	tbinding -> identifier implements . typeExpr        (rule 93)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 221

State 205

	tbinding -> identifier '|->' . typeExpr             (rule 94)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 220

State 206

	tbinding -> identifier '=' . typeExpr               (rule 92)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 219

State 207

	tbinding -> identifier '|' . typeExpr               (rule 95)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 218

State 208

	typeExpr -> typeExpr . '->' typeExpr                (rule 101)
	dataExpr -> identifier ':' typeExpr .               (rule 113)

	let            reduce using rule 113
	where          reduce using rule 113
	data           reduce using rule 113
	ty             reduce using rule 113
	'->'           shift, and enter state 80
	'|'            reduce using rule 113
	%eof           reduce using rule 113


State 209

	dataExprs -> dataExprs '|' dataExpr .               (rule 115)

	let            reduce using rule 115
	where          reduce using rule 115
	data           reduce using rule 115
	ty             reduce using rule 115
	'|'            reduce using rule 115
	%eof           reduce using rule 115


State 210

	tbindings -> tbindings . ';' tbinding               (rule 97)
	dec -> data identifier kindAnnotation '=' dataExprs where tbindings .    (rule 119)

	let            reduce using rule 119
	data           reduce using rule 119
	ty             reduce using rule 119
	';'            shift, and enter state 203
	%eof           reduce using rule 119


State 211

	tbindings -> tbindings . ';' tbinding               (rule 97)
	dec -> ty identifier kindAnnotation '=' typeExpr where tbindings .    (rule 121)

	let            reduce using rule 121
	data           reduce using rule 121
	ty             reduce using rule 121
	';'            shift, and enter state 203
	%eof           reduce using rule 121


State 212

	cases -> cases '|' pattern '->' expr .              (rule 49)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	let            reduce using rule 49
	where          reduce using rule 49
	then           reduce using rule 49
	else           reduce using rule 49
	data           reduce using rule 49
	ty             reduce using rule 49
	')'            reduce using rule 49
	']'            reduce using rule 49
	'}'            reduce using rule 49
	','            reduce using rule 49
	'|'            reduce using rule 49
	'.'            shift, and enter state 74
	%eof           reduce using rule 49


State 213

	patRecordKeys -> identifier ',' patRecordKeys .     (rule 29)

	'}'            reduce using rule 29


State 214

	patListElems -> identifier ',' patListElems .       (rule 24)

	']'            reduce using rule 24


State 215

	patTupleElems -> ',' identifier .                   (rule 25)
	patTupleElems -> ',' identifier . patTupleElems     (rule 26)

	')'            reduce using rule 25
	','            shift, and enter state 184

	patTupleElems  goto state 217

State 216

	pattern -> '(' identifier patTupleElems ')' .       (rule 36)

	'->'           reduce using rule 36


State 217

	patTupleElems -> ',' identifier patTupleElems .     (rule 26)

	')'            reduce using rule 26


State 218

	tbinding -> identifier '|' typeExpr .               (rule 95)
	typeExpr -> typeExpr . '->' typeExpr                (rule 101)

	let            reduce using rule 95
	data           reduce using rule 95
	ty             reduce using rule 95
	';'            reduce using rule 95
	'->'           shift, and enter state 80
	'='            reduce using rule 95
	'::'           reduce using rule 95
	%eof           reduce using rule 95


State 219

	tbinding -> identifier '=' typeExpr .               (rule 92)
	typeExpr -> typeExpr . '->' typeExpr                (rule 101)

	let            reduce using rule 92
	data           reduce using rule 92
	ty             reduce using rule 92
	';'            reduce using rule 92
	'->'           shift, and enter state 80
	'='            reduce using rule 92
	'::'           reduce using rule 92
	%eof           reduce using rule 92


State 220

	tbinding -> identifier '|->' typeExpr .             (rule 94)
	typeExpr -> typeExpr . '->' typeExpr                (rule 101)

	let            reduce using rule 94
	data           reduce using rule 94
	ty             reduce using rule 94
	';'            reduce using rule 94
	'->'           shift, and enter state 80
	'='            reduce using rule 94
	'::'           reduce using rule 94
	%eof           reduce using rule 94


State 221

	tbinding -> identifier implements typeExpr .        (rule 93)
	typeExpr -> typeExpr . '->' typeExpr                (rule 101)

	let            reduce using rule 93
	data           reduce using rule 93
	ty             reduce using rule 93
	';'            reduce using rule 93
	'->'           shift, and enter state 80
	'='            reduce using rule 93
	'::'           reduce using rule 93
	%eof           reduce using rule 93


State 222

	tbindings -> tbindings ';' tbinding .               (rule 97)

	let            reduce using rule 97
	data           reduce using rule 97
	ty             reduce using rule 97
	';'            reduce using rule 97
	'='            reduce using rule 97
	'::'           reduce using rule 97
	%eof           reduce using rule 97


State 223

	binding -> identifier . '=' expr                    (rule 51)

	'='            shift, and enter state 227


State 224

	bindings -> binding .                               (rule 52)

	let            reduce using rule 52
	data           reduce using rule 52
	ty             reduce using rule 52
	','            reduce using rule 52
	%eof           reduce using rule 52


State 225

	bindings -> bindings . ',' binding                  (rule 53)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr where bindings .    (rule 117)

	let            reduce using rule 117
	data           reduce using rule 117
	ty             reduce using rule 117
	','            shift, and enter state 226
	%eof           reduce using rule 117


State 226

	bindings -> bindings ',' . binding                  (rule 53)

	id             shift, and enter state 6

	identifier     goto state 223
	binding        goto state 229

State 227

	binding -> identifier '=' . expr                    (rule 51)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 228

State 228

	binding -> identifier '=' expr .                    (rule 51)
	expr -> expr . '.' identifier                       (rule 60)
	expr -> expr . '+' expr                             (rule 61)
	expr -> expr . '-' expr                             (rule 62)
	expr -> expr . '*' expr                             (rule 63)
	expr -> expr . '/' expr                             (rule 64)
	expr -> expr . '||' expr                            (rule 65)
	expr -> expr . '&&' expr                            (rule 66)
	expr -> expr . '==' expr                            (rule 67)
	expr -> expr . '!=' expr                            (rule 68)
	expr -> expr . '<' expr                             (rule 69)
	expr -> expr . '>' expr                             (rule 70)
	expr -> expr . '<=' expr                            (rule 71)
	expr -> expr . '>=' expr                            (rule 72)
	expr -> expr . '|>' expr                            (rule 73)
	expr -> expr . '<|' expr                            (rule 74)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|>'           shift, and enter state 72
	'<|'           shift, and enter state 73
	let            reduce using rule 51
	data           reduce using rule 51
	ty             reduce using rule 51
	','            reduce using rule 51
	'.'            shift, and enter state 74
	%eof           reduce using rule 51


State 229

	bindings -> bindings ',' binding .                  (rule 53)

	let            reduce using rule 53
	data           reduce using rule 53
	ty             reduce using rule 53
	','            reduce using rule 53
	%eof           reduce using rule 53


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 125
Number of terminals: 63
Number of non-terminals: 47
Number of states: 230
