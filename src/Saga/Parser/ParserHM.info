-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ./src/Saga/Parser/ParserHM.y
-----------------------------------------------------------------------------


terminal op is unused
terminal in is unused
terminal with is unused
terminal return is unused
terminal alias is unused
terminal kind is unused
terminal forall is unused
terminal exists is unused
terminal proof is unused
terminal infer is unused
terminal protocol is unused
terminal interface is unused
terminal module is unused
terminal import is unused
terminal '<-' is unused
terminal newline is unused
terminal eof is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseSagaScript -> script                   (0)
	%start_parseSagaExpr -> expr                       (1)
	%start_parseSagaType -> typeExpr                   (2)
	%start_parseSagaKind -> kindExpr                   (3)
	%start_parseSagaDec -> dec                         (4)
	identifier -> id                                   (5)
	pairs ->                                           (6)
	pairs -> identifier ':' expr ',' pairs             (7)
	pairs -> identifier ':' expr                       (8)
	record -> '{' pairs '}'                            (9)
	listElements ->                                    (10)
	listElements -> expr                               (11)
	listElements -> expr ',' listElements              (12)
	list -> '[' listElements ']'                       (13)
	tupleElems -> ',' expr                             (14)
	tupleElems -> ',' expr tupleElems                  (15)
	tuple -> '(' expr tupleElems ')'                   (16)
	params ->                                          (17)
	params -> params identifier                        (18)
	args ->                                            (19)
	args -> args atom                                  (20)
	fnApplication -> atom args '!'                     (21)
	controlFlow -> if expr then expr else expr         (22)
	patTupleElems -> ',' identifier                    (23)
	patTupleElems -> ',' identifier patTupleElems      (24)
	patRecordKeys ->                                   (25)
	patRecordKeys -> identifier                        (26)
	patRecordKeys -> identifier ',' patRecordKeys      (27)
	patData -> identifier ':'                          (28)
	patData -> patData identifier                      (29)
	pattern -> identifier                              (30)
	pattern -> term                                    (31)
	pattern -> '(' identifier patTupleElems ')'        (32)
	pattern -> '{' patRecordKeys '}'                   (33)
	pattern -> patData                                 (34)
	term -> number                                     (35)
	term -> boolean                                    (36)
	term -> string                                     (37)
	atom -> identifier                                 (38)
	atom -> term                                       (39)
	atom -> tuple                                      (40)
	atom -> list                                       (41)
	atom -> record                                     (42)
	atom -> '(' expr ')'                               (43)
	cases -> '|' pattern '->' expr                     (44)
	cases -> cases '|' pattern '->' expr               (45)
	matchExpr -> match expr cases                      (46)
	binding -> identifier '=' expr                     (47)
	bindings -> binding                                (48)
	bindings -> bindings ',' binding                   (49)
	expr -> controlFlow                                (50)
	expr -> matchExpr                                  (51)
	expr -> fnApplication                              (52)
	expr -> '\\' params '->' expr                      (53)
	expr -> atom                                       (54)
	expr -> '.' atom                                   (55)
	expr -> expr '.' identifier                        (56)
	expr -> expr '+' expr                              (57)
	expr -> expr '-' expr                              (58)
	expr -> expr '*' expr                              (59)
	expr -> expr '/' expr                              (60)
	expr -> expr '||' expr                             (61)
	expr -> expr '&&' expr                             (62)
	expr -> expr '==' expr                             (63)
	expr -> expr '!=' expr                             (64)
	expr -> expr '<' expr                              (65)
	expr -> expr '>' expr                              (66)
	expr -> expr '<=' expr                             (67)
	expr -> expr '>=' expr                             (68)
	tpairs ->                                          (69)
	tpairs -> identifier ':' typeExpr ',' tpairs       (70)
	tpairs -> identifier ':' typeExpr                  (71)
	trecord -> '{' tpairs '}'                          (72)
	ttupleElems -> ',' typeExpr                        (73)
	ttupleElems -> ',' typeExpr ttupleElems            (74)
	ttuple -> '(' typeExpr ttupleElems ')'             (75)
	type -> number                                     (76)
	type -> boolean                                    (77)
	type -> string                                     (78)
	type -> ttuple                                     (79)
	type -> trecord                                    (80)
	typeAtom -> type                                   (81)
	typeAtom -> identifier                             (82)
	typeAtom -> '(' typeExpr ')'                       (83)
	typeArgs ->                                        (84)
	typeArgs -> typeArgs typeAtom                      (85)
	tbinding -> identifier '=' typeExpr                (86)
	tbinding -> identifier implements typeExpr         (87)
	tbinding -> identifier '|->' typeExpr              (88)
	tbinding -> identifier '|' typeExpr                (89)
	tbindings -> tbinding                              (90)
	tbindings -> tbindings ';' tbinding                (91)
	tagged -> identifier ':' typeExpr                  (92)
	typeExpr -> typeAtom                               (93)
	typeExpr -> tagged                                 (94)
	typeExpr -> typeExpr '->' typeExpr                 (95)
	typeExpr -> '\\' params '=>' typeExpr              (96)
	typeExpr -> typeAtom typeArgs '!'                  (97)
	typeAnnotation ->                                  (98)
	typeAnnotation -> ':' typeExpr                     (99)
	typeAnnotation -> ':' typeExpr where tbindings     (100)
	typeAnnotation -> ':' instance identifier ':' typeExpr   (101)
	kindExpr -> kindExpr '->' kindExpr                 (102)
	kindExpr -> '(' kindExpr ')'                       (103)
	kindExpr -> identifier                             (104)
	kindAnnotation ->                                  (105)
	kindAnnotation -> '::' kindExpr                    (106)
	dataExpr -> identifier ':' typeExpr                (107)
	dataExprs -> dataExpr                              (108)
	dataExprs -> dataExprs '|' dataExpr                (109)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr   (110)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr where bindings   (111)
	dec -> data identifier kindAnnotation '=' dataExprs   (112)
	dec -> data identifier kindAnnotation '=' dataExprs where tbindings   (113)
	dec -> ty identifier kindAnnotation '=' typeExpr   (114)
	dec -> ty identifier kindAnnotation '=' typeExpr where tbindings   (115)
	declarations -> dec                                (116)
	declarations -> declarations dec                   (117)
	script -> declarations                             (118)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { L.RangedToken (T.Id _) _ }
	number         { L.RangedToken (T.Number _) _ }
	string         { L.RangedToken (T.String _) _ }
	boolean        { L.RangedToken (T.Boolean _) _ }
	'!'            { L.RangedToken (T.Operator "!") _ }
	'+'            { L.RangedToken (T.Operator "+") _ }
	'-'            { L.RangedToken (T.Operator "-") _ }
	'*'            { L.RangedToken (T.Operator "*") _ }
	'/'            { L.RangedToken (T.Operator "/") _ }
	'=='           { L.RangedToken (T.Operator "==") _ }
	'!='           { L.RangedToken (T.Operator "!=") _ }
	'<'            { L.RangedToken (T.Operator "<") _ }
	'<='           { L.RangedToken (T.Operator "<=") _ }
	'>'            { L.RangedToken (T.Operator ">") _ }
	'>='           { L.RangedToken (T.Operator ">=") _ }
	'||'           { L.RangedToken (T.Operator "||") _ }
	'&&'           { L.RangedToken (T.Operator "&&") _ }
	op             { L.RangedToken (T.Operator _) _ }
	let            { L.RangedToken T.Let _ }
	in             { L.RangedToken T.In _ }
	where          { L.RangedToken T.Where _ }
	with           { L.RangedToken T.With _ }
	if             { L.RangedToken T.If _ }
	then           { L.RangedToken T.Then _ }
	else           { L.RangedToken T.Else _ }
	match          { L.RangedToken T.Match _ }
	return         { L.RangedToken T.Return _ }
	data           { L.RangedToken T.Data _ }
	ty             { L.RangedToken T.Type _ }
	alias          { L.RangedToken T.Alias _ }
	kind           { L.RangedToken T.Kind _ }
	forall         { L.RangedToken T.Forall _ }
	exists         { L.RangedToken T.Exists _ }
	proof          { L.RangedToken T.Proof _ }
	infer          { L.RangedToken T.Infer _ }
	protocol       { L.RangedToken T.Protocol _ }
	interface      { L.RangedToken T.Interface _ }
	instance       { L.RangedToken T.Instance _ }
	implements     { L.RangedToken T.Implements _ }
	module         { L.RangedToken T.Module _ }
	import         { L.RangedToken T.Import _ }
	'('            { L.RangedToken T.LParen _ }
	')'            { L.RangedToken T.RParen _ }
	'['            { L.RangedToken T.LBrack _ }
	']'            { L.RangedToken T.RBrack _ }
	'{'            { L.RangedToken T.LCurly _ }
	'}'            { L.RangedToken T.RCurly _ }
	':'            { L.RangedToken T.Colon _ }
	';'            { L.RangedToken T.SemiColon _ }
	','            { L.RangedToken T.Comma _ }
	'->'           { L.RangedToken T.Arrow _ }
	'<-'           { L.RangedToken T.BackArrow _ }
	'=>'           { L.RangedToken T.FatArrow _ }
	'|->'          { L.RangedToken T.PipeArrow _ }
	'='            { L.RangedToken T.Equals _ }
	'|'            { L.RangedToken T.Pipe _ }
	'.'            { L.RangedToken T.Dot _ }
	'::'           { L.RangedToken T.Section _ }
	'\\'           { L.RangedToken T.BackSlash _ }
	newline        { L.RangedToken T.Newline _ }
	eof            { L.RangedToken T.EOF _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseSagaScript rule  0
	%start_parseSagaExpr rule  1
	%start_parseSagaType rule  2
	%start_parseSagaKind rule  3
	%start_parseSagaDec rule  4
	identifier      rule  5
	pairs           rules 6, 7, 8
	record          rule  9
	listElements    rules 10, 11, 12
	list            rule  13
	tupleElems      rules 14, 15
	tuple           rule  16
	params          rules 17, 18
	args            rules 19, 20
	fnApplication   rule  21
	controlFlow     rule  22
	patTupleElems   rules 23, 24
	patRecordKeys   rules 25, 26, 27
	patData         rules 28, 29
	pattern         rules 30, 31, 32, 33, 34
	term            rules 35, 36, 37
	atom            rules 38, 39, 40, 41, 42, 43
	cases           rules 44, 45
	matchExpr       rule  46
	binding         rule  47
	bindings        rules 48, 49
	expr            rules 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
	tpairs          rules 69, 70, 71
	trecord         rule  72
	ttupleElems     rules 73, 74
	ttuple          rule  75
	type            rules 76, 77, 78, 79, 80
	typeAtom        rules 81, 82, 83
	typeArgs        rules 84, 85
	tbinding        rules 86, 87, 88, 89
	tbindings       rules 90, 91
	tagged          rule  92
	typeExpr        rules 93, 94, 95, 96, 97
	typeAnnotation  rules 98, 99, 100, 101
	kindExpr        rules 102, 103, 104
	kindAnnotation  rules 105, 106
	dataExpr        rule  107
	dataExprs       rules 108, 109
	dec             rules 110, 111, 112, 113, 114, 115
	declarations    rules 116, 117
	script          rule  118

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseSagaScript -> . script                  (rule 0)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10

	dec            goto state 47
	declarations   goto state 48
	script         goto state 49

State 1

	%start_parseSagaExpr -> . expr                      (rule 1)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 36

State 2

	%start_parseSagaType -> . typeExpr                  (rule 2)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 20

State 3

	%start_parseSagaKind -> . kindExpr                  (rule 3)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 12

State 4

	%start_parseSagaDec -> . dec                        (rule 4)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10

	dec            goto state 7

State 5

	identifier -> . id                                  (rule 5)

	id             shift, and enter state 6


State 6

	identifier -> id .                                  (rule 5)

	id             reduce using rule 5
	number         reduce using rule 5
	string         reduce using rule 5
	boolean        reduce using rule 5
	'!'            reduce using rule 5
	'+'            reduce using rule 5
	'-'            reduce using rule 5
	'*'            reduce using rule 5
	'/'            reduce using rule 5
	'=='           reduce using rule 5
	'!='           reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	'||'           reduce using rule 5
	'&&'           reduce using rule 5
	let            reduce using rule 5
	where          reduce using rule 5
	then           reduce using rule 5
	else           reduce using rule 5
	data           reduce using rule 5
	ty             reduce using rule 5
	implements     reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	'['            reduce using rule 5
	']'            reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	':'            reduce using rule 5
	';'            reduce using rule 5
	','            reduce using rule 5
	'->'           reduce using rule 5
	'=>'           reduce using rule 5
	'|->'          reduce using rule 5
	'='            reduce using rule 5
	'|'            reduce using rule 5
	'.'            reduce using rule 5
	'::'           reduce using rule 5
	%eof           reduce using rule 5


State 7

	%start_parseSagaDec -> dec .                        (rule 4)

	%eof           accept


State 8

	dec -> let . identifier typeAnnotation kindAnnotation '=' expr    (rule 110)
	dec -> let . identifier typeAnnotation kindAnnotation '=' expr where bindings    (rule 111)

	id             shift, and enter state 6

	identifier     goto state 85

State 9

	dec -> data . identifier kindAnnotation '=' dataExprs    (rule 112)
	dec -> data . identifier kindAnnotation '=' dataExprs where tbindings    (rule 113)

	id             shift, and enter state 6

	identifier     goto state 84

State 10

	dec -> ty . identifier kindAnnotation '=' typeExpr    (rule 114)
	dec -> ty . identifier kindAnnotation '=' typeExpr where tbindings    (rule 115)

	id             shift, and enter state 6

	identifier     goto state 83

State 11

	kindExpr -> identifier .                            (rule 104)

	')'            reduce using rule 104
	'->'           reduce using rule 104
	'='            reduce using rule 104
	%eof           reduce using rule 104


State 12

	%start_parseSagaKind -> kindExpr .                  (rule 3)
	kindExpr -> kindExpr . '->' kindExpr                (rule 102)

	'->'           shift, and enter state 82
	%eof           accept


State 13

	kindExpr -> '(' . kindExpr ')'                      (rule 103)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 81

State 14

	typeAtom -> identifier .                            (rule 82)
	tagged -> identifier . ':' typeExpr                 (rule 92)

	id             reduce using rule 82
	number         reduce using rule 82
	string         reduce using rule 82
	boolean        reduce using rule 82
	'!'            reduce using rule 82
	let            reduce using rule 82
	where          reduce using rule 82
	data           reduce using rule 82
	ty             reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	'{'            reduce using rule 82
	'}'            reduce using rule 82
	':'            shift, and enter state 80
	';'            reduce using rule 82
	','            reduce using rule 82
	'->'           reduce using rule 82
	'='            reduce using rule 82
	'|'            reduce using rule 82
	'::'           reduce using rule 82
	%eof           reduce using rule 82


State 15

	type -> trecord .                                   (rule 80)

	id             reduce using rule 80
	number         reduce using rule 80
	string         reduce using rule 80
	boolean        reduce using rule 80
	'!'            reduce using rule 80
	let            reduce using rule 80
	where          reduce using rule 80
	data           reduce using rule 80
	ty             reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	'{'            reduce using rule 80
	'}'            reduce using rule 80
	';'            reduce using rule 80
	','            reduce using rule 80
	'->'           reduce using rule 80
	'='            reduce using rule 80
	'|'            reduce using rule 80
	'::'           reduce using rule 80
	%eof           reduce using rule 80


State 16

	type -> ttuple .                                    (rule 79)

	id             reduce using rule 79
	number         reduce using rule 79
	string         reduce using rule 79
	boolean        reduce using rule 79
	'!'            reduce using rule 79
	let            reduce using rule 79
	where          reduce using rule 79
	data           reduce using rule 79
	ty             reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'{'            reduce using rule 79
	'}'            reduce using rule 79
	';'            reduce using rule 79
	','            reduce using rule 79
	'->'           reduce using rule 79
	'='            reduce using rule 79
	'|'            reduce using rule 79
	'::'           reduce using rule 79
	%eof           reduce using rule 79


State 17

	typeAtom -> type .                                  (rule 81)

	id             reduce using rule 81
	number         reduce using rule 81
	string         reduce using rule 81
	boolean        reduce using rule 81
	'!'            reduce using rule 81
	let            reduce using rule 81
	where          reduce using rule 81
	data           reduce using rule 81
	ty             reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	'{'            reduce using rule 81
	'}'            reduce using rule 81
	';'            reduce using rule 81
	','            reduce using rule 81
	'->'           reduce using rule 81
	'='            reduce using rule 81
	'|'            reduce using rule 81
	'::'           reduce using rule 81
	%eof           reduce using rule 81


State 18

	typeExpr -> typeAtom .                              (rule 93)
	typeExpr -> typeAtom . typeArgs '!'                 (rule 97)

	id             reduce using rule 84
	number         reduce using rule 84
	string         reduce using rule 84
	boolean        reduce using rule 84
	'!'            reduce using rule 84
	let            reduce using rule 93
	where          reduce using rule 93
	data           reduce using rule 93
	ty             reduce using rule 93
	'('            reduce using rule 84
	')'            reduce using rule 93
	'{'            reduce using rule 84
	'}'            reduce using rule 93
	';'            reduce using rule 93
	','            reduce using rule 93
	'->'           reduce using rule 93
	'='            reduce using rule 93
	'|'            reduce using rule 93
	'::'           reduce using rule 93
	%eof           reduce using rule 93

	typeArgs       goto state 79

State 19

	typeExpr -> tagged .                                (rule 94)

	let            reduce using rule 94
	where          reduce using rule 94
	data           reduce using rule 94
	ty             reduce using rule 94
	')'            reduce using rule 94
	'}'            reduce using rule 94
	';'            reduce using rule 94
	','            reduce using rule 94
	'->'           reduce using rule 94
	'='            reduce using rule 94
	'|'            reduce using rule 94
	'::'           reduce using rule 94
	%eof           reduce using rule 94


State 20

	%start_parseSagaType -> typeExpr .                  (rule 2)
	typeExpr -> typeExpr . '->' typeExpr                (rule 95)

	'->'           shift, and enter state 78
	%eof           accept


State 21

	type -> number .                                    (rule 76)

	id             reduce using rule 76
	number         reduce using rule 76
	string         reduce using rule 76
	boolean        reduce using rule 76
	'!'            reduce using rule 76
	let            reduce using rule 76
	where          reduce using rule 76
	data           reduce using rule 76
	ty             reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	'{'            reduce using rule 76
	'}'            reduce using rule 76
	';'            reduce using rule 76
	','            reduce using rule 76
	'->'           reduce using rule 76
	'='            reduce using rule 76
	'|'            reduce using rule 76
	'::'           reduce using rule 76
	%eof           reduce using rule 76


State 22

	type -> string .                                    (rule 78)

	id             reduce using rule 78
	number         reduce using rule 78
	string         reduce using rule 78
	boolean        reduce using rule 78
	'!'            reduce using rule 78
	let            reduce using rule 78
	where          reduce using rule 78
	data           reduce using rule 78
	ty             reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	'{'            reduce using rule 78
	'}'            reduce using rule 78
	';'            reduce using rule 78
	','            reduce using rule 78
	'->'           reduce using rule 78
	'='            reduce using rule 78
	'|'            reduce using rule 78
	'::'           reduce using rule 78
	%eof           reduce using rule 78


State 23

	type -> boolean .                                   (rule 77)

	id             reduce using rule 77
	number         reduce using rule 77
	string         reduce using rule 77
	boolean        reduce using rule 77
	'!'            reduce using rule 77
	let            reduce using rule 77
	where          reduce using rule 77
	data           reduce using rule 77
	ty             reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	'{'            reduce using rule 77
	'}'            reduce using rule 77
	';'            reduce using rule 77
	','            reduce using rule 77
	'->'           reduce using rule 77
	'='            reduce using rule 77
	'|'            reduce using rule 77
	'::'           reduce using rule 77
	%eof           reduce using rule 77


State 24

	ttuple -> '(' . typeExpr ttupleElems ')'            (rule 75)
	typeAtom -> '(' . typeExpr ')'                      (rule 83)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 77

State 25

	trecord -> '{' . tpairs '}'                         (rule 72)

	id             shift, and enter state 6
	'}'            reduce using rule 69

	identifier     goto state 75
	tpairs         goto state 76

State 26

	typeExpr -> '\\' . params '=>' typeExpr             (rule 96)

	id             reduce using rule 17
	'=>'           reduce using rule 17

	params         goto state 74

State 27

	atom -> identifier .                                (rule 38)

	id             reduce using rule 38
	number         reduce using rule 38
	string         reduce using rule 38
	boolean        reduce using rule 38
	'!'            reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'*'            reduce using rule 38
	'/'            reduce using rule 38
	'=='           reduce using rule 38
	'!='           reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38
	'&&'           reduce using rule 38
	let            reduce using rule 38
	where          reduce using rule 38
	then           reduce using rule 38
	else           reduce using rule 38
	data           reduce using rule 38
	ty             reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	','            reduce using rule 38
	'|'            reduce using rule 38
	'.'            reduce using rule 38
	%eof           reduce using rule 38


State 28

	atom -> record .                                    (rule 42)

	id             reduce using rule 42
	number         reduce using rule 42
	string         reduce using rule 42
	boolean        reduce using rule 42
	'!'            reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'/'            reduce using rule 42
	'=='           reduce using rule 42
	'!='           reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42
	'&&'           reduce using rule 42
	let            reduce using rule 42
	where          reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	data           reduce using rule 42
	ty             reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	','            reduce using rule 42
	'|'            reduce using rule 42
	'.'            reduce using rule 42
	%eof           reduce using rule 42


State 29

	atom -> list .                                      (rule 41)

	id             reduce using rule 41
	number         reduce using rule 41
	string         reduce using rule 41
	boolean        reduce using rule 41
	'!'            reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'*'            reduce using rule 41
	'/'            reduce using rule 41
	'=='           reduce using rule 41
	'!='           reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41
	'&&'           reduce using rule 41
	let            reduce using rule 41
	where          reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	data           reduce using rule 41
	ty             reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	','            reduce using rule 41
	'|'            reduce using rule 41
	'.'            reduce using rule 41
	%eof           reduce using rule 41


State 30

	atom -> tuple .                                     (rule 40)

	id             reduce using rule 40
	number         reduce using rule 40
	string         reduce using rule 40
	boolean        reduce using rule 40
	'!'            reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'*'            reduce using rule 40
	'/'            reduce using rule 40
	'=='           reduce using rule 40
	'!='           reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40
	'&&'           reduce using rule 40
	let            reduce using rule 40
	where          reduce using rule 40
	then           reduce using rule 40
	else           reduce using rule 40
	data           reduce using rule 40
	ty             reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	','            reduce using rule 40
	'|'            reduce using rule 40
	'.'            reduce using rule 40
	%eof           reduce using rule 40


State 31

	expr -> fnApplication .                             (rule 52)

	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'=='           reduce using rule 52
	'!='           reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52
	'&&'           reduce using rule 52
	let            reduce using rule 52
	where          reduce using rule 52
	then           reduce using rule 52
	else           reduce using rule 52
	data           reduce using rule 52
	ty             reduce using rule 52
	')'            reduce using rule 52
	']'            reduce using rule 52
	'}'            reduce using rule 52
	','            reduce using rule 52
	'|'            reduce using rule 52
	'.'            reduce using rule 52
	%eof           reduce using rule 52


State 32

	expr -> controlFlow .                               (rule 50)

	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'=='           reduce using rule 50
	'!='           reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50
	'&&'           reduce using rule 50
	let            reduce using rule 50
	where          reduce using rule 50
	then           reduce using rule 50
	else           reduce using rule 50
	data           reduce using rule 50
	ty             reduce using rule 50
	')'            reduce using rule 50
	']'            reduce using rule 50
	'}'            reduce using rule 50
	','            reduce using rule 50
	'|'            reduce using rule 50
	'.'            reduce using rule 50
	%eof           reduce using rule 50


State 33

	atom -> term .                                      (rule 39)

	id             reduce using rule 39
	number         reduce using rule 39
	string         reduce using rule 39
	boolean        reduce using rule 39
	'!'            reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'*'            reduce using rule 39
	'/'            reduce using rule 39
	'=='           reduce using rule 39
	'!='           reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39
	'&&'           reduce using rule 39
	let            reduce using rule 39
	where          reduce using rule 39
	then           reduce using rule 39
	else           reduce using rule 39
	data           reduce using rule 39
	ty             reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	','            reduce using rule 39
	'|'            reduce using rule 39
	'.'            reduce using rule 39
	%eof           reduce using rule 39


State 34

	fnApplication -> atom . args '!'                    (rule 21)
	expr -> atom .                                      (rule 54)

	id             reduce using rule 19
	number         reduce using rule 19
	string         reduce using rule 19
	boolean        reduce using rule 19
	'!'            reduce using rule 19
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'=='           reduce using rule 54
	'!='           reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54
	'&&'           reduce using rule 54
	let            reduce using rule 54
	where          reduce using rule 54
	then           reduce using rule 54
	else           reduce using rule 54
	data           reduce using rule 54
	ty             reduce using rule 54
	'('            reduce using rule 19
	')'            reduce using rule 54
	'['            reduce using rule 19
	']'            reduce using rule 54
	'{'            reduce using rule 19
	'}'            reduce using rule 54
	','            reduce using rule 54
	'|'            reduce using rule 54
	'.'            reduce using rule 54
	%eof           reduce using rule 54

	args           goto state 73

State 35

	expr -> matchExpr .                                 (rule 51)

	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'=='           reduce using rule 51
	'!='           reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51
	'&&'           reduce using rule 51
	let            reduce using rule 51
	where          reduce using rule 51
	then           reduce using rule 51
	else           reduce using rule 51
	data           reduce using rule 51
	ty             reduce using rule 51
	')'            reduce using rule 51
	']'            reduce using rule 51
	'}'            reduce using rule 51
	','            reduce using rule 51
	'|'            reduce using rule 51
	'.'            reduce using rule 51
	%eof           reduce using rule 51


State 36

	%start_parseSagaExpr -> expr .                      (rule 1)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'.'            shift, and enter state 72
	%eof           accept


State 37

	term -> number .                                    (rule 35)

	id             reduce using rule 35
	number         reduce using rule 35
	string         reduce using rule 35
	boolean        reduce using rule 35
	'!'            reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            reduce using rule 35
	'/'            reduce using rule 35
	'=='           reduce using rule 35
	'!='           reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'||'           reduce using rule 35
	'&&'           reduce using rule 35
	let            reduce using rule 35
	where          reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	data           reduce using rule 35
	ty             reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	','            reduce using rule 35
	'->'           reduce using rule 35
	'|'            reduce using rule 35
	'.'            reduce using rule 35
	%eof           reduce using rule 35


State 38

	term -> string .                                    (rule 37)

	id             reduce using rule 37
	number         reduce using rule 37
	string         reduce using rule 37
	boolean        reduce using rule 37
	'!'            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            reduce using rule 37
	'/'            reduce using rule 37
	'=='           reduce using rule 37
	'!='           reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37
	'&&'           reduce using rule 37
	let            reduce using rule 37
	where          reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	data           reduce using rule 37
	ty             reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	','            reduce using rule 37
	'->'           reduce using rule 37
	'|'            reduce using rule 37
	'.'            reduce using rule 37
	%eof           reduce using rule 37


State 39

	term -> boolean .                                   (rule 36)

	id             reduce using rule 36
	number         reduce using rule 36
	string         reduce using rule 36
	boolean        reduce using rule 36
	'!'            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'*'            reduce using rule 36
	'/'            reduce using rule 36
	'=='           reduce using rule 36
	'!='           reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'||'           reduce using rule 36
	'&&'           reduce using rule 36
	let            reduce using rule 36
	where          reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	data           reduce using rule 36
	ty             reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	','            reduce using rule 36
	'->'           reduce using rule 36
	'|'            reduce using rule 36
	'.'            reduce using rule 36
	%eof           reduce using rule 36


State 40

	controlFlow -> if . expr then expr else expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 59

State 41

	matchExpr -> match . expr cases                     (rule 46)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 58

State 42

	tuple -> '(' . expr tupleElems ')'                  (rule 16)
	atom -> '(' . expr ')'                              (rule 43)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 57

State 43

	list -> '[' . listElements ']'                      (rule 13)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	']'            reduce using rule 10
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	listElements   goto state 55
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 56

State 44

	record -> '{' . pairs '}'                           (rule 9)

	id             shift, and enter state 6
	'}'            reduce using rule 6

	identifier     goto state 53
	pairs          goto state 54

State 45

	expr -> '.' . atom                                  (rule 55)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	term           goto state 33
	atom           goto state 52

State 46

	expr -> '\\' . params '->' expr                     (rule 53)

	id             reduce using rule 17
	'->'           reduce using rule 17

	params         goto state 51

State 47

	declarations -> dec .                               (rule 116)

	let            reduce using rule 116
	data           reduce using rule 116
	ty             reduce using rule 116
	%eof           reduce using rule 116


State 48

	declarations -> declarations . dec                  (rule 117)
	script -> declarations .                            (rule 118)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10
	%eof           reduce using rule 118

	dec            goto state 50

State 49

	%start_parseSagaScript -> script .                  (rule 0)

	%eof           accept


State 50

	declarations -> declarations dec .                  (rule 117)

	let            reduce using rule 117
	data           reduce using rule 117
	ty             reduce using rule 117
	%eof           reduce using rule 117


State 51

	params -> params . identifier                       (rule 18)
	expr -> '\\' params . '->' expr                     (rule 53)

	id             shift, and enter state 6
	'->'           shift, and enter state 130

	identifier     goto state 103

State 52

	expr -> '.' atom .                                  (rule 55)

	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'=='           reduce using rule 55
	'!='           reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55
	'&&'           reduce using rule 55
	let            reduce using rule 55
	where          reduce using rule 55
	then           reduce using rule 55
	else           reduce using rule 55
	data           reduce using rule 55
	ty             reduce using rule 55
	')'            reduce using rule 55
	']'            reduce using rule 55
	'}'            reduce using rule 55
	','            reduce using rule 55
	'|'            reduce using rule 55
	'.'            reduce using rule 55
	%eof           reduce using rule 55


State 53

	pairs -> identifier . ':' expr ',' pairs            (rule 7)
	pairs -> identifier . ':' expr                      (rule 8)

	':'            shift, and enter state 129


State 54

	record -> '{' pairs . '}'                           (rule 9)

	'}'            shift, and enter state 128


State 55

	list -> '[' listElements . ']'                      (rule 13)

	']'            shift, and enter state 127


State 56

	listElements -> expr .                              (rule 11)
	listElements -> expr . ',' listElements             (rule 12)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	']'            reduce using rule 11
	','            shift, and enter state 126
	'.'            shift, and enter state 72


State 57

	tuple -> '(' expr . tupleElems ')'                  (rule 16)
	atom -> '(' expr . ')'                              (rule 43)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	')'            shift, and enter state 124
	','            shift, and enter state 125
	'.'            shift, and enter state 72

	tupleElems     goto state 123

State 58

	matchExpr -> match expr . cases                     (rule 46)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'|'            shift, and enter state 122
	'.'            shift, and enter state 72

	cases          goto state 121

State 59

	controlFlow -> if expr . then expr else expr        (rule 22)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	then           shift, and enter state 120
	'.'            shift, and enter state 72


State 60

	expr -> expr '+' . expr                             (rule 57)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 119

State 61

	expr -> expr '-' . expr                             (rule 58)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 118

State 62

	expr -> expr '*' . expr                             (rule 59)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 117

State 63

	expr -> expr '/' . expr                             (rule 60)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 116

State 64

	expr -> expr '==' . expr                            (rule 63)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 115

State 65

	expr -> expr '!=' . expr                            (rule 64)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 114

State 66

	expr -> expr '<' . expr                             (rule 65)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 113

State 67

	expr -> expr '<=' . expr                            (rule 67)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 112

State 68

	expr -> expr '>' . expr                             (rule 66)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 111

State 69

	expr -> expr '>=' . expr                            (rule 68)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 110

State 70

	expr -> expr '||' . expr                            (rule 61)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 109

State 71

	expr -> expr '&&' . expr                            (rule 62)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 108

State 72

	expr -> expr '.' . identifier                       (rule 56)

	id             shift, and enter state 6

	identifier     goto state 107

State 73

	args -> args . atom                                 (rule 20)
	fnApplication -> atom args . '!'                    (rule 21)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	'!'            shift, and enter state 106
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	term           goto state 33
	atom           goto state 105

State 74

	params -> params . identifier                       (rule 18)
	typeExpr -> '\\' params . '=>' typeExpr             (rule 96)

	id             shift, and enter state 6
	'=>'           shift, and enter state 104

	identifier     goto state 103

State 75

	tpairs -> identifier . ':' typeExpr ',' tpairs      (rule 70)
	tpairs -> identifier . ':' typeExpr                 (rule 71)

	':'            shift, and enter state 102


State 76

	trecord -> '{' tpairs . '}'                         (rule 72)

	'}'            shift, and enter state 101


State 77

	ttuple -> '(' typeExpr . ttupleElems ')'            (rule 75)
	typeAtom -> '(' typeExpr . ')'                      (rule 83)
	typeExpr -> typeExpr . '->' typeExpr                (rule 95)

	')'            shift, and enter state 99
	','            shift, and enter state 100
	'->'           shift, and enter state 78

	ttupleElems    goto state 98

State 78

	typeExpr -> typeExpr '->' . typeExpr                (rule 95)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 97

State 79

	typeArgs -> typeArgs . typeAtom                     (rule 85)
	typeExpr -> typeAtom typeArgs . '!'                 (rule 97)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'!'            shift, and enter state 96
	'('            shift, and enter state 24
	'{'            shift, and enter state 25

	identifier     goto state 94
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 95

State 80

	tagged -> identifier ':' . typeExpr                 (rule 92)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 93

State 81

	kindExpr -> kindExpr . '->' kindExpr                (rule 102)
	kindExpr -> '(' kindExpr . ')'                      (rule 103)

	')'            shift, and enter state 92
	'->'           shift, and enter state 82


State 82

	kindExpr -> kindExpr '->' . kindExpr                (rule 102)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 91

State 83

	dec -> ty identifier . kindAnnotation '=' typeExpr    (rule 114)
	dec -> ty identifier . kindAnnotation '=' typeExpr where tbindings    (rule 115)

	'='            reduce using rule 105
	'::'           shift, and enter state 89

	kindAnnotation goto state 90

State 84

	dec -> data identifier . kindAnnotation '=' dataExprs    (rule 112)
	dec -> data identifier . kindAnnotation '=' dataExprs where tbindings    (rule 113)

	'='            reduce using rule 105
	'::'           shift, and enter state 89

	kindAnnotation goto state 88

State 85

	dec -> let identifier . typeAnnotation kindAnnotation '=' expr    (rule 110)
	dec -> let identifier . typeAnnotation kindAnnotation '=' expr where bindings    (rule 111)

	':'            shift, and enter state 87
	'='            reduce using rule 98
	'::'           reduce using rule 98

	typeAnnotation goto state 86

State 86

	dec -> let identifier typeAnnotation . kindAnnotation '=' expr    (rule 110)
	dec -> let identifier typeAnnotation . kindAnnotation '=' expr where bindings    (rule 111)

	'='            reduce using rule 105
	'::'           shift, and enter state 89

	kindAnnotation goto state 153

State 87

	typeAnnotation -> ':' . typeExpr                    (rule 99)
	typeAnnotation -> ':' . typeExpr where tbindings    (rule 100)
	typeAnnotation -> ':' . instance identifier ':' typeExpr    (rule 101)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	instance       shift, and enter state 152
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 151

State 88

	dec -> data identifier kindAnnotation . '=' dataExprs    (rule 112)
	dec -> data identifier kindAnnotation . '=' dataExprs where tbindings    (rule 113)

	'='            shift, and enter state 150


State 89

	kindAnnotation -> '::' . kindExpr                   (rule 106)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 149

State 90

	dec -> ty identifier kindAnnotation . '=' typeExpr    (rule 114)
	dec -> ty identifier kindAnnotation . '=' typeExpr where tbindings    (rule 115)

	'='            shift, and enter state 148


State 91

	kindExpr -> kindExpr . '->' kindExpr                (rule 102)
	kindExpr -> kindExpr '->' kindExpr .                (rule 102)

	')'            reduce using rule 102
	'->'           reduce using rule 102
	'='            reduce using rule 102
	%eof           reduce using rule 102


State 92

	kindExpr -> '(' kindExpr ')' .                      (rule 103)

	')'            reduce using rule 103
	'->'           reduce using rule 103
	'='            reduce using rule 103
	%eof           reduce using rule 103


State 93

	tagged -> identifier ':' typeExpr .                 (rule 92)
	typeExpr -> typeExpr . '->' typeExpr                (rule 95)

	let            reduce using rule 92
	where          reduce using rule 92
	data           reduce using rule 92
	ty             reduce using rule 92
	')'            reduce using rule 92
	'}'            reduce using rule 92
	';'            reduce using rule 92
	','            reduce using rule 92
	'->'           shift, and enter state 78
	'='            reduce using rule 92
	'|'            reduce using rule 92
	'::'           reduce using rule 92
	%eof           reduce using rule 92


State 94

	typeAtom -> identifier .                            (rule 82)

	id             reduce using rule 82
	number         reduce using rule 82
	string         reduce using rule 82
	boolean        reduce using rule 82
	'!'            reduce using rule 82
	'('            reduce using rule 82
	'{'            reduce using rule 82


State 95

	typeArgs -> typeArgs typeAtom .                     (rule 85)

	id             reduce using rule 85
	number         reduce using rule 85
	string         reduce using rule 85
	boolean        reduce using rule 85
	'!'            reduce using rule 85
	'('            reduce using rule 85
	'{'            reduce using rule 85


State 96

	typeExpr -> typeAtom typeArgs '!' .                 (rule 97)

	let            reduce using rule 97
	where          reduce using rule 97
	data           reduce using rule 97
	ty             reduce using rule 97
	')'            reduce using rule 97
	'}'            reduce using rule 97
	';'            reduce using rule 97
	','            reduce using rule 97
	'->'           reduce using rule 97
	'='            reduce using rule 97
	'|'            reduce using rule 97
	'::'           reduce using rule 97
	%eof           reduce using rule 97


State 97

	typeExpr -> typeExpr . '->' typeExpr                (rule 95)
	typeExpr -> typeExpr '->' typeExpr .                (rule 95)

	let            reduce using rule 95
	where          reduce using rule 95
	data           reduce using rule 95
	ty             reduce using rule 95
	')'            reduce using rule 95
	'}'            reduce using rule 95
	';'            reduce using rule 95
	','            reduce using rule 95
	'->'           shift, and enter state 78
	'='            reduce using rule 95
	'|'            reduce using rule 95
	'::'           reduce using rule 95
	%eof           reduce using rule 95


State 98

	ttuple -> '(' typeExpr ttupleElems . ')'            (rule 75)

	')'            shift, and enter state 147


State 99

	typeAtom -> '(' typeExpr ')' .                      (rule 83)

	id             reduce using rule 83
	number         reduce using rule 83
	string         reduce using rule 83
	boolean        reduce using rule 83
	'!'            reduce using rule 83
	let            reduce using rule 83
	where          reduce using rule 83
	data           reduce using rule 83
	ty             reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	'{'            reduce using rule 83
	'}'            reduce using rule 83
	';'            reduce using rule 83
	','            reduce using rule 83
	'->'           reduce using rule 83
	'='            reduce using rule 83
	'|'            reduce using rule 83
	'::'           reduce using rule 83
	%eof           reduce using rule 83


State 100

	ttupleElems -> ',' . typeExpr                       (rule 73)
	ttupleElems -> ',' . typeExpr ttupleElems           (rule 74)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 146

State 101

	trecord -> '{' tpairs '}' .                         (rule 72)

	id             reduce using rule 72
	number         reduce using rule 72
	string         reduce using rule 72
	boolean        reduce using rule 72
	'!'            reduce using rule 72
	let            reduce using rule 72
	where          reduce using rule 72
	data           reduce using rule 72
	ty             reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	'{'            reduce using rule 72
	'}'            reduce using rule 72
	';'            reduce using rule 72
	','            reduce using rule 72
	'->'           reduce using rule 72
	'='            reduce using rule 72
	'|'            reduce using rule 72
	'::'           reduce using rule 72
	%eof           reduce using rule 72


State 102

	tpairs -> identifier ':' . typeExpr ',' tpairs      (rule 70)
	tpairs -> identifier ':' . typeExpr                 (rule 71)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 145

State 103

	params -> params identifier .                       (rule 18)

	id             reduce using rule 18
	'->'           reduce using rule 18
	'=>'           reduce using rule 18


State 104

	typeExpr -> '\\' params '=>' . typeExpr             (rule 96)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 144

State 105

	args -> args atom .                                 (rule 20)

	id             reduce using rule 20
	number         reduce using rule 20
	string         reduce using rule 20
	boolean        reduce using rule 20
	'!'            reduce using rule 20
	'('            reduce using rule 20
	'['            reduce using rule 20
	'{'            reduce using rule 20


State 106

	fnApplication -> atom args '!' .                    (rule 21)

	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'=='           reduce using rule 21
	'!='           reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'||'           reduce using rule 21
	'&&'           reduce using rule 21
	let            reduce using rule 21
	where          reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	data           reduce using rule 21
	ty             reduce using rule 21
	')'            reduce using rule 21
	']'            reduce using rule 21
	'}'            reduce using rule 21
	','            reduce using rule 21
	'|'            reduce using rule 21
	'.'            reduce using rule 21
	%eof           reduce using rule 21


State 107

	expr -> expr '.' identifier .                       (rule 56)

	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'=='           reduce using rule 56
	'!='           reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56
	'&&'           reduce using rule 56
	let            reduce using rule 56
	where          reduce using rule 56
	then           reduce using rule 56
	else           reduce using rule 56
	data           reduce using rule 56
	ty             reduce using rule 56
	')'            reduce using rule 56
	']'            reduce using rule 56
	'}'            reduce using rule 56
	','            reduce using rule 56
	'|'            reduce using rule 56
	'.'            reduce using rule 56
	%eof           reduce using rule 56


State 108

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr '&&' expr .                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	let            reduce using rule 62
	where          reduce using rule 62
	then           reduce using rule 62
	else           reduce using rule 62
	data           reduce using rule 62
	ty             reduce using rule 62
	')'            reduce using rule 62
	']'            reduce using rule 62
	'}'            reduce using rule 62
	','            reduce using rule 62
	'|'            reduce using rule 62
	'.'            reduce using rule 62
	%eof           reduce using rule 62


State 109

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr '||' expr .                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	let            reduce using rule 61
	where          reduce using rule 61
	then           reduce using rule 61
	else           reduce using rule 61
	data           reduce using rule 61
	ty             reduce using rule 61
	')'            reduce using rule 61
	']'            reduce using rule 61
	'}'            reduce using rule 61
	','            reduce using rule 61
	'|'            reduce using rule 61
	'.'            reduce using rule 61
	%eof           reduce using rule 61


State 110

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)
	expr -> expr '>=' expr .                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	let            reduce using rule 68
	where          reduce using rule 68
	then           reduce using rule 68
	else           reduce using rule 68
	data           reduce using rule 68
	ty             reduce using rule 68
	')'            reduce using rule 68
	']'            reduce using rule 68
	'}'            reduce using rule 68
	','            reduce using rule 68
	'|'            reduce using rule 68
	'.'            reduce using rule 68
	%eof           reduce using rule 68


State 111

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr '>' expr .                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	let            reduce using rule 66
	where          reduce using rule 66
	then           reduce using rule 66
	else           reduce using rule 66
	data           reduce using rule 66
	ty             reduce using rule 66
	')'            reduce using rule 66
	']'            reduce using rule 66
	'}'            reduce using rule 66
	','            reduce using rule 66
	'|'            reduce using rule 66
	'.'            reduce using rule 66
	%eof           reduce using rule 66


State 112

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr '<=' expr .                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	let            reduce using rule 67
	where          reduce using rule 67
	then           reduce using rule 67
	else           reduce using rule 67
	data           reduce using rule 67
	ty             reduce using rule 67
	')'            reduce using rule 67
	']'            reduce using rule 67
	'}'            reduce using rule 67
	','            reduce using rule 67
	'|'            reduce using rule 67
	'.'            reduce using rule 67
	%eof           reduce using rule 67


State 113

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr '<' expr .                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	let            reduce using rule 65
	where          reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	data           reduce using rule 65
	ty             reduce using rule 65
	')'            reduce using rule 65
	']'            reduce using rule 65
	'}'            reduce using rule 65
	','            reduce using rule 65
	'|'            reduce using rule 65
	'.'            reduce using rule 65
	%eof           reduce using rule 65


State 114

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr '!=' expr .                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	let            reduce using rule 64
	where          reduce using rule 64
	then           reduce using rule 64
	else           reduce using rule 64
	data           reduce using rule 64
	ty             reduce using rule 64
	')'            reduce using rule 64
	']'            reduce using rule 64
	'}'            reduce using rule 64
	','            reduce using rule 64
	'|'            reduce using rule 64
	'.'            reduce using rule 64
	%eof           reduce using rule 64


State 115

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr '==' expr .                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	let            reduce using rule 63
	where          reduce using rule 63
	then           reduce using rule 63
	else           reduce using rule 63
	data           reduce using rule 63
	ty             reduce using rule 63
	')'            reduce using rule 63
	']'            reduce using rule 63
	'}'            reduce using rule 63
	','            reduce using rule 63
	'|'            reduce using rule 63
	'.'            reduce using rule 63
	%eof           reduce using rule 63


State 116

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr '/' expr .                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'=='           reduce using rule 60
	'!='           reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60
	'&&'           reduce using rule 60
	let            reduce using rule 60
	where          reduce using rule 60
	then           reduce using rule 60
	else           reduce using rule 60
	data           reduce using rule 60
	ty             reduce using rule 60
	')'            reduce using rule 60
	']'            reduce using rule 60
	'}'            reduce using rule 60
	','            reduce using rule 60
	'|'            reduce using rule 60
	'.'            reduce using rule 60
	%eof           reduce using rule 60


State 117

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr '*' expr .                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'=='           reduce using rule 59
	'!='           reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59
	'&&'           reduce using rule 59
	let            reduce using rule 59
	where          reduce using rule 59
	then           reduce using rule 59
	else           reduce using rule 59
	data           reduce using rule 59
	ty             reduce using rule 59
	')'            reduce using rule 59
	']'            reduce using rule 59
	'}'            reduce using rule 59
	','            reduce using rule 59
	'|'            reduce using rule 59
	'.'            reduce using rule 59
	%eof           reduce using rule 59


State 118

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr '-' expr .                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           reduce using rule 58
	'!='           reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58
	'&&'           reduce using rule 58
	let            reduce using rule 58
	where          reduce using rule 58
	then           reduce using rule 58
	else           reduce using rule 58
	data           reduce using rule 58
	ty             reduce using rule 58
	')'            reduce using rule 58
	']'            reduce using rule 58
	'}'            reduce using rule 58
	','            reduce using rule 58
	'|'            reduce using rule 58
	'.'            reduce using rule 58
	%eof           reduce using rule 58


State 119

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr '+' expr .                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           reduce using rule 57
	'!='           reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57
	'&&'           reduce using rule 57
	let            reduce using rule 57
	where          reduce using rule 57
	then           reduce using rule 57
	else           reduce using rule 57
	data           reduce using rule 57
	ty             reduce using rule 57
	')'            reduce using rule 57
	']'            reduce using rule 57
	'}'            reduce using rule 57
	','            reduce using rule 57
	'|'            reduce using rule 57
	'.'            reduce using rule 57
	%eof           reduce using rule 57


State 120

	controlFlow -> if expr then . expr else expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 143

State 121

	cases -> cases . '|' pattern '->' expr              (rule 45)
	matchExpr -> match expr cases .                     (rule 46)

	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	'=='           reduce using rule 46
	'!='           reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46
	'&&'           reduce using rule 46
	let            reduce using rule 46
	where          reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	data           reduce using rule 46
	ty             reduce using rule 46
	')'            reduce using rule 46
	']'            reduce using rule 46
	'}'            reduce using rule 46
	','            reduce using rule 46
	'|'            shift, and enter state 142
	'.'            reduce using rule 46
	%eof           reduce using rule 46


State 122

	cases -> '|' . pattern '->' expr                    (rule 44)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	'('            shift, and enter state 140
	'{'            shift, and enter state 141

	identifier     goto state 136
	patData        goto state 137
	pattern        goto state 138
	term           goto state 139

State 123

	tuple -> '(' expr tupleElems . ')'                  (rule 16)

	')'            shift, and enter state 135


State 124

	atom -> '(' expr ')' .                              (rule 43)

	id             reduce using rule 43
	number         reduce using rule 43
	string         reduce using rule 43
	boolean        reduce using rule 43
	'!'            reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'=='           reduce using rule 43
	'!='           reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43
	'&&'           reduce using rule 43
	let            reduce using rule 43
	where          reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	data           reduce using rule 43
	ty             reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	','            reduce using rule 43
	'|'            reduce using rule 43
	'.'            reduce using rule 43
	%eof           reduce using rule 43


State 125

	tupleElems -> ',' . expr                            (rule 14)
	tupleElems -> ',' . expr tupleElems                 (rule 15)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 134

State 126

	listElements -> expr ',' . listElements             (rule 12)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	']'            reduce using rule 10
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	listElements   goto state 133
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 56

State 127

	list -> '[' listElements ']' .                      (rule 13)

	id             reduce using rule 13
	number         reduce using rule 13
	string         reduce using rule 13
	boolean        reduce using rule 13
	'!'            reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            reduce using rule 13
	'/'            reduce using rule 13
	'=='           reduce using rule 13
	'!='           reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'||'           reduce using rule 13
	'&&'           reduce using rule 13
	let            reduce using rule 13
	where          reduce using rule 13
	then           reduce using rule 13
	else           reduce using rule 13
	data           reduce using rule 13
	ty             reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'['            reduce using rule 13
	']'            reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	','            reduce using rule 13
	'|'            reduce using rule 13
	'.'            reduce using rule 13
	%eof           reduce using rule 13


State 128

	record -> '{' pairs '}' .                           (rule 9)

	id             reduce using rule 9
	number         reduce using rule 9
	string         reduce using rule 9
	boolean        reduce using rule 9
	'!'            reduce using rule 9
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'*'            reduce using rule 9
	'/'            reduce using rule 9
	'=='           reduce using rule 9
	'!='           reduce using rule 9
	'<'            reduce using rule 9
	'<='           reduce using rule 9
	'>'            reduce using rule 9
	'>='           reduce using rule 9
	'||'           reduce using rule 9
	'&&'           reduce using rule 9
	let            reduce using rule 9
	where          reduce using rule 9
	then           reduce using rule 9
	else           reduce using rule 9
	data           reduce using rule 9
	ty             reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'['            reduce using rule 9
	']'            reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	','            reduce using rule 9
	'|'            reduce using rule 9
	'.'            reduce using rule 9
	%eof           reduce using rule 9


State 129

	pairs -> identifier ':' . expr ',' pairs            (rule 7)
	pairs -> identifier ':' . expr                      (rule 8)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 132

State 130

	expr -> '\\' params '->' . expr                     (rule 53)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 131

State 131

	expr -> '\\' params '->' expr .                     (rule 53)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	let            reduce using rule 53
	where          reduce using rule 53
	then           reduce using rule 53
	else           reduce using rule 53
	data           reduce using rule 53
	ty             reduce using rule 53
	')'            reduce using rule 53
	']'            reduce using rule 53
	'}'            reduce using rule 53
	','            reduce using rule 53
	'|'            reduce using rule 53
	'.'            shift, and enter state 72
	%eof           reduce using rule 53


State 132

	pairs -> identifier ':' expr . ',' pairs            (rule 7)
	pairs -> identifier ':' expr .                      (rule 8)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	'}'            reduce using rule 8
	','            shift, and enter state 172
	'.'            shift, and enter state 72


State 133

	listElements -> expr ',' listElements .             (rule 12)

	']'            reduce using rule 12


State 134

	tupleElems -> ',' expr .                            (rule 14)
	tupleElems -> ',' expr . tupleElems                 (rule 15)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	')'            reduce using rule 14
	','            shift, and enter state 125
	'.'            shift, and enter state 72

	tupleElems     goto state 171

State 135

	tuple -> '(' expr tupleElems ')' .                  (rule 16)

	id             reduce using rule 16
	number         reduce using rule 16
	string         reduce using rule 16
	boolean        reduce using rule 16
	'!'            reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            reduce using rule 16
	'/'            reduce using rule 16
	'=='           reduce using rule 16
	'!='           reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'||'           reduce using rule 16
	'&&'           reduce using rule 16
	let            reduce using rule 16
	where          reduce using rule 16
	then           reduce using rule 16
	else           reduce using rule 16
	data           reduce using rule 16
	ty             reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	','            reduce using rule 16
	'|'            reduce using rule 16
	'.'            reduce using rule 16
	%eof           reduce using rule 16


State 136

	patData -> identifier . ':'                         (rule 28)
	pattern -> identifier .                             (rule 30)

	':'            shift, and enter state 170
	'->'           reduce using rule 30


State 137

	patData -> patData . identifier                     (rule 29)
	pattern -> patData .                                (rule 34)

	id             shift, and enter state 6
	'->'           reduce using rule 34

	identifier     goto state 169

State 138

	cases -> '|' pattern . '->' expr                    (rule 44)

	'->'           shift, and enter state 168


State 139

	pattern -> term .                                   (rule 31)

	'->'           reduce using rule 31


State 140

	pattern -> '(' . identifier patTupleElems ')'       (rule 32)

	id             shift, and enter state 6

	identifier     goto state 167

State 141

	pattern -> '{' . patRecordKeys '}'                  (rule 33)

	id             shift, and enter state 6
	'}'            reduce using rule 25

	identifier     goto state 165
	patRecordKeys  goto state 166

State 142

	cases -> cases '|' . pattern '->' expr              (rule 45)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	'('            shift, and enter state 140
	'{'            shift, and enter state 141

	identifier     goto state 136
	patData        goto state 137
	pattern        goto state 164
	term           goto state 139

State 143

	controlFlow -> if expr then expr . else expr        (rule 22)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	else           shift, and enter state 163
	'.'            shift, and enter state 72


State 144

	typeExpr -> typeExpr . '->' typeExpr                (rule 95)
	typeExpr -> '\\' params '=>' typeExpr .             (rule 96)

	let            reduce using rule 96
	where          reduce using rule 96
	data           reduce using rule 96
	ty             reduce using rule 96
	')'            reduce using rule 96
	'}'            reduce using rule 96
	';'            reduce using rule 96
	','            reduce using rule 96
	'->'           shift, and enter state 78
	'='            reduce using rule 96
	'|'            reduce using rule 96
	'::'           reduce using rule 96
	%eof           reduce using rule 96


State 145

	tpairs -> identifier ':' typeExpr . ',' tpairs      (rule 70)
	tpairs -> identifier ':' typeExpr .                 (rule 71)
	typeExpr -> typeExpr . '->' typeExpr                (rule 95)

	'}'            reduce using rule 71
	','            shift, and enter state 162
	'->'           shift, and enter state 78


State 146

	ttupleElems -> ',' typeExpr .                       (rule 73)
	ttupleElems -> ',' typeExpr . ttupleElems           (rule 74)
	typeExpr -> typeExpr . '->' typeExpr                (rule 95)

	')'            reduce using rule 73
	','            shift, and enter state 100
	'->'           shift, and enter state 78

	ttupleElems    goto state 161

State 147

	ttuple -> '(' typeExpr ttupleElems ')' .            (rule 75)

	id             reduce using rule 75
	number         reduce using rule 75
	string         reduce using rule 75
	boolean        reduce using rule 75
	'!'            reduce using rule 75
	let            reduce using rule 75
	where          reduce using rule 75
	data           reduce using rule 75
	ty             reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	'{'            reduce using rule 75
	'}'            reduce using rule 75
	';'            reduce using rule 75
	','            reduce using rule 75
	'->'           reduce using rule 75
	'='            reduce using rule 75
	'|'            reduce using rule 75
	'::'           reduce using rule 75
	%eof           reduce using rule 75


State 148

	dec -> ty identifier kindAnnotation '=' . typeExpr    (rule 114)
	dec -> ty identifier kindAnnotation '=' . typeExpr where tbindings    (rule 115)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 160

State 149

	kindExpr -> kindExpr . '->' kindExpr                (rule 102)
	kindAnnotation -> '::' kindExpr .                   (rule 106)

	'->'           shift, and enter state 82
	'='            reduce using rule 106


State 150

	dec -> data identifier kindAnnotation '=' . dataExprs    (rule 112)
	dec -> data identifier kindAnnotation '=' . dataExprs where tbindings    (rule 113)

	id             shift, and enter state 6

	identifier     goto state 157
	dataExpr       goto state 158
	dataExprs      goto state 159

State 151

	typeExpr -> typeExpr . '->' typeExpr                (rule 95)
	typeAnnotation -> ':' typeExpr .                    (rule 99)
	typeAnnotation -> ':' typeExpr . where tbindings    (rule 100)

	where          shift, and enter state 156
	'->'           shift, and enter state 78
	'='            reduce using rule 99
	'::'           reduce using rule 99


State 152

	typeAnnotation -> ':' instance . identifier ':' typeExpr    (rule 101)

	id             shift, and enter state 6

	identifier     goto state 155

State 153

	dec -> let identifier typeAnnotation kindAnnotation . '=' expr    (rule 110)
	dec -> let identifier typeAnnotation kindAnnotation . '=' expr where bindings    (rule 111)

	'='            shift, and enter state 154


State 154

	dec -> let identifier typeAnnotation kindAnnotation '=' . expr    (rule 110)
	dec -> let identifier typeAnnotation kindAnnotation '=' . expr where bindings    (rule 111)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 190

State 155

	typeAnnotation -> ':' instance identifier . ':' typeExpr    (rule 101)

	':'            shift, and enter state 189


State 156

	typeAnnotation -> ':' typeExpr where . tbindings    (rule 100)

	id             shift, and enter state 6

	identifier     goto state 186
	tbinding       goto state 187
	tbindings      goto state 188

State 157

	dataExpr -> identifier . ':' typeExpr               (rule 107)

	':'            shift, and enter state 185


State 158

	dataExprs -> dataExpr .                             (rule 108)

	let            reduce using rule 108
	where          reduce using rule 108
	data           reduce using rule 108
	ty             reduce using rule 108
	'|'            reduce using rule 108
	%eof           reduce using rule 108


State 159

	dataExprs -> dataExprs . '|' dataExpr               (rule 109)
	dec -> data identifier kindAnnotation '=' dataExprs .    (rule 112)
	dec -> data identifier kindAnnotation '=' dataExprs . where tbindings    (rule 113)

	let            reduce using rule 112
	where          shift, and enter state 183
	data           reduce using rule 112
	ty             reduce using rule 112
	'|'            shift, and enter state 184
	%eof           reduce using rule 112


State 160

	typeExpr -> typeExpr . '->' typeExpr                (rule 95)
	dec -> ty identifier kindAnnotation '=' typeExpr .    (rule 114)
	dec -> ty identifier kindAnnotation '=' typeExpr . where tbindings    (rule 115)

	let            reduce using rule 114
	where          shift, and enter state 182
	data           reduce using rule 114
	ty             reduce using rule 114
	'->'           shift, and enter state 78
	%eof           reduce using rule 114


State 161

	ttupleElems -> ',' typeExpr ttupleElems .           (rule 74)

	')'            reduce using rule 74


State 162

	tpairs -> identifier ':' typeExpr ',' . tpairs      (rule 70)

	id             shift, and enter state 6
	'}'            reduce using rule 69

	identifier     goto state 75
	tpairs         goto state 181

State 163

	controlFlow -> if expr then expr else . expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 180

State 164

	cases -> cases '|' pattern . '->' expr              (rule 45)

	'->'           shift, and enter state 179


State 165

	patRecordKeys -> identifier .                       (rule 26)
	patRecordKeys -> identifier . ',' patRecordKeys     (rule 27)

	'}'            reduce using rule 26
	','            shift, and enter state 178


State 166

	pattern -> '{' patRecordKeys . '}'                  (rule 33)

	'}'            shift, and enter state 177


State 167

	pattern -> '(' identifier . patTupleElems ')'       (rule 32)

	','            shift, and enter state 176

	patTupleElems  goto state 175

State 168

	cases -> '|' pattern '->' . expr                    (rule 44)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 174

State 169

	patData -> patData identifier .                     (rule 29)

	id             reduce using rule 29
	'->'           reduce using rule 29


State 170

	patData -> identifier ':' .                         (rule 28)

	id             reduce using rule 28
	'->'           reduce using rule 28


State 171

	tupleElems -> ',' expr tupleElems .                 (rule 15)

	')'            reduce using rule 15


State 172

	pairs -> identifier ':' expr ',' . pairs            (rule 7)

	id             shift, and enter state 6
	'}'            reduce using rule 6

	identifier     goto state 53
	pairs          goto state 173

State 173

	pairs -> identifier ':' expr ',' pairs .            (rule 7)

	'}'            reduce using rule 7


State 174

	cases -> '|' pattern '->' expr .                    (rule 44)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	let            reduce using rule 44
	where          reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	data           reduce using rule 44
	ty             reduce using rule 44
	')'            reduce using rule 44
	']'            reduce using rule 44
	'}'            reduce using rule 44
	','            reduce using rule 44
	'|'            reduce using rule 44
	'.'            shift, and enter state 72
	%eof           reduce using rule 44


State 175

	pattern -> '(' identifier patTupleElems . ')'       (rule 32)

	')'            shift, and enter state 205


State 176

	patTupleElems -> ',' . identifier                   (rule 23)
	patTupleElems -> ',' . identifier patTupleElems     (rule 24)

	id             shift, and enter state 6

	identifier     goto state 204

State 177

	pattern -> '{' patRecordKeys '}' .                  (rule 33)

	'->'           reduce using rule 33


State 178

	patRecordKeys -> identifier ',' . patRecordKeys     (rule 27)

	id             shift, and enter state 6
	'}'            reduce using rule 25

	identifier     goto state 165
	patRecordKeys  goto state 203

State 179

	cases -> cases '|' pattern '->' . expr              (rule 45)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 202

State 180

	controlFlow -> if expr then expr else expr .        (rule 22)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	let            reduce using rule 22
	where          reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	data           reduce using rule 22
	ty             reduce using rule 22
	')'            reduce using rule 22
	']'            reduce using rule 22
	'}'            reduce using rule 22
	','            reduce using rule 22
	'|'            reduce using rule 22
	'.'            shift, and enter state 72
	%eof           reduce using rule 22


State 181

	tpairs -> identifier ':' typeExpr ',' tpairs .      (rule 70)

	'}'            reduce using rule 70


State 182

	dec -> ty identifier kindAnnotation '=' typeExpr where . tbindings    (rule 115)

	id             shift, and enter state 6

	identifier     goto state 186
	tbinding       goto state 187
	tbindings      goto state 201

State 183

	dec -> data identifier kindAnnotation '=' dataExprs where . tbindings    (rule 113)

	id             shift, and enter state 6

	identifier     goto state 186
	tbinding       goto state 187
	tbindings      goto state 200

State 184

	dataExprs -> dataExprs '|' . dataExpr               (rule 109)

	id             shift, and enter state 6

	identifier     goto state 157
	dataExpr       goto state 199

State 185

	dataExpr -> identifier ':' . typeExpr               (rule 107)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 198

State 186

	tbinding -> identifier . '=' typeExpr               (rule 86)
	tbinding -> identifier . implements typeExpr        (rule 87)
	tbinding -> identifier . '|->' typeExpr             (rule 88)
	tbinding -> identifier . '|' typeExpr               (rule 89)

	implements     shift, and enter state 194
	'|->'          shift, and enter state 195
	'='            shift, and enter state 196
	'|'            shift, and enter state 197


State 187

	tbindings -> tbinding .                             (rule 90)

	let            reduce using rule 90
	data           reduce using rule 90
	ty             reduce using rule 90
	';'            reduce using rule 90
	'='            reduce using rule 90
	'::'           reduce using rule 90
	%eof           reduce using rule 90


State 188

	tbindings -> tbindings . ';' tbinding               (rule 91)
	typeAnnotation -> ':' typeExpr where tbindings .    (rule 100)

	';'            shift, and enter state 193
	'='            reduce using rule 100
	'::'           reduce using rule 100


State 189

	typeAnnotation -> ':' instance identifier ':' . typeExpr    (rule 101)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 192

State 190

	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr .    (rule 110)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr . where bindings    (rule 111)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	let            reduce using rule 110
	where          shift, and enter state 191
	data           reduce using rule 110
	ty             reduce using rule 110
	'.'            shift, and enter state 72
	%eof           reduce using rule 110


State 191

	dec -> let identifier typeAnnotation kindAnnotation '=' expr where . bindings    (rule 111)

	id             shift, and enter state 6

	identifier     goto state 212
	binding        goto state 213
	bindings       goto state 214

State 192

	typeExpr -> typeExpr . '->' typeExpr                (rule 95)
	typeAnnotation -> ':' instance identifier ':' typeExpr .    (rule 101)

	'->'           shift, and enter state 78
	'='            reduce using rule 101
	'::'           reduce using rule 101


State 193

	tbindings -> tbindings ';' . tbinding               (rule 91)

	id             shift, and enter state 6

	identifier     goto state 186
	tbinding       goto state 211

State 194

	tbinding -> identifier implements . typeExpr        (rule 87)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 210

State 195

	tbinding -> identifier '|->' . typeExpr             (rule 88)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 209

State 196

	tbinding -> identifier '=' . typeExpr               (rule 86)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 208

State 197

	tbinding -> identifier '|' . typeExpr               (rule 89)

	id             shift, and enter state 6
	number         shift, and enter state 21
	string         shift, and enter state 22
	boolean        shift, and enter state 23
	'('            shift, and enter state 24
	'{'            shift, and enter state 25
	'\\'           shift, and enter state 26

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	typeExpr       goto state 207

State 198

	typeExpr -> typeExpr . '->' typeExpr                (rule 95)
	dataExpr -> identifier ':' typeExpr .               (rule 107)

	let            reduce using rule 107
	where          reduce using rule 107
	data           reduce using rule 107
	ty             reduce using rule 107
	'->'           shift, and enter state 78
	'|'            reduce using rule 107
	%eof           reduce using rule 107


State 199

	dataExprs -> dataExprs '|' dataExpr .               (rule 109)

	let            reduce using rule 109
	where          reduce using rule 109
	data           reduce using rule 109
	ty             reduce using rule 109
	'|'            reduce using rule 109
	%eof           reduce using rule 109


State 200

	tbindings -> tbindings . ';' tbinding               (rule 91)
	dec -> data identifier kindAnnotation '=' dataExprs where tbindings .    (rule 113)

	let            reduce using rule 113
	data           reduce using rule 113
	ty             reduce using rule 113
	';'            shift, and enter state 193
	%eof           reduce using rule 113


State 201

	tbindings -> tbindings . ';' tbinding               (rule 91)
	dec -> ty identifier kindAnnotation '=' typeExpr where tbindings .    (rule 115)

	let            reduce using rule 115
	data           reduce using rule 115
	ty             reduce using rule 115
	';'            shift, and enter state 193
	%eof           reduce using rule 115


State 202

	cases -> cases '|' pattern '->' expr .              (rule 45)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	let            reduce using rule 45
	where          reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	data           reduce using rule 45
	ty             reduce using rule 45
	')'            reduce using rule 45
	']'            reduce using rule 45
	'}'            reduce using rule 45
	','            reduce using rule 45
	'|'            reduce using rule 45
	'.'            shift, and enter state 72
	%eof           reduce using rule 45


State 203

	patRecordKeys -> identifier ',' patRecordKeys .     (rule 27)

	'}'            reduce using rule 27


State 204

	patTupleElems -> ',' identifier .                   (rule 23)
	patTupleElems -> ',' identifier . patTupleElems     (rule 24)

	')'            reduce using rule 23
	','            shift, and enter state 176

	patTupleElems  goto state 206

State 205

	pattern -> '(' identifier patTupleElems ')' .       (rule 32)

	'->'           reduce using rule 32


State 206

	patTupleElems -> ',' identifier patTupleElems .     (rule 24)

	')'            reduce using rule 24


State 207

	tbinding -> identifier '|' typeExpr .               (rule 89)
	typeExpr -> typeExpr . '->' typeExpr                (rule 95)

	let            reduce using rule 89
	data           reduce using rule 89
	ty             reduce using rule 89
	';'            reduce using rule 89
	'->'           shift, and enter state 78
	'='            reduce using rule 89
	'::'           reduce using rule 89
	%eof           reduce using rule 89


State 208

	tbinding -> identifier '=' typeExpr .               (rule 86)
	typeExpr -> typeExpr . '->' typeExpr                (rule 95)

	let            reduce using rule 86
	data           reduce using rule 86
	ty             reduce using rule 86
	';'            reduce using rule 86
	'->'           shift, and enter state 78
	'='            reduce using rule 86
	'::'           reduce using rule 86
	%eof           reduce using rule 86


State 209

	tbinding -> identifier '|->' typeExpr .             (rule 88)
	typeExpr -> typeExpr . '->' typeExpr                (rule 95)

	let            reduce using rule 88
	data           reduce using rule 88
	ty             reduce using rule 88
	';'            reduce using rule 88
	'->'           shift, and enter state 78
	'='            reduce using rule 88
	'::'           reduce using rule 88
	%eof           reduce using rule 88


State 210

	tbinding -> identifier implements typeExpr .        (rule 87)
	typeExpr -> typeExpr . '->' typeExpr                (rule 95)

	let            reduce using rule 87
	data           reduce using rule 87
	ty             reduce using rule 87
	';'            reduce using rule 87
	'->'           shift, and enter state 78
	'='            reduce using rule 87
	'::'           reduce using rule 87
	%eof           reduce using rule 87


State 211

	tbindings -> tbindings ';' tbinding .               (rule 91)

	let            reduce using rule 91
	data           reduce using rule 91
	ty             reduce using rule 91
	';'            reduce using rule 91
	'='            reduce using rule 91
	'::'           reduce using rule 91
	%eof           reduce using rule 91


State 212

	binding -> identifier . '=' expr                    (rule 47)

	'='            shift, and enter state 216


State 213

	bindings -> binding .                               (rule 48)

	let            reduce using rule 48
	data           reduce using rule 48
	ty             reduce using rule 48
	','            reduce using rule 48
	%eof           reduce using rule 48


State 214

	bindings -> bindings . ',' binding                  (rule 49)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr where bindings .    (rule 111)

	let            reduce using rule 111
	data           reduce using rule 111
	ty             reduce using rule 111
	','            shift, and enter state 215
	%eof           reduce using rule 111


State 215

	bindings -> bindings ',' . binding                  (rule 49)

	id             shift, and enter state 6

	identifier     goto state 212
	binding        goto state 218

State 216

	binding -> identifier '=' . expr                    (rule 47)

	id             shift, and enter state 6
	number         shift, and enter state 37
	string         shift, and enter state 38
	boolean        shift, and enter state 39
	if             shift, and enter state 40
	match          shift, and enter state 41
	'('            shift, and enter state 42
	'['            shift, and enter state 43
	'{'            shift, and enter state 44
	'.'            shift, and enter state 45
	'\\'           shift, and enter state 46

	identifier     goto state 27
	record         goto state 28
	list           goto state 29
	tuple          goto state 30
	fnApplication  goto state 31
	controlFlow    goto state 32
	term           goto state 33
	atom           goto state 34
	matchExpr      goto state 35
	expr           goto state 217

State 217

	binding -> identifier '=' expr .                    (rule 47)
	expr -> expr . '.' identifier                       (rule 56)
	expr -> expr . '+' expr                             (rule 57)
	expr -> expr . '-' expr                             (rule 58)
	expr -> expr . '*' expr                             (rule 59)
	expr -> expr . '/' expr                             (rule 60)
	expr -> expr . '||' expr                            (rule 61)
	expr -> expr . '&&' expr                            (rule 62)
	expr -> expr . '==' expr                            (rule 63)
	expr -> expr . '!=' expr                            (rule 64)
	expr -> expr . '<' expr                             (rule 65)
	expr -> expr . '>' expr                             (rule 66)
	expr -> expr . '<=' expr                            (rule 67)
	expr -> expr . '>=' expr                            (rule 68)

	'+'            shift, and enter state 60
	'-'            shift, and enter state 61
	'*'            shift, and enter state 62
	'/'            shift, and enter state 63
	'=='           shift, and enter state 64
	'!='           shift, and enter state 65
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'>'            shift, and enter state 68
	'>='           shift, and enter state 69
	'||'           shift, and enter state 70
	'&&'           shift, and enter state 71
	let            reduce using rule 47
	data           reduce using rule 47
	ty             reduce using rule 47
	','            reduce using rule 47
	'.'            shift, and enter state 72
	%eof           reduce using rule 47


State 218

	bindings -> bindings ',' binding .                  (rule 49)

	let            reduce using rule 49
	data           reduce using rule 49
	ty             reduce using rule 49
	','            reduce using rule 49
	%eof           reduce using rule 49


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 119
Number of terminals: 61
Number of non-terminals: 46
Number of states: 219
