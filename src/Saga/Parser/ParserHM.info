-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ./src/Saga/Parser/ParserHM.y
-----------------------------------------------------------------------------


rule 24 is unused
rule 61 is unused
rule 62 is unused

terminal '==' is unused
terminal '!=' is unused
terminal '<' is unused
terminal '<=' is unused
terminal '>' is unused
terminal '>=' is unused
terminal '||' is unused
terminal '&&' is unused
terminal op is unused
terminal let is unused
terminal in is unused
terminal with is unused
terminal match is unused
terminal return is unused
terminal data is unused
terminal ty is unused
terminal alias is unused
terminal kind is unused
terminal forall is unused
terminal exists is unused
terminal proof is unused
terminal infer is unused
terminal protocol is unused
terminal interface is unused
terminal instance is unused
terminal module is unused
terminal import is unused
terminal '[' is unused
terminal ']' is unused
terminal '<-' is unused
terminal '.' is unused
terminal '::' is unused
terminal newline is unused
terminal eof is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseSagaExpr -> expr                       (0)
	%start_parseSagaType -> typeExpr                   (1)
	identifier -> id                                   (2)
	pairs ->                                           (3)
	pairs -> identifier ':' expr ',' pairs             (4)
	pairs -> identifier ':' expr                       (5)
	record -> '{' pairs '}'                            (6)
	tupleElems -> ',' expr                             (7)
	tupleElems -> ',' expr tupleElems                  (8)
	tuple -> '(' expr tupleElems ')'                   (9)
	params ->                                          (10)
	params -> params identifier                        (11)
	args ->                                            (12)
	args -> args atom                                  (13)
	fnApplication -> atom args '!'                     (14)
	controlFlow -> if expr then expr else expr         (15)
	term -> number                                     (16)
	term -> boolean                                    (17)
	term -> string                                     (18)
	atom -> identifier                                 (19)
	atom -> term                                       (20)
	atom -> tuple                                      (21)
	atom -> record                                     (22)
	atom -> '(' expr ')'                               (23)
	assignment -> identifier '=' expr                  (24)
	expr -> controlFlow                                (25)
	expr -> fnApplication                              (26)
	expr -> '\\' params '->' expr                      (27)
	expr -> atom                                       (28)
	expr -> expr '+' expr                              (29)
	expr -> expr '-' expr                              (30)
	expr -> expr '*' expr                              (31)
	expr -> expr '/' expr                              (32)
	tpairs ->                                          (33)
	tpairs -> identifier ':' typeExpr ',' tpairs       (34)
	tpairs -> identifier ':' typeExpr                  (35)
	trecord -> '{' tpairs '}'                          (36)
	ttupleElems -> ',' typeExpr                        (37)
	ttupleElems -> ',' typeExpr ttupleElems            (38)
	ttuple -> '(' typeExpr ttupleElems ')'             (39)
	type -> number                                     (40)
	type -> boolean                                    (41)
	type -> string                                     (42)
	type -> ttuple                                     (43)
	type -> trecord                                    (44)
	typeAtom -> type                                   (45)
	typeAtom -> identifier                             (46)
	typeAtom -> '(' typeExpr ')'                       (47)
	typeArgs ->                                        (48)
	typeArgs -> typeArgs typeAtom                      (49)
	tbinding -> identifier '=' typeExpr                (50)
	tbinding -> identifier implements typeExpr         (51)
	tbinding -> identifier '|->' typeExpr              (52)
	tbinding -> identifier '|' typeExpr                (53)
	tbindings -> tbinding                              (54)
	tbindings -> tbindings ',' tbinding                (55)
	typeExpr -> typeExpr '->' typeExpr                 (56)
	typeExpr -> '\\' params '=>' typeExpr              (57)
	typeExpr -> typeAtom typeArgs '!'                  (58)
	typeExpr -> typeAtom                               (59)
	typeExpr -> typeExpr where tbindings               (60)
	typeAnnotation ->                                  (61)
	typeAnnotation -> ':' typeExpr                     (62)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { L.RangedToken (T.Id _) _ }
	number         { L.RangedToken (T.Number _) _ }
	string         { L.RangedToken (T.String _) _ }
	boolean        { L.RangedToken (T.Boolean _) _ }
	'!'            { L.RangedToken (T.Operator "!") _ }
	'+'            { L.RangedToken (T.Operator "+") _ }
	'-'            { L.RangedToken (T.Operator "-") _ }
	'*'            { L.RangedToken (T.Operator "*") _ }
	'/'            { L.RangedToken (T.Operator "/") _ }
	'=='           { L.RangedToken (T.Operator "==") _ }
	'!='           { L.RangedToken (T.Operator "!=") _ }
	'<'            { L.RangedToken (T.Operator "<") _ }
	'<='           { L.RangedToken (T.Operator "<=") _ }
	'>'            { L.RangedToken (T.Operator ">") _ }
	'>='           { L.RangedToken (T.Operator ">=") _ }
	'||'           { L.RangedToken (T.Operator "||") _ }
	'&&'           { L.RangedToken (T.Operator "&&") _ }
	op             { L.RangedToken (T.Operator _) _ }
	let            { L.RangedToken T.Let _ }
	in             { L.RangedToken T.In _ }
	where          { L.RangedToken T.Where _ }
	with           { L.RangedToken T.With _ }
	if             { L.RangedToken T.If _ }
	then           { L.RangedToken T.Then _ }
	else           { L.RangedToken T.Else _ }
	match          { L.RangedToken T.Match _ }
	return         { L.RangedToken T.Return _ }
	data           { L.RangedToken T.Data _ }
	ty             { L.RangedToken T.Type _ }
	alias          { L.RangedToken T.Alias _ }
	kind           { L.RangedToken T.Kind _ }
	forall         { L.RangedToken T.Forall _ }
	exists         { L.RangedToken T.Exists _ }
	proof          { L.RangedToken T.Proof _ }
	infer          { L.RangedToken T.Infer _ }
	protocol       { L.RangedToken T.Protocol _ }
	interface      { L.RangedToken T.Interface _ }
	instance       { L.RangedToken T.Instance _ }
	implements     { L.RangedToken T.Implements _ }
	module         { L.RangedToken T.Module _ }
	import         { L.RangedToken T.Import _ }
	'('            { L.RangedToken T.LParen _ }
	')'            { L.RangedToken T.RParen _ }
	'['            { L.RangedToken T.LBrack _ }
	']'            { L.RangedToken T.RBrack _ }
	'{'            { L.RangedToken T.LCurly _ }
	'}'            { L.RangedToken T.RCurly _ }
	':'            { L.RangedToken T.Colon _ }
	','            { L.RangedToken T.Comma _ }
	'->'           { L.RangedToken T.Arrow _ }
	'<-'           { L.RangedToken T.BackArrow _ }
	'=>'           { L.RangedToken T.FatArrow _ }
	'|->'          { L.RangedToken T.PipeArrow _ }
	'='            { L.RangedToken T.Equals _ }
	'|'            { L.RangedToken T.Pipe _ }
	'.'            { L.RangedToken T.Dot _ }
	'::'           { L.RangedToken T.Section _ }
	'\\'           { L.RangedToken T.BackSlash _ }
	newline        { L.RangedToken T.Newline _ }
	eof            { L.RangedToken T.EOF _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseSagaExpr rule  0
	%start_parseSagaType rule  1
	identifier      rule  2
	pairs           rules 3, 4, 5
	record          rule  6
	tupleElems      rules 7, 8
	tuple           rule  9
	params          rules 10, 11
	args            rules 12, 13
	fnApplication   rule  14
	controlFlow     rule  15
	term            rules 16, 17, 18
	atom            rules 19, 20, 21, 22, 23
	assignment      rule  24
	expr            rules 25, 26, 27, 28, 29, 30, 31, 32
	tpairs          rules 33, 34, 35
	trecord         rule  36
	ttupleElems     rules 37, 38
	ttuple          rule  39
	type            rules 40, 41, 42, 43, 44
	typeAtom        rules 45, 46, 47
	typeArgs        rules 48, 49
	tbinding        rules 50, 51, 52, 53
	tbindings       rules 54, 55
	typeExpr        rules 56, 57, 58, 59, 60
	typeAnnotation  rules 61, 62

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseSagaExpr -> . expr                      (rule 0)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 23

State 1

	%start_parseSagaType -> . typeExpr                  (rule 1)

	id             shift, and enter state 3
	number         shift, and enter state 10
	string         shift, and enter state 11
	boolean        shift, and enter state 12
	'('            shift, and enter state 13
	'{'            shift, and enter state 14
	'\\'           shift, and enter state 15

	identifier     goto state 4
	trecord        goto state 5
	ttuple         goto state 6
	type           goto state 7
	typeAtom       goto state 8
	typeExpr       goto state 9

State 2

	identifier -> . id                                  (rule 2)

	id             shift, and enter state 3


State 3

	identifier -> id .                                  (rule 2)

	id             reduce using rule 2
	number         reduce using rule 2
	string         reduce using rule 2
	boolean        reduce using rule 2
	'!'            reduce using rule 2
	'+'            reduce using rule 2
	'-'            reduce using rule 2
	'*'            reduce using rule 2
	'/'            reduce using rule 2
	where          reduce using rule 2
	then           reduce using rule 2
	else           reduce using rule 2
	implements     reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'{'            reduce using rule 2
	'}'            reduce using rule 2
	':'            reduce using rule 2
	','            reduce using rule 2
	'->'           reduce using rule 2
	'=>'           reduce using rule 2
	'|->'          reduce using rule 2
	'='            reduce using rule 2
	'|'            reduce using rule 2
	%eof           reduce using rule 2


State 4

	typeAtom -> identifier .                            (rule 46)

	id             reduce using rule 46
	number         reduce using rule 46
	string         reduce using rule 46
	boolean        reduce using rule 46
	'!'            reduce using rule 46
	where          reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	','            reduce using rule 46
	'->'           reduce using rule 46
	%eof           reduce using rule 46


State 5

	type -> trecord .                                   (rule 44)

	id             reduce using rule 44
	number         reduce using rule 44
	string         reduce using rule 44
	boolean        reduce using rule 44
	'!'            reduce using rule 44
	where          reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	','            reduce using rule 44
	'->'           reduce using rule 44
	%eof           reduce using rule 44


State 6

	type -> ttuple .                                    (rule 43)

	id             reduce using rule 43
	number         reduce using rule 43
	string         reduce using rule 43
	boolean        reduce using rule 43
	'!'            reduce using rule 43
	where          reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	','            reduce using rule 43
	'->'           reduce using rule 43
	%eof           reduce using rule 43


State 7

	typeAtom -> type .                                  (rule 45)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	where          reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	','            reduce using rule 45
	'->'           reduce using rule 45
	%eof           reduce using rule 45


State 8

	typeExpr -> typeAtom . typeArgs '!'                 (rule 58)
	typeExpr -> typeAtom .                              (rule 59)

	id             reduce using rule 48
	number         reduce using rule 48
	string         reduce using rule 48
	boolean        reduce using rule 48
	'!'            reduce using rule 48
	where          reduce using rule 59
	'('            reduce using rule 48
	')'            reduce using rule 59
	'{'            reduce using rule 48
	'}'            reduce using rule 59
	','            reduce using rule 59
	'->'           reduce using rule 59
	%eof           reduce using rule 59

	typeArgs       goto state 47

State 9

	%start_parseSagaType -> typeExpr .                  (rule 1)
	typeExpr -> typeExpr . '->' typeExpr                (rule 56)
	typeExpr -> typeExpr . where tbindings              (rule 60)

	where          shift, and enter state 45
	'->'           shift, and enter state 46
	%eof           accept


State 10

	type -> number .                                    (rule 40)

	id             reduce using rule 40
	number         reduce using rule 40
	string         reduce using rule 40
	boolean        reduce using rule 40
	'!'            reduce using rule 40
	where          reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	','            reduce using rule 40
	'->'           reduce using rule 40
	%eof           reduce using rule 40


State 11

	type -> string .                                    (rule 42)

	id             reduce using rule 42
	number         reduce using rule 42
	string         reduce using rule 42
	boolean        reduce using rule 42
	'!'            reduce using rule 42
	where          reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	','            reduce using rule 42
	'->'           reduce using rule 42
	%eof           reduce using rule 42


State 12

	type -> boolean .                                   (rule 41)

	id             reduce using rule 41
	number         reduce using rule 41
	string         reduce using rule 41
	boolean        reduce using rule 41
	'!'            reduce using rule 41
	where          reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	','            reduce using rule 41
	'->'           reduce using rule 41
	%eof           reduce using rule 41


State 13

	ttuple -> '(' . typeExpr ttupleElems ')'            (rule 39)
	typeAtom -> '(' . typeExpr ')'                      (rule 47)

	id             shift, and enter state 3
	number         shift, and enter state 10
	string         shift, and enter state 11
	boolean        shift, and enter state 12
	'('            shift, and enter state 13
	'{'            shift, and enter state 14
	'\\'           shift, and enter state 15

	identifier     goto state 4
	trecord        goto state 5
	ttuple         goto state 6
	type           goto state 7
	typeAtom       goto state 8
	typeExpr       goto state 44

State 14

	trecord -> '{' . tpairs '}'                         (rule 36)

	id             shift, and enter state 3
	'}'            reduce using rule 33

	identifier     goto state 42
	tpairs         goto state 43

State 15

	typeExpr -> '\\' . params '=>' typeExpr             (rule 57)

	id             reduce using rule 10
	'=>'           reduce using rule 10

	params         goto state 41

State 16

	atom -> identifier .                                (rule 19)

	id             reduce using rule 19
	number         reduce using rule 19
	string         reduce using rule 19
	boolean        reduce using rule 19
	'!'            reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	then           reduce using rule 19
	else           reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	','            reduce using rule 19
	%eof           reduce using rule 19


State 17

	atom -> record .                                    (rule 22)

	id             reduce using rule 22
	number         reduce using rule 22
	string         reduce using rule 22
	boolean        reduce using rule 22
	'!'            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	','            reduce using rule 22
	%eof           reduce using rule 22


State 18

	atom -> tuple .                                     (rule 21)

	id             reduce using rule 21
	number         reduce using rule 21
	string         reduce using rule 21
	boolean        reduce using rule 21
	'!'            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	','            reduce using rule 21
	%eof           reduce using rule 21


State 19

	expr -> fnApplication .                             (rule 26)

	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	then           reduce using rule 26
	else           reduce using rule 26
	')'            reduce using rule 26
	'}'            reduce using rule 26
	','            reduce using rule 26
	%eof           reduce using rule 26


State 20

	expr -> controlFlow .                               (rule 25)

	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	then           reduce using rule 25
	else           reduce using rule 25
	')'            reduce using rule 25
	'}'            reduce using rule 25
	','            reduce using rule 25
	%eof           reduce using rule 25


State 21

	atom -> term .                                      (rule 20)

	id             reduce using rule 20
	number         reduce using rule 20
	string         reduce using rule 20
	boolean        reduce using rule 20
	'!'            reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	then           reduce using rule 20
	else           reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	','            reduce using rule 20
	%eof           reduce using rule 20


State 22

	fnApplication -> atom . args '!'                    (rule 14)
	expr -> atom .                                      (rule 28)

	id             reduce using rule 12
	number         reduce using rule 12
	string         reduce using rule 12
	boolean        reduce using rule 12
	'!'            reduce using rule 12
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	then           reduce using rule 28
	else           reduce using rule 28
	'('            reduce using rule 12
	')'            reduce using rule 28
	'{'            reduce using rule 12
	'}'            reduce using rule 28
	','            reduce using rule 28
	%eof           reduce using rule 28

	args           goto state 40

State 23

	%start_parseSagaExpr -> expr .                      (rule 0)
	expr -> expr . '+' expr                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)

	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'*'            shift, and enter state 38
	'/'            shift, and enter state 39
	%eof           accept


State 24

	term -> number .                                    (rule 16)

	id             reduce using rule 16
	number         reduce using rule 16
	string         reduce using rule 16
	boolean        reduce using rule 16
	'!'            reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            reduce using rule 16
	'/'            reduce using rule 16
	then           reduce using rule 16
	else           reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	','            reduce using rule 16
	%eof           reduce using rule 16


State 25

	term -> string .                                    (rule 18)

	id             reduce using rule 18
	number         reduce using rule 18
	string         reduce using rule 18
	boolean        reduce using rule 18
	'!'            reduce using rule 18
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            reduce using rule 18
	'/'            reduce using rule 18
	then           reduce using rule 18
	else           reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	','            reduce using rule 18
	%eof           reduce using rule 18


State 26

	term -> boolean .                                   (rule 17)

	id             reduce using rule 17
	number         reduce using rule 17
	string         reduce using rule 17
	boolean        reduce using rule 17
	'!'            reduce using rule 17
	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'*'            reduce using rule 17
	'/'            reduce using rule 17
	then           reduce using rule 17
	else           reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	','            reduce using rule 17
	%eof           reduce using rule 17


State 27

	controlFlow -> if . expr then expr else expr        (rule 15)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 35

State 28

	tuple -> '(' . expr tupleElems ')'                  (rule 9)
	atom -> '(' . expr ')'                              (rule 23)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 34

State 29

	record -> '{' . pairs '}'                           (rule 6)

	id             shift, and enter state 3
	'}'            reduce using rule 3

	identifier     goto state 32
	pairs          goto state 33

State 30

	expr -> '\\' . params '->' expr                     (rule 27)

	id             reduce using rule 10
	'->'           reduce using rule 10

	params         goto state 31

State 31

	params -> params . identifier                       (rule 11)
	expr -> '\\' params . '->' expr                     (rule 27)

	id             shift, and enter state 3
	'->'           shift, and enter state 73

	identifier     goto state 59

State 32

	pairs -> identifier . ':' expr ',' pairs            (rule 4)
	pairs -> identifier . ':' expr                      (rule 5)

	':'            shift, and enter state 72


State 33

	record -> '{' pairs . '}'                           (rule 6)

	'}'            shift, and enter state 71


State 34

	tuple -> '(' expr . tupleElems ')'                  (rule 9)
	atom -> '(' expr . ')'                              (rule 23)
	expr -> expr . '+' expr                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)

	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'*'            shift, and enter state 38
	'/'            shift, and enter state 39
	')'            shift, and enter state 69
	','            shift, and enter state 70

	tupleElems     goto state 68

State 35

	controlFlow -> if expr . then expr else expr        (rule 15)
	expr -> expr . '+' expr                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)

	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'*'            shift, and enter state 38
	'/'            shift, and enter state 39
	then           shift, and enter state 67


State 36

	expr -> expr '+' . expr                             (rule 29)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 66

State 37

	expr -> expr '-' . expr                             (rule 30)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 65

State 38

	expr -> expr '*' . expr                             (rule 31)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 64

State 39

	expr -> expr '/' . expr                             (rule 32)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 63

State 40

	args -> args . atom                                 (rule 13)
	fnApplication -> atom args . '!'                    (rule 14)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	'!'            shift, and enter state 62
	'('            shift, and enter state 28
	'{'            shift, and enter state 29

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	term           goto state 21
	atom           goto state 61

State 41

	params -> params . identifier                       (rule 11)
	typeExpr -> '\\' params . '=>' typeExpr             (rule 57)

	id             shift, and enter state 3
	'=>'           shift, and enter state 60

	identifier     goto state 59

State 42

	tpairs -> identifier . ':' typeExpr ',' tpairs      (rule 34)
	tpairs -> identifier . ':' typeExpr                 (rule 35)

	':'            shift, and enter state 58


State 43

	trecord -> '{' tpairs . '}'                         (rule 36)

	'}'            shift, and enter state 57


State 44

	ttuple -> '(' typeExpr . ttupleElems ')'            (rule 39)
	typeAtom -> '(' typeExpr . ')'                      (rule 47)
	typeExpr -> typeExpr . '->' typeExpr                (rule 56)
	typeExpr -> typeExpr . where tbindings              (rule 60)

	where          shift, and enter state 45
	')'            shift, and enter state 55
	','            shift, and enter state 56
	'->'           shift, and enter state 46

	ttupleElems    goto state 54

State 45

	typeExpr -> typeExpr where . tbindings              (rule 60)

	id             shift, and enter state 3

	identifier     goto state 51
	tbinding       goto state 52
	tbindings      goto state 53

State 46

	typeExpr -> typeExpr '->' . typeExpr                (rule 56)

	id             shift, and enter state 3
	number         shift, and enter state 10
	string         shift, and enter state 11
	boolean        shift, and enter state 12
	'('            shift, and enter state 13
	'{'            shift, and enter state 14
	'\\'           shift, and enter state 15

	identifier     goto state 4
	trecord        goto state 5
	ttuple         goto state 6
	type           goto state 7
	typeAtom       goto state 8
	typeExpr       goto state 50

State 47

	typeArgs -> typeArgs . typeAtom                     (rule 49)
	typeExpr -> typeAtom typeArgs . '!'                 (rule 58)

	id             shift, and enter state 3
	number         shift, and enter state 10
	string         shift, and enter state 11
	boolean        shift, and enter state 12
	'!'            shift, and enter state 49
	'('            shift, and enter state 13
	'{'            shift, and enter state 14

	identifier     goto state 4
	trecord        goto state 5
	ttuple         goto state 6
	type           goto state 7
	typeAtom       goto state 48

State 48

	typeArgs -> typeArgs typeAtom .                     (rule 49)

	id             reduce using rule 49
	number         reduce using rule 49
	string         reduce using rule 49
	boolean        reduce using rule 49
	'!'            reduce using rule 49
	'('            reduce using rule 49
	'{'            reduce using rule 49


State 49

	typeExpr -> typeAtom typeArgs '!' .                 (rule 58)

	where          reduce using rule 58
	')'            reduce using rule 58
	'}'            reduce using rule 58
	','            reduce using rule 58
	'->'           reduce using rule 58
	%eof           reduce using rule 58


State 50

	typeExpr -> typeExpr . '->' typeExpr                (rule 56)
	typeExpr -> typeExpr '->' typeExpr .                (rule 56)
	typeExpr -> typeExpr . where tbindings              (rule 60)

	where          shift, and enter state 45
	')'            reduce using rule 56
	'}'            reduce using rule 56
	','            reduce using rule 56
	'->'           reduce using rule 56
	%eof           reduce using rule 56


State 51

	tbinding -> identifier . '=' typeExpr               (rule 50)
	tbinding -> identifier . implements typeExpr        (rule 51)
	tbinding -> identifier . '|->' typeExpr             (rule 52)
	tbinding -> identifier . '|' typeExpr               (rule 53)

	implements     shift, and enter state 84
	'|->'          shift, and enter state 85
	'='            shift, and enter state 86
	'|'            shift, and enter state 87


State 52

	tbindings -> tbinding .                             (rule 54)

	where          reduce using rule 54
	')'            reduce using rule 54
	'}'            reduce using rule 54
	','            reduce using rule 54
	'->'           reduce using rule 54
	%eof           reduce using rule 54


State 53

	tbindings -> tbindings . ',' tbinding               (rule 55)
	typeExpr -> typeExpr where tbindings .              (rule 60)

	where          reduce using rule 60
	')'            reduce using rule 60
	'}'            reduce using rule 60
	','            shift, and enter state 83
	'->'           reduce using rule 60
	%eof           reduce using rule 60


State 54

	ttuple -> '(' typeExpr ttupleElems . ')'            (rule 39)

	')'            shift, and enter state 82


State 55

	typeAtom -> '(' typeExpr ')' .                      (rule 47)

	id             reduce using rule 47
	number         reduce using rule 47
	string         reduce using rule 47
	boolean        reduce using rule 47
	'!'            reduce using rule 47
	where          reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	','            reduce using rule 47
	'->'           reduce using rule 47
	%eof           reduce using rule 47


State 56

	ttupleElems -> ',' . typeExpr                       (rule 37)
	ttupleElems -> ',' . typeExpr ttupleElems           (rule 38)

	id             shift, and enter state 3
	number         shift, and enter state 10
	string         shift, and enter state 11
	boolean        shift, and enter state 12
	'('            shift, and enter state 13
	'{'            shift, and enter state 14
	'\\'           shift, and enter state 15

	identifier     goto state 4
	trecord        goto state 5
	ttuple         goto state 6
	type           goto state 7
	typeAtom       goto state 8
	typeExpr       goto state 81

State 57

	trecord -> '{' tpairs '}' .                         (rule 36)

	id             reduce using rule 36
	number         reduce using rule 36
	string         reduce using rule 36
	boolean        reduce using rule 36
	'!'            reduce using rule 36
	where          reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	','            reduce using rule 36
	'->'           reduce using rule 36
	%eof           reduce using rule 36


State 58

	tpairs -> identifier ':' . typeExpr ',' tpairs      (rule 34)
	tpairs -> identifier ':' . typeExpr                 (rule 35)

	id             shift, and enter state 3
	number         shift, and enter state 10
	string         shift, and enter state 11
	boolean        shift, and enter state 12
	'('            shift, and enter state 13
	'{'            shift, and enter state 14
	'\\'           shift, and enter state 15

	identifier     goto state 4
	trecord        goto state 5
	ttuple         goto state 6
	type           goto state 7
	typeAtom       goto state 8
	typeExpr       goto state 80

State 59

	params -> params identifier .                       (rule 11)

	id             reduce using rule 11
	'->'           reduce using rule 11
	'=>'           reduce using rule 11


State 60

	typeExpr -> '\\' params '=>' . typeExpr             (rule 57)

	id             shift, and enter state 3
	number         shift, and enter state 10
	string         shift, and enter state 11
	boolean        shift, and enter state 12
	'('            shift, and enter state 13
	'{'            shift, and enter state 14
	'\\'           shift, and enter state 15

	identifier     goto state 4
	trecord        goto state 5
	ttuple         goto state 6
	type           goto state 7
	typeAtom       goto state 8
	typeExpr       goto state 79

State 61

	args -> args atom .                                 (rule 13)

	id             reduce using rule 13
	number         reduce using rule 13
	string         reduce using rule 13
	boolean        reduce using rule 13
	'!'            reduce using rule 13
	'('            reduce using rule 13
	'{'            reduce using rule 13


State 62

	fnApplication -> atom args '!' .                    (rule 14)

	'+'            reduce using rule 14
	'-'            reduce using rule 14
	'*'            reduce using rule 14
	'/'            reduce using rule 14
	then           reduce using rule 14
	else           reduce using rule 14
	')'            reduce using rule 14
	'}'            reduce using rule 14
	','            reduce using rule 14
	%eof           reduce using rule 14


State 63

	expr -> expr . '+' expr                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)
	expr -> expr '/' expr .                             (rule 32)

	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	then           reduce using rule 32
	else           reduce using rule 32
	')'            reduce using rule 32
	'}'            reduce using rule 32
	','            reduce using rule 32
	%eof           reduce using rule 32


State 64

	expr -> expr . '+' expr                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr '*' expr .                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)

	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31
	then           reduce using rule 31
	else           reduce using rule 31
	')'            reduce using rule 31
	'}'            reduce using rule 31
	','            reduce using rule 31
	%eof           reduce using rule 31


State 65

	expr -> expr . '+' expr                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr '-' expr .                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)

	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            shift, and enter state 38
	'/'            shift, and enter state 39
	then           reduce using rule 30
	else           reduce using rule 30
	')'            reduce using rule 30
	'}'            reduce using rule 30
	','            reduce using rule 30
	%eof           reduce using rule 30


State 66

	expr -> expr . '+' expr                             (rule 29)
	expr -> expr '+' expr .                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)

	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            shift, and enter state 38
	'/'            shift, and enter state 39
	then           reduce using rule 29
	else           reduce using rule 29
	')'            reduce using rule 29
	'}'            reduce using rule 29
	','            reduce using rule 29
	%eof           reduce using rule 29


State 67

	controlFlow -> if expr then . expr else expr        (rule 15)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 78

State 68

	tuple -> '(' expr tupleElems . ')'                  (rule 9)

	')'            shift, and enter state 77


State 69

	atom -> '(' expr ')' .                              (rule 23)

	id             reduce using rule 23
	number         reduce using rule 23
	string         reduce using rule 23
	boolean        reduce using rule 23
	'!'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	then           reduce using rule 23
	else           reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	','            reduce using rule 23
	%eof           reduce using rule 23


State 70

	tupleElems -> ',' . expr                            (rule 7)
	tupleElems -> ',' . expr tupleElems                 (rule 8)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 76

State 71

	record -> '{' pairs '}' .                           (rule 6)

	id             reduce using rule 6
	number         reduce using rule 6
	string         reduce using rule 6
	boolean        reduce using rule 6
	'!'            reduce using rule 6
	'+'            reduce using rule 6
	'-'            reduce using rule 6
	'*'            reduce using rule 6
	'/'            reduce using rule 6
	then           reduce using rule 6
	else           reduce using rule 6
	'('            reduce using rule 6
	')'            reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	','            reduce using rule 6
	%eof           reduce using rule 6


State 72

	pairs -> identifier ':' . expr ',' pairs            (rule 4)
	pairs -> identifier ':' . expr                      (rule 5)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 75

State 73

	expr -> '\\' params '->' . expr                     (rule 27)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 74

State 74

	expr -> '\\' params '->' expr .                     (rule 27)
	expr -> expr . '+' expr                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)

	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'*'            shift, and enter state 38
	'/'            shift, and enter state 39
	then           reduce using rule 27
	else           reduce using rule 27
	')'            reduce using rule 27
	'}'            reduce using rule 27
	','            reduce using rule 27
	%eof           reduce using rule 27


State 75

	pairs -> identifier ':' expr . ',' pairs            (rule 4)
	pairs -> identifier ':' expr .                      (rule 5)
	expr -> expr . '+' expr                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)

	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'*'            shift, and enter state 38
	'/'            shift, and enter state 39
	'}'            reduce using rule 5
	','            shift, and enter state 97


State 76

	tupleElems -> ',' expr .                            (rule 7)
	tupleElems -> ',' expr . tupleElems                 (rule 8)
	expr -> expr . '+' expr                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)

	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'*'            shift, and enter state 38
	'/'            shift, and enter state 39
	')'            reduce using rule 7
	','            shift, and enter state 70

	tupleElems     goto state 96

State 77

	tuple -> '(' expr tupleElems ')' .                  (rule 9)

	id             reduce using rule 9
	number         reduce using rule 9
	string         reduce using rule 9
	boolean        reduce using rule 9
	'!'            reduce using rule 9
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'*'            reduce using rule 9
	'/'            reduce using rule 9
	then           reduce using rule 9
	else           reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	','            reduce using rule 9
	%eof           reduce using rule 9


State 78

	controlFlow -> if expr then expr . else expr        (rule 15)
	expr -> expr . '+' expr                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)

	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'*'            shift, and enter state 38
	'/'            shift, and enter state 39
	else           shift, and enter state 95


State 79

	typeExpr -> typeExpr . '->' typeExpr                (rule 56)
	typeExpr -> '\\' params '=>' typeExpr .             (rule 57)
	typeExpr -> typeExpr . where tbindings              (rule 60)

	where          shift, and enter state 45
	')'            reduce using rule 57
	'}'            reduce using rule 57
	','            reduce using rule 57
	'->'           reduce using rule 57
	%eof           reduce using rule 57


State 80

	tpairs -> identifier ':' typeExpr . ',' tpairs      (rule 34)
	tpairs -> identifier ':' typeExpr .                 (rule 35)
	typeExpr -> typeExpr . '->' typeExpr                (rule 56)
	typeExpr -> typeExpr . where tbindings              (rule 60)

	where          shift, and enter state 45
	'}'            reduce using rule 35
	','            shift, and enter state 94
	'->'           shift, and enter state 46


State 81

	ttupleElems -> ',' typeExpr .                       (rule 37)
	ttupleElems -> ',' typeExpr . ttupleElems           (rule 38)
	typeExpr -> typeExpr . '->' typeExpr                (rule 56)
	typeExpr -> typeExpr . where tbindings              (rule 60)

	where          shift, and enter state 45
	')'            reduce using rule 37
	','            shift, and enter state 56
	'->'           shift, and enter state 46

	ttupleElems    goto state 93

State 82

	ttuple -> '(' typeExpr ttupleElems ')' .            (rule 39)

	id             reduce using rule 39
	number         reduce using rule 39
	string         reduce using rule 39
	boolean        reduce using rule 39
	'!'            reduce using rule 39
	where          reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	','            reduce using rule 39
	'->'           reduce using rule 39
	%eof           reduce using rule 39


State 83

	tbindings -> tbindings ',' . tbinding               (rule 55)

	id             shift, and enter state 3

	identifier     goto state 51
	tbinding       goto state 92

State 84

	tbinding -> identifier implements . typeExpr        (rule 51)

	id             shift, and enter state 3
	number         shift, and enter state 10
	string         shift, and enter state 11
	boolean        shift, and enter state 12
	'('            shift, and enter state 13
	'{'            shift, and enter state 14
	'\\'           shift, and enter state 15

	identifier     goto state 4
	trecord        goto state 5
	ttuple         goto state 6
	type           goto state 7
	typeAtom       goto state 8
	typeExpr       goto state 91

State 85

	tbinding -> identifier '|->' . typeExpr             (rule 52)

	id             shift, and enter state 3
	number         shift, and enter state 10
	string         shift, and enter state 11
	boolean        shift, and enter state 12
	'('            shift, and enter state 13
	'{'            shift, and enter state 14
	'\\'           shift, and enter state 15

	identifier     goto state 4
	trecord        goto state 5
	ttuple         goto state 6
	type           goto state 7
	typeAtom       goto state 8
	typeExpr       goto state 90

State 86

	tbinding -> identifier '=' . typeExpr               (rule 50)

	id             shift, and enter state 3
	number         shift, and enter state 10
	string         shift, and enter state 11
	boolean        shift, and enter state 12
	'('            shift, and enter state 13
	'{'            shift, and enter state 14
	'\\'           shift, and enter state 15

	identifier     goto state 4
	trecord        goto state 5
	ttuple         goto state 6
	type           goto state 7
	typeAtom       goto state 8
	typeExpr       goto state 89

State 87

	tbinding -> identifier '|' . typeExpr               (rule 53)

	id             shift, and enter state 3
	number         shift, and enter state 10
	string         shift, and enter state 11
	boolean        shift, and enter state 12
	'('            shift, and enter state 13
	'{'            shift, and enter state 14
	'\\'           shift, and enter state 15

	identifier     goto state 4
	trecord        goto state 5
	ttuple         goto state 6
	type           goto state 7
	typeAtom       goto state 8
	typeExpr       goto state 88

State 88

	tbinding -> identifier '|' typeExpr .               (rule 53)
	typeExpr -> typeExpr . '->' typeExpr                (rule 56)
	typeExpr -> typeExpr . where tbindings              (rule 60)

	where          shift, and enter state 45
	')'            reduce using rule 53
	'}'            reduce using rule 53
	','            reduce using rule 53
	'->'           reduce using rule 53
	%eof           reduce using rule 53


State 89

	tbinding -> identifier '=' typeExpr .               (rule 50)
	typeExpr -> typeExpr . '->' typeExpr                (rule 56)
	typeExpr -> typeExpr . where tbindings              (rule 60)

	where          shift, and enter state 45
	')'            reduce using rule 50
	'}'            reduce using rule 50
	','            reduce using rule 50
	'->'           reduce using rule 50
	%eof           reduce using rule 50


State 90

	tbinding -> identifier '|->' typeExpr .             (rule 52)
	typeExpr -> typeExpr . '->' typeExpr                (rule 56)
	typeExpr -> typeExpr . where tbindings              (rule 60)

	where          shift, and enter state 45
	')'            reduce using rule 52
	'}'            reduce using rule 52
	','            reduce using rule 52
	'->'           reduce using rule 52
	%eof           reduce using rule 52


State 91

	tbinding -> identifier implements typeExpr .        (rule 51)
	typeExpr -> typeExpr . '->' typeExpr                (rule 56)
	typeExpr -> typeExpr . where tbindings              (rule 60)

	where          shift, and enter state 45
	')'            reduce using rule 51
	'}'            reduce using rule 51
	','            reduce using rule 51
	'->'           reduce using rule 51
	%eof           reduce using rule 51


State 92

	tbindings -> tbindings ',' tbinding .               (rule 55)

	where          reduce using rule 55
	')'            reduce using rule 55
	'}'            reduce using rule 55
	','            reduce using rule 55
	'->'           reduce using rule 55
	%eof           reduce using rule 55


State 93

	ttupleElems -> ',' typeExpr ttupleElems .           (rule 38)

	')'            reduce using rule 38


State 94

	tpairs -> identifier ':' typeExpr ',' . tpairs      (rule 34)

	id             shift, and enter state 3
	'}'            reduce using rule 33

	identifier     goto state 42
	tpairs         goto state 100

State 95

	controlFlow -> if expr then expr else . expr        (rule 15)

	id             shift, and enter state 3
	number         shift, and enter state 24
	string         shift, and enter state 25
	boolean        shift, and enter state 26
	if             shift, and enter state 27
	'('            shift, and enter state 28
	'{'            shift, and enter state 29
	'\\'           shift, and enter state 30

	identifier     goto state 16
	record         goto state 17
	tuple          goto state 18
	fnApplication  goto state 19
	controlFlow    goto state 20
	term           goto state 21
	atom           goto state 22
	expr           goto state 99

State 96

	tupleElems -> ',' expr tupleElems .                 (rule 8)

	')'            reduce using rule 8


State 97

	pairs -> identifier ':' expr ',' . pairs            (rule 4)

	id             shift, and enter state 3
	'}'            reduce using rule 3

	identifier     goto state 32
	pairs          goto state 98

State 98

	pairs -> identifier ':' expr ',' pairs .            (rule 4)

	'}'            reduce using rule 4


State 99

	controlFlow -> if expr then expr else expr .        (rule 15)
	expr -> expr . '+' expr                             (rule 29)
	expr -> expr . '-' expr                             (rule 30)
	expr -> expr . '*' expr                             (rule 31)
	expr -> expr . '/' expr                             (rule 32)

	'+'            shift, and enter state 36
	'-'            shift, and enter state 37
	'*'            shift, and enter state 38
	'/'            shift, and enter state 39
	then           reduce using rule 15
	else           reduce using rule 15
	')'            reduce using rule 15
	'}'            reduce using rule 15
	','            reduce using rule 15
	%eof           reduce using rule 15


State 100

	tpairs -> identifier ':' typeExpr ',' tpairs .      (rule 34)

	'}'            reduce using rule 34


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 63
Number of terminals: 60
Number of non-terminals: 26
Number of states: 101
