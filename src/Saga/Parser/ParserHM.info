-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ./src/Saga/Parser/ParserHM.y
-----------------------------------------------------------------------------


terminal op is unused
terminal in is unused
terminal with is unused
terminal return is unused
terminal alias is unused
terminal kind is unused
terminal forall is unused
terminal exists is unused
terminal proof is unused
terminal infer is unused
terminal protocol is unused
terminal interface is unused
terminal module is unused
terminal import is unused
terminal ';' is unused
terminal '<-' is unused
terminal newline is unused
terminal eof is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseSagaScript -> script                   (0)
	%start_parseSagaExpr -> expr                       (1)
	%start_parseSagaType -> typeExpr                   (2)
	%start_parseSagaKind -> kindExpr                   (3)
	%start_parseSagaDec -> dec                         (4)
	identifier -> id                                   (5)
	pairs ->                                           (6)
	pairs -> identifier ':' expr ',' pairs             (7)
	pairs -> identifier ':' expr                       (8)
	record -> '{' pairs '}'                            (9)
	listElements ->                                    (10)
	listElements -> expr                               (11)
	listElements -> expr ',' listElements              (12)
	list -> '[' listElements ']'                       (13)
	tupleElems -> ',' expr                             (14)
	tupleElems -> ',' expr tupleElems                  (15)
	tuple -> '(' expr tupleElems ')'                   (16)
	params ->                                          (17)
	params -> params identifier                        (18)
	args ->                                            (19)
	args -> args atom                                  (20)
	fnApplication -> atom args '!'                     (21)
	controlFlow -> if expr then expr else expr         (22)
	patListElems -> identifier                         (23)
	patListElems -> identifier ',' patListElems        (24)
	patTupleElems -> ',' identifier                    (25)
	patTupleElems -> ',' identifier patTupleElems      (26)
	patRecordKeys ->                                   (27)
	patRecordKeys -> identifier                        (28)
	patRecordKeys -> identifier ',' patRecordKeys      (29)
	patRest ->                                         (30)
	patRest -> '|' identifier                          (31)
	patData -> identifier ':'                          (32)
	patData -> patData identifier                      (33)
	pattern -> identifier                              (34)
	pattern -> term                                    (35)
	pattern -> '(' identifier patTupleElems ')'        (36)
	pattern -> '[' ']'                                 (37)
	pattern -> '[' patListElems patRest ']'            (38)
	pattern -> '{' patRecordKeys patRest '}'           (39)
	pattern -> patData                                 (40)
	term -> number                                     (41)
	term -> string                                     (42)
	term -> boolean                                    (43)
	atom -> identifier                                 (44)
	atom -> term                                       (45)
	atom -> tuple                                      (46)
	atom -> list                                       (47)
	atom -> record                                     (48)
	atom -> '(' expr ')'                               (49)
	cases -> '|' pattern '->' expr                     (50)
	cases -> cases '|' pattern '->' expr               (51)
	matchExpr -> match expr cases                      (52)
	binding -> identifier '=' expr                     (53)
	bindings -> binding                                (54)
	bindings -> bindings ',' binding                   (55)
	expr -> controlFlow                                (56)
	expr -> matchExpr                                  (57)
	expr -> fnApplication                              (58)
	expr -> '\\' params '->' expr                      (59)
	expr -> atom                                       (60)
	expr -> '.' atom                                   (61)
	expr -> expr '.' identifier                        (62)
	expr -> expr '+' expr                              (63)
	expr -> expr '-' expr                              (64)
	expr -> expr '*' expr                              (65)
	expr -> expr '/' expr                              (66)
	expr -> expr '^' expr                              (67)
	expr -> expr '||' expr                             (68)
	expr -> expr '&&' expr                             (69)
	expr -> expr '==' expr                             (70)
	expr -> expr '!=' expr                             (71)
	expr -> expr '<' expr                              (72)
	expr -> expr '>' expr                              (73)
	expr -> expr '<=' expr                             (74)
	expr -> expr '>=' expr                             (75)
	expr -> expr '|>' expr                             (76)
	expr -> expr '<|' expr                             (77)
	expr -> expr '++' expr                             (78)
	tpairs ->                                          (79)
	tpairs -> identifier ':' typeExpr ',' tpairs       (80)
	tpairs -> identifier ':' typeExpr                  (81)
	trecord -> '{' tpairs '}'                          (82)
	ttupleElems -> ',' typeExpr                        (83)
	ttupleElems -> ',' typeExpr ttupleElems            (84)
	ttuple -> '(' typeExpr ttupleElems ')'             (85)
	type -> number                                     (86)
	type -> boolean                                    (87)
	type -> string                                     (88)
	type -> ttuple                                     (89)
	type -> trecord                                    (90)
	typeAtom -> type                                   (91)
	typeAtom -> identifier                             (92)
	typeAtom -> '(' typeExpr ')'                       (93)
	typeArgs ->                                        (94)
	typeArgs -> typeArgs typeAtom                      (95)
	tbinding -> identifier '=' typeExpr                (96)
	tbinding -> identifier implements typeExpr         (97)
	tbinding -> identifier '|->' typeExpr              (98)
	tbinding -> identifier '|' typeExpr                (99)
	tbindings -> tbinding                              (100)
	tbindings -> tbindings ',' tbinding                (101)
	tagged -> identifier ':' typeExpr                  (102)
	union -> '|' typeExpr                              (103)
	union -> union '|' typeExpr                        (104)
	typeExpr -> typeAtom                               (105)
	typeExpr -> tagged                                 (106)
	typeExpr -> union                                  (107)
	typeExpr -> typeExpr '->' typeExpr                 (108)
	typeExpr -> '\\' params '=>' typeExpr              (109)
	typeExpr -> typeAtom typeArgs '!'                  (110)
	typeAnnotation ->                                  (111)
	typeAnnotation -> ':' typeExpr                     (112)
	typeAnnotation -> ':' typeExpr where tbindings     (113)
	typeAnnotation -> ':' instance identifier ':' typeExpr   (114)
	kindExpr -> kindExpr '->' kindExpr                 (115)
	kindExpr -> '(' kindExpr ')'                       (116)
	kindExpr -> identifier                             (117)
	kindAnnotation ->                                  (118)
	kindAnnotation -> '::' kindExpr                    (119)
	dataExpr -> identifier ':' typeExpr                (120)
	dataExprs -> dataExpr                              (121)
	dataExprs -> dataExprs '|' dataExpr                (122)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr   (123)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr where bindings   (124)
	dec -> data identifier kindAnnotation '=' dataExprs   (125)
	dec -> data identifier kindAnnotation '=' dataExprs where tbindings   (126)
	dec -> ty identifier kindAnnotation '=' typeExpr   (127)
	dec -> ty identifier kindAnnotation '=' typeExpr where tbindings   (128)
	declarations -> dec                                (129)
	declarations -> declarations dec                   (130)
	script -> declarations                             (131)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { L.RangedToken (T.Id _) _ }
	number         { L.RangedToken (T.Number _) _ }
	string         { L.RangedToken (T.String _) _ }
	boolean        { L.RangedToken (T.Boolean _) _ }
	'!'            { L.RangedToken (T.Operator "!") _ }
	'+'            { L.RangedToken (T.Operator "+") _ }
	'-'            { L.RangedToken (T.Operator "-") _ }
	'*'            { L.RangedToken (T.Operator "*") _ }
	'/'            { L.RangedToken (T.Operator "/") _ }
	'^'            { L.RangedToken (T.Operator "^") _ }
	'++'           { L.RangedToken (T.Operator "++") _ }
	'=='           { L.RangedToken (T.Operator "==") _ }
	'!='           { L.RangedToken (T.Operator "!=") _ }
	'<'            { L.RangedToken (T.Operator "<") _ }
	'<='           { L.RangedToken (T.Operator "<=") _ }
	'>'            { L.RangedToken (T.Operator ">") _ }
	'>='           { L.RangedToken (T.Operator ">=") _ }
	'||'           { L.RangedToken (T.Operator "||") _ }
	'&&'           { L.RangedToken (T.Operator "&&") _ }
	'|>'           { L.RangedToken (T.Operator "|>") _ }
	'<|'           { L.RangedToken (T.Operator "<|") _ }
	op             { L.RangedToken (T.Operator _) _ }
	let            { L.RangedToken T.Let _ }
	in             { L.RangedToken T.In _ }
	where          { L.RangedToken T.Where _ }
	with           { L.RangedToken T.With _ }
	if             { L.RangedToken T.If _ }
	then           { L.RangedToken T.Then _ }
	else           { L.RangedToken T.Else _ }
	match          { L.RangedToken T.Match _ }
	return         { L.RangedToken T.Return _ }
	data           { L.RangedToken T.Data _ }
	ty             { L.RangedToken T.Type _ }
	alias          { L.RangedToken T.Alias _ }
	kind           { L.RangedToken T.Kind _ }
	forall         { L.RangedToken T.Forall _ }
	exists         { L.RangedToken T.Exists _ }
	proof          { L.RangedToken T.Proof _ }
	infer          { L.RangedToken T.Infer _ }
	protocol       { L.RangedToken T.Protocol _ }
	interface      { L.RangedToken T.Interface _ }
	instance       { L.RangedToken T.Instance _ }
	implements     { L.RangedToken T.Implements _ }
	module         { L.RangedToken T.Module _ }
	import         { L.RangedToken T.Import _ }
	'('            { L.RangedToken T.LParen _ }
	')'            { L.RangedToken T.RParen _ }
	'['            { L.RangedToken T.LBrack _ }
	']'            { L.RangedToken T.RBrack _ }
	'{'            { L.RangedToken T.LCurly _ }
	'}'            { L.RangedToken T.RCurly _ }
	':'            { L.RangedToken T.Colon _ }
	';'            { L.RangedToken T.SemiColon _ }
	','            { L.RangedToken T.Comma _ }
	'->'           { L.RangedToken T.Arrow _ }
	'<-'           { L.RangedToken T.BackArrow _ }
	'=>'           { L.RangedToken T.FatArrow _ }
	'|->'          { L.RangedToken T.PipeArrow _ }
	'='            { L.RangedToken T.Equals _ }
	'|'            { L.RangedToken T.Pipe _ }
	'.'            { L.RangedToken T.Dot _ }
	'::'           { L.RangedToken T.Section _ }
	'\\'           { L.RangedToken T.BackSlash _ }
	newline        { L.RangedToken T.Newline _ }
	eof            { L.RangedToken T.EOF _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseSagaScript rule  0
	%start_parseSagaExpr rule  1
	%start_parseSagaType rule  2
	%start_parseSagaKind rule  3
	%start_parseSagaDec rule  4
	identifier      rule  5
	pairs           rules 6, 7, 8
	record          rule  9
	listElements    rules 10, 11, 12
	list            rule  13
	tupleElems      rules 14, 15
	tuple           rule  16
	params          rules 17, 18
	args            rules 19, 20
	fnApplication   rule  21
	controlFlow     rule  22
	patListElems    rules 23, 24
	patTupleElems   rules 25, 26
	patRecordKeys   rules 27, 28, 29
	patRest         rules 30, 31
	patData         rules 32, 33
	pattern         rules 34, 35, 36, 37, 38, 39, 40
	term            rules 41, 42, 43
	atom            rules 44, 45, 46, 47, 48, 49
	cases           rules 50, 51
	matchExpr       rule  52
	binding         rule  53
	bindings        rules 54, 55
	expr            rules 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78
	tpairs          rules 79, 80, 81
	trecord         rule  82
	ttupleElems     rules 83, 84
	ttuple          rule  85
	type            rules 86, 87, 88, 89, 90
	typeAtom        rules 91, 92, 93
	typeArgs        rules 94, 95
	tbinding        rules 96, 97, 98, 99
	tbindings       rules 100, 101
	tagged          rule  102
	union           rules 103, 104
	typeExpr        rules 105, 106, 107, 108, 109, 110
	typeAnnotation  rules 111, 112, 113, 114
	kindExpr        rules 115, 116, 117
	kindAnnotation  rules 118, 119
	dataExpr        rule  120
	dataExprs       rules 121, 122
	dec             rules 123, 124, 125, 126, 127, 128
	declarations    rules 129, 130
	script          rule  131

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseSagaScript -> . script                  (rule 0)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10

	dec            goto state 49
	declarations   goto state 50
	script         goto state 51

State 1

	%start_parseSagaExpr -> . expr                      (rule 1)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 38

State 2

	%start_parseSagaType -> . typeExpr                  (rule 2)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 21

State 3

	%start_parseSagaKind -> . kindExpr                  (rule 3)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 12

State 4

	%start_parseSagaDec -> . dec                        (rule 4)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10

	dec            goto state 7

State 5

	identifier -> . id                                  (rule 5)

	id             shift, and enter state 6


State 6

	identifier -> id .                                  (rule 5)

	id             reduce using rule 5
	number         reduce using rule 5
	string         reduce using rule 5
	boolean        reduce using rule 5
	'!'            reduce using rule 5
	'+'            reduce using rule 5
	'-'            reduce using rule 5
	'*'            reduce using rule 5
	'/'            reduce using rule 5
	'^'            reduce using rule 5
	'++'           reduce using rule 5
	'=='           reduce using rule 5
	'!='           reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	'||'           reduce using rule 5
	'&&'           reduce using rule 5
	'|>'           reduce using rule 5
	'<|'           reduce using rule 5
	let            reduce using rule 5
	where          reduce using rule 5
	then           reduce using rule 5
	else           reduce using rule 5
	data           reduce using rule 5
	ty             reduce using rule 5
	implements     reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	'['            reduce using rule 5
	']'            reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	':'            reduce using rule 5
	','            reduce using rule 5
	'->'           reduce using rule 5
	'=>'           reduce using rule 5
	'|->'          reduce using rule 5
	'='            reduce using rule 5
	'|'            reduce using rule 5
	'.'            reduce using rule 5
	'::'           reduce using rule 5
	%eof           reduce using rule 5


State 7

	%start_parseSagaDec -> dec .                        (rule 4)

	%eof           accept


State 8

	dec -> let . identifier typeAnnotation kindAnnotation '=' expr    (rule 123)
	dec -> let . identifier typeAnnotation kindAnnotation '=' expr where bindings    (rule 124)

	id             shift, and enter state 6

	identifier     goto state 93

State 9

	dec -> data . identifier kindAnnotation '=' dataExprs    (rule 125)
	dec -> data . identifier kindAnnotation '=' dataExprs where tbindings    (rule 126)

	id             shift, and enter state 6

	identifier     goto state 92

State 10

	dec -> ty . identifier kindAnnotation '=' typeExpr    (rule 127)
	dec -> ty . identifier kindAnnotation '=' typeExpr where tbindings    (rule 128)

	id             shift, and enter state 6

	identifier     goto state 91

State 11

	kindExpr -> identifier .                            (rule 117)

	')'            reduce using rule 117
	'->'           reduce using rule 117
	'='            reduce using rule 117
	%eof           reduce using rule 117


State 12

	%start_parseSagaKind -> kindExpr .                  (rule 3)
	kindExpr -> kindExpr . '->' kindExpr                (rule 115)

	'->'           shift, and enter state 90
	%eof           accept


State 13

	kindExpr -> '(' . kindExpr ')'                      (rule 116)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 89

State 14

	typeAtom -> identifier .                            (rule 92)
	tagged -> identifier . ':' typeExpr                 (rule 102)

	id             reduce using rule 92
	number         reduce using rule 92
	string         reduce using rule 92
	boolean        reduce using rule 92
	'!'            reduce using rule 92
	let            reduce using rule 92
	where          reduce using rule 92
	data           reduce using rule 92
	ty             reduce using rule 92
	'('            reduce using rule 92
	')'            reduce using rule 92
	'{'            reduce using rule 92
	'}'            reduce using rule 92
	':'            shift, and enter state 88
	','            reduce using rule 92
	'->'           reduce using rule 92
	'='            reduce using rule 92
	'|'            reduce using rule 92
	'::'           reduce using rule 92
	%eof           reduce using rule 92


State 15

	type -> trecord .                                   (rule 90)

	id             reduce using rule 90
	number         reduce using rule 90
	string         reduce using rule 90
	boolean        reduce using rule 90
	'!'            reduce using rule 90
	let            reduce using rule 90
	where          reduce using rule 90
	data           reduce using rule 90
	ty             reduce using rule 90
	'('            reduce using rule 90
	')'            reduce using rule 90
	'{'            reduce using rule 90
	'}'            reduce using rule 90
	','            reduce using rule 90
	'->'           reduce using rule 90
	'='            reduce using rule 90
	'|'            reduce using rule 90
	'::'           reduce using rule 90
	%eof           reduce using rule 90


State 16

	type -> ttuple .                                    (rule 89)

	id             reduce using rule 89
	number         reduce using rule 89
	string         reduce using rule 89
	boolean        reduce using rule 89
	'!'            reduce using rule 89
	let            reduce using rule 89
	where          reduce using rule 89
	data           reduce using rule 89
	ty             reduce using rule 89
	'('            reduce using rule 89
	')'            reduce using rule 89
	'{'            reduce using rule 89
	'}'            reduce using rule 89
	','            reduce using rule 89
	'->'           reduce using rule 89
	'='            reduce using rule 89
	'|'            reduce using rule 89
	'::'           reduce using rule 89
	%eof           reduce using rule 89


State 17

	typeAtom -> type .                                  (rule 91)

	id             reduce using rule 91
	number         reduce using rule 91
	string         reduce using rule 91
	boolean        reduce using rule 91
	'!'            reduce using rule 91
	let            reduce using rule 91
	where          reduce using rule 91
	data           reduce using rule 91
	ty             reduce using rule 91
	'('            reduce using rule 91
	')'            reduce using rule 91
	'{'            reduce using rule 91
	'}'            reduce using rule 91
	','            reduce using rule 91
	'->'           reduce using rule 91
	'='            reduce using rule 91
	'|'            reduce using rule 91
	'::'           reduce using rule 91
	%eof           reduce using rule 91


State 18

	typeExpr -> typeAtom .                              (rule 105)
	typeExpr -> typeAtom . typeArgs '!'                 (rule 110)

	id             reduce using rule 94
	number         reduce using rule 94
	string         reduce using rule 94
	boolean        reduce using rule 94
	'!'            reduce using rule 94
	let            reduce using rule 105
	where          reduce using rule 105
	data           reduce using rule 105
	ty             reduce using rule 105
	'('            reduce using rule 94
	')'            reduce using rule 105
	'{'            reduce using rule 94
	'}'            reduce using rule 105
	','            reduce using rule 105
	'->'           reduce using rule 105
	'='            reduce using rule 105
	'|'            reduce using rule 105
	'::'           reduce using rule 105
	%eof           reduce using rule 105

	typeArgs       goto state 87

State 19

	typeExpr -> tagged .                                (rule 106)

	let            reduce using rule 106
	where          reduce using rule 106
	data           reduce using rule 106
	ty             reduce using rule 106
	')'            reduce using rule 106
	'}'            reduce using rule 106
	','            reduce using rule 106
	'->'           reduce using rule 106
	'='            reduce using rule 106
	'|'            reduce using rule 106
	'::'           reduce using rule 106
	%eof           reduce using rule 106


State 20

	union -> union . '|' typeExpr                       (rule 104)
	typeExpr -> union .                                 (rule 107)

	let            reduce using rule 107
	where          reduce using rule 107
	data           reduce using rule 107
	ty             reduce using rule 107
	')'            reduce using rule 107
	'}'            reduce using rule 107
	','            reduce using rule 107
	'->'           reduce using rule 107
	'='            reduce using rule 107
	'|'            shift, and enter state 86
	'::'           reduce using rule 107
	%eof           reduce using rule 107


State 21

	%start_parseSagaType -> typeExpr .                  (rule 2)
	typeExpr -> typeExpr . '->' typeExpr                (rule 108)

	'->'           shift, and enter state 85
	%eof           accept


State 22

	type -> number .                                    (rule 86)

	id             reduce using rule 86
	number         reduce using rule 86
	string         reduce using rule 86
	boolean        reduce using rule 86
	'!'            reduce using rule 86
	let            reduce using rule 86
	where          reduce using rule 86
	data           reduce using rule 86
	ty             reduce using rule 86
	'('            reduce using rule 86
	')'            reduce using rule 86
	'{'            reduce using rule 86
	'}'            reduce using rule 86
	','            reduce using rule 86
	'->'           reduce using rule 86
	'='            reduce using rule 86
	'|'            reduce using rule 86
	'::'           reduce using rule 86
	%eof           reduce using rule 86


State 23

	type -> string .                                    (rule 88)

	id             reduce using rule 88
	number         reduce using rule 88
	string         reduce using rule 88
	boolean        reduce using rule 88
	'!'            reduce using rule 88
	let            reduce using rule 88
	where          reduce using rule 88
	data           reduce using rule 88
	ty             reduce using rule 88
	'('            reduce using rule 88
	')'            reduce using rule 88
	'{'            reduce using rule 88
	'}'            reduce using rule 88
	','            reduce using rule 88
	'->'           reduce using rule 88
	'='            reduce using rule 88
	'|'            reduce using rule 88
	'::'           reduce using rule 88
	%eof           reduce using rule 88


State 24

	type -> boolean .                                   (rule 87)

	id             reduce using rule 87
	number         reduce using rule 87
	string         reduce using rule 87
	boolean        reduce using rule 87
	'!'            reduce using rule 87
	let            reduce using rule 87
	where          reduce using rule 87
	data           reduce using rule 87
	ty             reduce using rule 87
	'('            reduce using rule 87
	')'            reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	','            reduce using rule 87
	'->'           reduce using rule 87
	'='            reduce using rule 87
	'|'            reduce using rule 87
	'::'           reduce using rule 87
	%eof           reduce using rule 87


State 25

	ttuple -> '(' . typeExpr ttupleElems ')'            (rule 85)
	typeAtom -> '(' . typeExpr ')'                      (rule 93)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 84

State 26

	trecord -> '{' . tpairs '}'                         (rule 82)

	id             shift, and enter state 6
	'}'            reduce using rule 79

	identifier     goto state 82
	tpairs         goto state 83

State 27

	union -> '|' . typeExpr                             (rule 103)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 81

State 28

	typeExpr -> '\\' . params '=>' typeExpr             (rule 109)

	id             reduce using rule 17
	'=>'           reduce using rule 17

	params         goto state 80

State 29

	atom -> identifier .                                (rule 44)

	id             reduce using rule 44
	number         reduce using rule 44
	string         reduce using rule 44
	boolean        reduce using rule 44
	'!'            reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'/'            reduce using rule 44
	'^'            reduce using rule 44
	'++'           reduce using rule 44
	'=='           reduce using rule 44
	'!='           reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44
	'&&'           reduce using rule 44
	'|>'           reduce using rule 44
	'<|'           reduce using rule 44
	let            reduce using rule 44
	where          reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	data           reduce using rule 44
	ty             reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	','            reduce using rule 44
	'|'            reduce using rule 44
	'.'            reduce using rule 44
	%eof           reduce using rule 44


State 30

	atom -> record .                                    (rule 48)

	id             reduce using rule 48
	number         reduce using rule 48
	string         reduce using rule 48
	boolean        reduce using rule 48
	'!'            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	'^'            reduce using rule 48
	'++'           reduce using rule 48
	'=='           reduce using rule 48
	'!='           reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48
	'&&'           reduce using rule 48
	'|>'           reduce using rule 48
	'<|'           reduce using rule 48
	let            reduce using rule 48
	where          reduce using rule 48
	then           reduce using rule 48
	else           reduce using rule 48
	data           reduce using rule 48
	ty             reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	','            reduce using rule 48
	'|'            reduce using rule 48
	'.'            reduce using rule 48
	%eof           reduce using rule 48


State 31

	atom -> list .                                      (rule 47)

	id             reduce using rule 47
	number         reduce using rule 47
	string         reduce using rule 47
	boolean        reduce using rule 47
	'!'            reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	'^'            reduce using rule 47
	'++'           reduce using rule 47
	'=='           reduce using rule 47
	'!='           reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47
	'&&'           reduce using rule 47
	'|>'           reduce using rule 47
	'<|'           reduce using rule 47
	let            reduce using rule 47
	where          reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	data           reduce using rule 47
	ty             reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	','            reduce using rule 47
	'|'            reduce using rule 47
	'.'            reduce using rule 47
	%eof           reduce using rule 47


State 32

	atom -> tuple .                                     (rule 46)

	id             reduce using rule 46
	number         reduce using rule 46
	string         reduce using rule 46
	boolean        reduce using rule 46
	'!'            reduce using rule 46
	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	'^'            reduce using rule 46
	'++'           reduce using rule 46
	'=='           reduce using rule 46
	'!='           reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46
	'&&'           reduce using rule 46
	'|>'           reduce using rule 46
	'<|'           reduce using rule 46
	let            reduce using rule 46
	where          reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	data           reduce using rule 46
	ty             reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	','            reduce using rule 46
	'|'            reduce using rule 46
	'.'            reduce using rule 46
	%eof           reduce using rule 46


State 33

	expr -> fnApplication .                             (rule 58)

	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'^'            reduce using rule 58
	'++'           reduce using rule 58
	'=='           reduce using rule 58
	'!='           reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58
	'&&'           reduce using rule 58
	'|>'           reduce using rule 58
	'<|'           reduce using rule 58
	let            reduce using rule 58
	where          reduce using rule 58
	then           reduce using rule 58
	else           reduce using rule 58
	data           reduce using rule 58
	ty             reduce using rule 58
	')'            reduce using rule 58
	']'            reduce using rule 58
	'}'            reduce using rule 58
	','            reduce using rule 58
	'|'            reduce using rule 58
	'.'            reduce using rule 58
	%eof           reduce using rule 58


State 34

	expr -> controlFlow .                               (rule 56)

	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'^'            reduce using rule 56
	'++'           reduce using rule 56
	'=='           reduce using rule 56
	'!='           reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56
	'&&'           reduce using rule 56
	'|>'           reduce using rule 56
	'<|'           reduce using rule 56
	let            reduce using rule 56
	where          reduce using rule 56
	then           reduce using rule 56
	else           reduce using rule 56
	data           reduce using rule 56
	ty             reduce using rule 56
	')'            reduce using rule 56
	']'            reduce using rule 56
	'}'            reduce using rule 56
	','            reduce using rule 56
	'|'            reduce using rule 56
	'.'            reduce using rule 56
	%eof           reduce using rule 56


State 35

	atom -> term .                                      (rule 45)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	'^'            reduce using rule 45
	'++'           reduce using rule 45
	'=='           reduce using rule 45
	'!='           reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45
	'&&'           reduce using rule 45
	'|>'           reduce using rule 45
	'<|'           reduce using rule 45
	let            reduce using rule 45
	where          reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	data           reduce using rule 45
	ty             reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	','            reduce using rule 45
	'|'            reduce using rule 45
	'.'            reduce using rule 45
	%eof           reduce using rule 45


State 36

	fnApplication -> atom . args '!'                    (rule 21)
	expr -> atom .                                      (rule 60)

	id             reduce using rule 19
	number         reduce using rule 19
	string         reduce using rule 19
	boolean        reduce using rule 19
	'!'            reduce using rule 19
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'^'            reduce using rule 60
	'++'           reduce using rule 60
	'=='           reduce using rule 60
	'!='           reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60
	'&&'           reduce using rule 60
	'|>'           reduce using rule 60
	'<|'           reduce using rule 60
	let            reduce using rule 60
	where          reduce using rule 60
	then           reduce using rule 60
	else           reduce using rule 60
	data           reduce using rule 60
	ty             reduce using rule 60
	'('            reduce using rule 19
	')'            reduce using rule 60
	'['            reduce using rule 19
	']'            reduce using rule 60
	'{'            reduce using rule 19
	'}'            reduce using rule 60
	','            reduce using rule 60
	'|'            reduce using rule 60
	'.'            reduce using rule 60
	%eof           reduce using rule 60

	args           goto state 79

State 37

	expr -> matchExpr .                                 (rule 57)

	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'^'            reduce using rule 57
	'++'           reduce using rule 57
	'=='           reduce using rule 57
	'!='           reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57
	'&&'           reduce using rule 57
	'|>'           reduce using rule 57
	'<|'           reduce using rule 57
	let            reduce using rule 57
	where          reduce using rule 57
	then           reduce using rule 57
	else           reduce using rule 57
	data           reduce using rule 57
	ty             reduce using rule 57
	')'            reduce using rule 57
	']'            reduce using rule 57
	'}'            reduce using rule 57
	','            reduce using rule 57
	'|'            reduce using rule 57
	'.'            reduce using rule 57
	%eof           reduce using rule 57


State 38

	%start_parseSagaExpr -> expr .                      (rule 1)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	'.'            shift, and enter state 78
	%eof           accept


State 39

	term -> number .                                    (rule 41)

	id             reduce using rule 41
	number         reduce using rule 41
	string         reduce using rule 41
	boolean        reduce using rule 41
	'!'            reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'*'            reduce using rule 41
	'/'            reduce using rule 41
	'^'            reduce using rule 41
	'++'           reduce using rule 41
	'=='           reduce using rule 41
	'!='           reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41
	'&&'           reduce using rule 41
	'|>'           reduce using rule 41
	'<|'           reduce using rule 41
	let            reduce using rule 41
	where          reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	data           reduce using rule 41
	ty             reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	','            reduce using rule 41
	'->'           reduce using rule 41
	'|'            reduce using rule 41
	'.'            reduce using rule 41
	%eof           reduce using rule 41


State 40

	term -> string .                                    (rule 42)

	id             reduce using rule 42
	number         reduce using rule 42
	string         reduce using rule 42
	boolean        reduce using rule 42
	'!'            reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'/'            reduce using rule 42
	'^'            reduce using rule 42
	'++'           reduce using rule 42
	'=='           reduce using rule 42
	'!='           reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42
	'&&'           reduce using rule 42
	'|>'           reduce using rule 42
	'<|'           reduce using rule 42
	let            reduce using rule 42
	where          reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	data           reduce using rule 42
	ty             reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	','            reduce using rule 42
	'->'           reduce using rule 42
	'|'            reduce using rule 42
	'.'            reduce using rule 42
	%eof           reduce using rule 42


State 41

	term -> boolean .                                   (rule 43)

	id             reduce using rule 43
	number         reduce using rule 43
	string         reduce using rule 43
	boolean        reduce using rule 43
	'!'            reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'^'            reduce using rule 43
	'++'           reduce using rule 43
	'=='           reduce using rule 43
	'!='           reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43
	'&&'           reduce using rule 43
	'|>'           reduce using rule 43
	'<|'           reduce using rule 43
	let            reduce using rule 43
	where          reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	data           reduce using rule 43
	ty             reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	','            reduce using rule 43
	'->'           reduce using rule 43
	'|'            reduce using rule 43
	'.'            reduce using rule 43
	%eof           reduce using rule 43


State 42

	controlFlow -> if . expr then expr else expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 61

State 43

	matchExpr -> match . expr cases                     (rule 52)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 60

State 44

	tuple -> '(' . expr tupleElems ')'                  (rule 16)
	atom -> '(' . expr ')'                              (rule 49)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 59

State 45

	list -> '[' . listElements ']'                      (rule 13)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	']'            reduce using rule 10
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	listElements   goto state 57
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 58

State 46

	record -> '{' . pairs '}'                           (rule 9)

	id             shift, and enter state 6
	'}'            reduce using rule 6

	identifier     goto state 55
	pairs          goto state 56

State 47

	expr -> '.' . atom                                  (rule 61)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	term           goto state 35
	atom           goto state 54

State 48

	expr -> '\\' . params '->' expr                     (rule 59)

	id             reduce using rule 17
	'->'           reduce using rule 17

	params         goto state 53

State 49

	declarations -> dec .                               (rule 129)

	let            reduce using rule 129
	data           reduce using rule 129
	ty             reduce using rule 129
	%eof           reduce using rule 129


State 50

	declarations -> declarations . dec                  (rule 130)
	script -> declarations .                            (rule 131)

	let            shift, and enter state 8
	data           shift, and enter state 9
	ty             shift, and enter state 10
	%eof           reduce using rule 131

	dec            goto state 52

State 51

	%start_parseSagaScript -> script .                  (rule 0)

	%eof           accept


State 52

	declarations -> declarations dec .                  (rule 130)

	let            reduce using rule 130
	data           reduce using rule 130
	ty             reduce using rule 130
	%eof           reduce using rule 130


State 53

	params -> params . identifier                       (rule 18)
	expr -> '\\' params . '->' expr                     (rule 59)

	id             shift, and enter state 6
	'->'           shift, and enter state 143

	identifier     goto state 112

State 54

	expr -> '.' atom .                                  (rule 61)

	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'/'            reduce using rule 61
	'^'            reduce using rule 61
	'++'           reduce using rule 61
	'=='           reduce using rule 61
	'!='           reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'||'           reduce using rule 61
	'&&'           reduce using rule 61
	'|>'           reduce using rule 61
	'<|'           reduce using rule 61
	let            reduce using rule 61
	where          reduce using rule 61
	then           reduce using rule 61
	else           reduce using rule 61
	data           reduce using rule 61
	ty             reduce using rule 61
	')'            reduce using rule 61
	']'            reduce using rule 61
	'}'            reduce using rule 61
	','            reduce using rule 61
	'|'            reduce using rule 61
	'.'            reduce using rule 61
	%eof           reduce using rule 61


State 55

	pairs -> identifier . ':' expr ',' pairs            (rule 7)
	pairs -> identifier . ':' expr                      (rule 8)

	':'            shift, and enter state 142


State 56

	record -> '{' pairs . '}'                           (rule 9)

	'}'            shift, and enter state 141


State 57

	list -> '[' listElements . ']'                      (rule 13)

	']'            shift, and enter state 140


State 58

	listElements -> expr .                              (rule 11)
	listElements -> expr . ',' listElements             (rule 12)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	']'            reduce using rule 11
	','            shift, and enter state 139
	'.'            shift, and enter state 78


State 59

	tuple -> '(' expr . tupleElems ')'                  (rule 16)
	atom -> '(' expr . ')'                              (rule 49)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	')'            shift, and enter state 137
	','            shift, and enter state 138
	'.'            shift, and enter state 78

	tupleElems     goto state 136

State 60

	matchExpr -> match expr . cases                     (rule 52)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	'|'            shift, and enter state 135
	'.'            shift, and enter state 78

	cases          goto state 134

State 61

	controlFlow -> if expr . then expr else expr        (rule 22)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	then           shift, and enter state 133
	'.'            shift, and enter state 78


State 62

	expr -> expr '+' . expr                             (rule 63)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 132

State 63

	expr -> expr '-' . expr                             (rule 64)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 131

State 64

	expr -> expr '*' . expr                             (rule 65)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 130

State 65

	expr -> expr '/' . expr                             (rule 66)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 129

State 66

	expr -> expr '^' . expr                             (rule 67)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 128

State 67

	expr -> expr '++' . expr                            (rule 78)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 127

State 68

	expr -> expr '==' . expr                            (rule 70)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 126

State 69

	expr -> expr '!=' . expr                            (rule 71)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 125

State 70

	expr -> expr '<' . expr                             (rule 72)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 124

State 71

	expr -> expr '<=' . expr                            (rule 74)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 123

State 72

	expr -> expr '>' . expr                             (rule 73)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 122

State 73

	expr -> expr '>=' . expr                            (rule 75)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 121

State 74

	expr -> expr '||' . expr                            (rule 68)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 120

State 75

	expr -> expr '&&' . expr                            (rule 69)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 119

State 76

	expr -> expr '|>' . expr                            (rule 76)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 118

State 77

	expr -> expr '<|' . expr                            (rule 77)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 117

State 78

	expr -> expr '.' . identifier                       (rule 62)

	id             shift, and enter state 6

	identifier     goto state 116

State 79

	args -> args . atom                                 (rule 20)
	fnApplication -> atom args . '!'                    (rule 21)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	'!'            shift, and enter state 115
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	term           goto state 35
	atom           goto state 114

State 80

	params -> params . identifier                       (rule 18)
	typeExpr -> '\\' params . '=>' typeExpr             (rule 109)

	id             shift, and enter state 6
	'=>'           shift, and enter state 113

	identifier     goto state 112

State 81

	union -> '|' typeExpr .                             (rule 103)
	typeExpr -> typeExpr . '->' typeExpr                (rule 108)

	let            reduce using rule 103
	where          reduce using rule 103
	data           reduce using rule 103
	ty             reduce using rule 103
	')'            reduce using rule 103
	'}'            reduce using rule 103
	','            reduce using rule 103
	'->'           shift, and enter state 85
	'='            reduce using rule 103
	'|'            reduce using rule 103
	'::'           reduce using rule 103
	%eof           reduce using rule 103


State 82

	tpairs -> identifier . ':' typeExpr ',' tpairs      (rule 80)
	tpairs -> identifier . ':' typeExpr                 (rule 81)

	':'            shift, and enter state 111


State 83

	trecord -> '{' tpairs . '}'                         (rule 82)

	'}'            shift, and enter state 110


State 84

	ttuple -> '(' typeExpr . ttupleElems ')'            (rule 85)
	typeAtom -> '(' typeExpr . ')'                      (rule 93)
	typeExpr -> typeExpr . '->' typeExpr                (rule 108)

	')'            shift, and enter state 108
	','            shift, and enter state 109
	'->'           shift, and enter state 85

	ttupleElems    goto state 107

State 85

	typeExpr -> typeExpr '->' . typeExpr                (rule 108)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 106

State 86

	union -> union '|' . typeExpr                       (rule 104)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 105

State 87

	typeArgs -> typeArgs . typeAtom                     (rule 95)
	typeExpr -> typeAtom typeArgs . '!'                 (rule 110)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'!'            shift, and enter state 104
	'('            shift, and enter state 25
	'{'            shift, and enter state 26

	identifier     goto state 102
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 103

State 88

	tagged -> identifier ':' . typeExpr                 (rule 102)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 101

State 89

	kindExpr -> kindExpr . '->' kindExpr                (rule 115)
	kindExpr -> '(' kindExpr . ')'                      (rule 116)

	')'            shift, and enter state 100
	'->'           shift, and enter state 90


State 90

	kindExpr -> kindExpr '->' . kindExpr                (rule 115)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 99

State 91

	dec -> ty identifier . kindAnnotation '=' typeExpr    (rule 127)
	dec -> ty identifier . kindAnnotation '=' typeExpr where tbindings    (rule 128)

	'='            reduce using rule 118
	'::'           shift, and enter state 97

	kindAnnotation goto state 98

State 92

	dec -> data identifier . kindAnnotation '=' dataExprs    (rule 125)
	dec -> data identifier . kindAnnotation '=' dataExprs where tbindings    (rule 126)

	'='            reduce using rule 118
	'::'           shift, and enter state 97

	kindAnnotation goto state 96

State 93

	dec -> let identifier . typeAnnotation kindAnnotation '=' expr    (rule 123)
	dec -> let identifier . typeAnnotation kindAnnotation '=' expr where bindings    (rule 124)

	':'            shift, and enter state 95
	'='            reduce using rule 111
	'::'           reduce using rule 111

	typeAnnotation goto state 94

State 94

	dec -> let identifier typeAnnotation . kindAnnotation '=' expr    (rule 123)
	dec -> let identifier typeAnnotation . kindAnnotation '=' expr where bindings    (rule 124)

	'='            reduce using rule 118
	'::'           shift, and enter state 97

	kindAnnotation goto state 167

State 95

	typeAnnotation -> ':' . typeExpr                    (rule 112)
	typeAnnotation -> ':' . typeExpr where tbindings    (rule 113)
	typeAnnotation -> ':' . instance identifier ':' typeExpr    (rule 114)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	instance       shift, and enter state 166
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 165

State 96

	dec -> data identifier kindAnnotation . '=' dataExprs    (rule 125)
	dec -> data identifier kindAnnotation . '=' dataExprs where tbindings    (rule 126)

	'='            shift, and enter state 164


State 97

	kindAnnotation -> '::' . kindExpr                   (rule 119)

	id             shift, and enter state 6
	'('            shift, and enter state 13

	identifier     goto state 11
	kindExpr       goto state 163

State 98

	dec -> ty identifier kindAnnotation . '=' typeExpr    (rule 127)
	dec -> ty identifier kindAnnotation . '=' typeExpr where tbindings    (rule 128)

	'='            shift, and enter state 162


State 99

	kindExpr -> kindExpr . '->' kindExpr                (rule 115)
	kindExpr -> kindExpr '->' kindExpr .                (rule 115)

	')'            reduce using rule 115
	'->'           reduce using rule 115
	'='            reduce using rule 115
	%eof           reduce using rule 115


State 100

	kindExpr -> '(' kindExpr ')' .                      (rule 116)

	')'            reduce using rule 116
	'->'           reduce using rule 116
	'='            reduce using rule 116
	%eof           reduce using rule 116


State 101

	tagged -> identifier ':' typeExpr .                 (rule 102)
	typeExpr -> typeExpr . '->' typeExpr                (rule 108)

	let            reduce using rule 102
	where          reduce using rule 102
	data           reduce using rule 102
	ty             reduce using rule 102
	')'            reduce using rule 102
	'}'            reduce using rule 102
	','            reduce using rule 102
	'->'           shift, and enter state 85
	'='            reduce using rule 102
	'|'            reduce using rule 102
	'::'           reduce using rule 102
	%eof           reduce using rule 102


State 102

	typeAtom -> identifier .                            (rule 92)

	id             reduce using rule 92
	number         reduce using rule 92
	string         reduce using rule 92
	boolean        reduce using rule 92
	'!'            reduce using rule 92
	'('            reduce using rule 92
	'{'            reduce using rule 92


State 103

	typeArgs -> typeArgs typeAtom .                     (rule 95)

	id             reduce using rule 95
	number         reduce using rule 95
	string         reduce using rule 95
	boolean        reduce using rule 95
	'!'            reduce using rule 95
	'('            reduce using rule 95
	'{'            reduce using rule 95


State 104

	typeExpr -> typeAtom typeArgs '!' .                 (rule 110)

	let            reduce using rule 110
	where          reduce using rule 110
	data           reduce using rule 110
	ty             reduce using rule 110
	')'            reduce using rule 110
	'}'            reduce using rule 110
	','            reduce using rule 110
	'->'           reduce using rule 110
	'='            reduce using rule 110
	'|'            reduce using rule 110
	'::'           reduce using rule 110
	%eof           reduce using rule 110


State 105

	union -> union '|' typeExpr .                       (rule 104)
	typeExpr -> typeExpr . '->' typeExpr                (rule 108)

	let            reduce using rule 104
	where          reduce using rule 104
	data           reduce using rule 104
	ty             reduce using rule 104
	')'            reduce using rule 104
	'}'            reduce using rule 104
	','            reduce using rule 104
	'->'           shift, and enter state 85
	'='            reduce using rule 104
	'|'            reduce using rule 104
	'::'           reduce using rule 104
	%eof           reduce using rule 104


State 106

	typeExpr -> typeExpr . '->' typeExpr                (rule 108)
	typeExpr -> typeExpr '->' typeExpr .                (rule 108)

	let            reduce using rule 108
	where          reduce using rule 108
	data           reduce using rule 108
	ty             reduce using rule 108
	')'            reduce using rule 108
	'}'            reduce using rule 108
	','            reduce using rule 108
	'->'           shift, and enter state 85
	'='            reduce using rule 108
	'|'            reduce using rule 108
	'::'           reduce using rule 108
	%eof           reduce using rule 108


State 107

	ttuple -> '(' typeExpr ttupleElems . ')'            (rule 85)

	')'            shift, and enter state 161


State 108

	typeAtom -> '(' typeExpr ')' .                      (rule 93)

	id             reduce using rule 93
	number         reduce using rule 93
	string         reduce using rule 93
	boolean        reduce using rule 93
	'!'            reduce using rule 93
	let            reduce using rule 93
	where          reduce using rule 93
	data           reduce using rule 93
	ty             reduce using rule 93
	'('            reduce using rule 93
	')'            reduce using rule 93
	'{'            reduce using rule 93
	'}'            reduce using rule 93
	','            reduce using rule 93
	'->'           reduce using rule 93
	'='            reduce using rule 93
	'|'            reduce using rule 93
	'::'           reduce using rule 93
	%eof           reduce using rule 93


State 109

	ttupleElems -> ',' . typeExpr                       (rule 83)
	ttupleElems -> ',' . typeExpr ttupleElems           (rule 84)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 160

State 110

	trecord -> '{' tpairs '}' .                         (rule 82)

	id             reduce using rule 82
	number         reduce using rule 82
	string         reduce using rule 82
	boolean        reduce using rule 82
	'!'            reduce using rule 82
	let            reduce using rule 82
	where          reduce using rule 82
	data           reduce using rule 82
	ty             reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	'{'            reduce using rule 82
	'}'            reduce using rule 82
	','            reduce using rule 82
	'->'           reduce using rule 82
	'='            reduce using rule 82
	'|'            reduce using rule 82
	'::'           reduce using rule 82
	%eof           reduce using rule 82


State 111

	tpairs -> identifier ':' . typeExpr ',' tpairs      (rule 80)
	tpairs -> identifier ':' . typeExpr                 (rule 81)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 159

State 112

	params -> params identifier .                       (rule 18)

	id             reduce using rule 18
	'->'           reduce using rule 18
	'=>'           reduce using rule 18


State 113

	typeExpr -> '\\' params '=>' . typeExpr             (rule 109)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 158

State 114

	args -> args atom .                                 (rule 20)

	id             reduce using rule 20
	number         reduce using rule 20
	string         reduce using rule 20
	boolean        reduce using rule 20
	'!'            reduce using rule 20
	'('            reduce using rule 20
	'['            reduce using rule 20
	'{'            reduce using rule 20


State 115

	fnApplication -> atom args '!' .                    (rule 21)

	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'^'            reduce using rule 21
	'++'           reduce using rule 21
	'=='           reduce using rule 21
	'!='           reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'||'           reduce using rule 21
	'&&'           reduce using rule 21
	'|>'           reduce using rule 21
	'<|'           reduce using rule 21
	let            reduce using rule 21
	where          reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	data           reduce using rule 21
	ty             reduce using rule 21
	')'            reduce using rule 21
	']'            reduce using rule 21
	'}'            reduce using rule 21
	','            reduce using rule 21
	'|'            reduce using rule 21
	'.'            reduce using rule 21
	%eof           reduce using rule 21


State 116

	expr -> expr '.' identifier .                       (rule 62)

	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'/'            reduce using rule 62
	'^'            reduce using rule 62
	'++'           reduce using rule 62
	'=='           reduce using rule 62
	'!='           reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62
	'&&'           reduce using rule 62
	'|>'           reduce using rule 62
	'<|'           reduce using rule 62
	let            reduce using rule 62
	where          reduce using rule 62
	then           reduce using rule 62
	else           reduce using rule 62
	data           reduce using rule 62
	ty             reduce using rule 62
	')'            reduce using rule 62
	']'            reduce using rule 62
	'}'            reduce using rule 62
	','            reduce using rule 62
	'|'            reduce using rule 62
	'.'            reduce using rule 62
	%eof           reduce using rule 62


State 117

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr '<|' expr .                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 77
	where          reduce using rule 77
	then           reduce using rule 77
	else           reduce using rule 77
	data           reduce using rule 77
	ty             reduce using rule 77
	')'            reduce using rule 77
	']'            reduce using rule 77
	'}'            reduce using rule 77
	','            reduce using rule 77
	'|'            reduce using rule 77
	'.'            reduce using rule 77
	%eof           reduce using rule 77


State 118

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr '|>' expr .                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 76
	where          reduce using rule 76
	then           reduce using rule 76
	else           reduce using rule 76
	data           reduce using rule 76
	ty             reduce using rule 76
	')'            reduce using rule 76
	']'            reduce using rule 76
	'}'            reduce using rule 76
	','            reduce using rule 76
	'|'            reduce using rule 76
	'.'            reduce using rule 76
	%eof           reduce using rule 76


State 119

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr '&&' expr .                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 69
	where          reduce using rule 69
	then           reduce using rule 69
	else           reduce using rule 69
	data           reduce using rule 69
	ty             reduce using rule 69
	')'            reduce using rule 69
	']'            reduce using rule 69
	'}'            reduce using rule 69
	','            reduce using rule 69
	'|'            reduce using rule 69
	'.'            reduce using rule 69
	%eof           reduce using rule 69


State 120

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr '||' expr .                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 68
	where          reduce using rule 68
	then           reduce using rule 68
	else           reduce using rule 68
	data           reduce using rule 68
	ty             reduce using rule 68
	')'            reduce using rule 68
	']'            reduce using rule 68
	'}'            reduce using rule 68
	','            reduce using rule 68
	'|'            reduce using rule 68
	'.'            reduce using rule 68
	%eof           reduce using rule 68


State 121

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr '>=' expr .                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 75
	where          reduce using rule 75
	then           reduce using rule 75
	else           reduce using rule 75
	data           reduce using rule 75
	ty             reduce using rule 75
	')'            reduce using rule 75
	']'            reduce using rule 75
	'}'            reduce using rule 75
	','            reduce using rule 75
	'|'            reduce using rule 75
	'.'            reduce using rule 75
	%eof           reduce using rule 75


State 122

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr '>' expr .                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 73
	where          reduce using rule 73
	then           reduce using rule 73
	else           reduce using rule 73
	data           reduce using rule 73
	ty             reduce using rule 73
	')'            reduce using rule 73
	']'            reduce using rule 73
	'}'            reduce using rule 73
	','            reduce using rule 73
	'|'            reduce using rule 73
	'.'            reduce using rule 73
	%eof           reduce using rule 73


State 123

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr '<=' expr .                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 74
	where          reduce using rule 74
	then           reduce using rule 74
	else           reduce using rule 74
	data           reduce using rule 74
	ty             reduce using rule 74
	')'            reduce using rule 74
	']'            reduce using rule 74
	'}'            reduce using rule 74
	','            reduce using rule 74
	'|'            reduce using rule 74
	'.'            reduce using rule 74
	%eof           reduce using rule 74


State 124

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr '<' expr .                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 72
	where          reduce using rule 72
	then           reduce using rule 72
	else           reduce using rule 72
	data           reduce using rule 72
	ty             reduce using rule 72
	')'            reduce using rule 72
	']'            reduce using rule 72
	'}'            reduce using rule 72
	','            reduce using rule 72
	'|'            reduce using rule 72
	'.'            reduce using rule 72
	%eof           reduce using rule 72


State 125

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr '!=' expr .                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 71
	where          reduce using rule 71
	then           reduce using rule 71
	else           reduce using rule 71
	data           reduce using rule 71
	ty             reduce using rule 71
	')'            reduce using rule 71
	']'            reduce using rule 71
	'}'            reduce using rule 71
	','            reduce using rule 71
	'|'            reduce using rule 71
	'.'            reduce using rule 71
	%eof           reduce using rule 71


State 126

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr '==' expr .                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 70
	where          reduce using rule 70
	then           reduce using rule 70
	else           reduce using rule 70
	data           reduce using rule 70
	ty             reduce using rule 70
	')'            reduce using rule 70
	']'            reduce using rule 70
	'}'            reduce using rule 70
	','            reduce using rule 70
	'|'            reduce using rule 70
	'.'            reduce using rule 70
	%eof           reduce using rule 70


State 127

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)
	expr -> expr '++' expr .                            (rule 78)

	'+'            reduce using rule 78
	'-'            reduce using rule 78
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           reduce using rule 78
	'=='           reduce using rule 78
	'!='           reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'||'           reduce using rule 78
	'&&'           reduce using rule 78
	'|>'           reduce using rule 78
	'<|'           reduce using rule 78
	let            reduce using rule 78
	where          reduce using rule 78
	then           reduce using rule 78
	else           reduce using rule 78
	data           reduce using rule 78
	ty             reduce using rule 78
	')'            reduce using rule 78
	']'            reduce using rule 78
	'}'            reduce using rule 78
	','            reduce using rule 78
	'|'            reduce using rule 78
	'.'            reduce using rule 78
	%eof           reduce using rule 78


State 128

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr '^' expr .                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	'^'            reduce using rule 67
	'++'           reduce using rule 67
	'=='           reduce using rule 67
	'!='           reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'||'           reduce using rule 67
	'&&'           reduce using rule 67
	'|>'           reduce using rule 67
	'<|'           reduce using rule 67
	let            reduce using rule 67
	where          reduce using rule 67
	then           reduce using rule 67
	else           reduce using rule 67
	data           reduce using rule 67
	ty             reduce using rule 67
	')'            reduce using rule 67
	']'            reduce using rule 67
	'}'            reduce using rule 67
	','            reduce using rule 67
	'|'            reduce using rule 67
	'.'            reduce using rule 67
	%eof           reduce using rule 67


State 129

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr '/' expr .                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	'^'            shift, and enter state 66
	'++'           reduce using rule 66
	'=='           reduce using rule 66
	'!='           reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'||'           reduce using rule 66
	'&&'           reduce using rule 66
	'|>'           reduce using rule 66
	'<|'           reduce using rule 66
	let            reduce using rule 66
	where          reduce using rule 66
	then           reduce using rule 66
	else           reduce using rule 66
	data           reduce using rule 66
	ty             reduce using rule 66
	')'            reduce using rule 66
	']'            reduce using rule 66
	'}'            reduce using rule 66
	','            reduce using rule 66
	'|'            reduce using rule 66
	'.'            reduce using rule 66
	%eof           reduce using rule 66


State 130

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr '*' expr .                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            reduce using rule 65
	'/'            reduce using rule 65
	'^'            shift, and enter state 66
	'++'           reduce using rule 65
	'=='           reduce using rule 65
	'!='           reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'||'           reduce using rule 65
	'&&'           reduce using rule 65
	'|>'           reduce using rule 65
	'<|'           reduce using rule 65
	let            reduce using rule 65
	where          reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	data           reduce using rule 65
	ty             reduce using rule 65
	')'            reduce using rule 65
	']'            reduce using rule 65
	'}'            reduce using rule 65
	','            reduce using rule 65
	'|'            reduce using rule 65
	'.'            reduce using rule 65
	%eof           reduce using rule 65


State 131

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr '-' expr .                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           reduce using rule 64
	'=='           reduce using rule 64
	'!='           reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'||'           reduce using rule 64
	'&&'           reduce using rule 64
	'|>'           reduce using rule 64
	'<|'           reduce using rule 64
	let            reduce using rule 64
	where          reduce using rule 64
	then           reduce using rule 64
	else           reduce using rule 64
	data           reduce using rule 64
	ty             reduce using rule 64
	')'            reduce using rule 64
	']'            reduce using rule 64
	'}'            reduce using rule 64
	','            reduce using rule 64
	'|'            reduce using rule 64
	'.'            reduce using rule 64
	%eof           reduce using rule 64


State 132

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr '+' expr .                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           reduce using rule 63
	'=='           reduce using rule 63
	'!='           reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63
	'&&'           reduce using rule 63
	'|>'           reduce using rule 63
	'<|'           reduce using rule 63
	let            reduce using rule 63
	where          reduce using rule 63
	then           reduce using rule 63
	else           reduce using rule 63
	data           reduce using rule 63
	ty             reduce using rule 63
	')'            reduce using rule 63
	']'            reduce using rule 63
	'}'            reduce using rule 63
	','            reduce using rule 63
	'|'            reduce using rule 63
	'.'            reduce using rule 63
	%eof           reduce using rule 63


State 133

	controlFlow -> if expr then . expr else expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 157

State 134

	cases -> cases . '|' pattern '->' expr              (rule 51)
	matchExpr -> match expr cases .                     (rule 52)

	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'^'            reduce using rule 52
	'++'           reduce using rule 52
	'=='           reduce using rule 52
	'!='           reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52
	'&&'           reduce using rule 52
	'|>'           reduce using rule 52
	'<|'           reduce using rule 52
	let            reduce using rule 52
	where          reduce using rule 52
	then           reduce using rule 52
	else           reduce using rule 52
	data           reduce using rule 52
	ty             reduce using rule 52
	')'            reduce using rule 52
	']'            reduce using rule 52
	'}'            reduce using rule 52
	','            reduce using rule 52
	'|'            shift, and enter state 156
	'.'            reduce using rule 52
	%eof           reduce using rule 52


State 135

	cases -> '|' . pattern '->' expr                    (rule 50)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	'('            shift, and enter state 153
	'['            shift, and enter state 154
	'{'            shift, and enter state 155

	identifier     goto state 149
	patData        goto state 150
	pattern        goto state 151
	term           goto state 152

State 136

	tuple -> '(' expr tupleElems . ')'                  (rule 16)

	')'            shift, and enter state 148


State 137

	atom -> '(' expr ')' .                              (rule 49)

	id             reduce using rule 49
	number         reduce using rule 49
	string         reduce using rule 49
	boolean        reduce using rule 49
	'!'            reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	'^'            reduce using rule 49
	'++'           reduce using rule 49
	'=='           reduce using rule 49
	'!='           reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49
	'&&'           reduce using rule 49
	'|>'           reduce using rule 49
	'<|'           reduce using rule 49
	let            reduce using rule 49
	where          reduce using rule 49
	then           reduce using rule 49
	else           reduce using rule 49
	data           reduce using rule 49
	ty             reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	','            reduce using rule 49
	'|'            reduce using rule 49
	'.'            reduce using rule 49
	%eof           reduce using rule 49


State 138

	tupleElems -> ',' . expr                            (rule 14)
	tupleElems -> ',' . expr tupleElems                 (rule 15)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 147

State 139

	listElements -> expr ',' . listElements             (rule 12)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	']'            reduce using rule 10
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	listElements   goto state 146
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 58

State 140

	list -> '[' listElements ']' .                      (rule 13)

	id             reduce using rule 13
	number         reduce using rule 13
	string         reduce using rule 13
	boolean        reduce using rule 13
	'!'            reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            reduce using rule 13
	'/'            reduce using rule 13
	'^'            reduce using rule 13
	'++'           reduce using rule 13
	'=='           reduce using rule 13
	'!='           reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'||'           reduce using rule 13
	'&&'           reduce using rule 13
	'|>'           reduce using rule 13
	'<|'           reduce using rule 13
	let            reduce using rule 13
	where          reduce using rule 13
	then           reduce using rule 13
	else           reduce using rule 13
	data           reduce using rule 13
	ty             reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'['            reduce using rule 13
	']'            reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	','            reduce using rule 13
	'|'            reduce using rule 13
	'.'            reduce using rule 13
	%eof           reduce using rule 13


State 141

	record -> '{' pairs '}' .                           (rule 9)

	id             reduce using rule 9
	number         reduce using rule 9
	string         reduce using rule 9
	boolean        reduce using rule 9
	'!'            reduce using rule 9
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'*'            reduce using rule 9
	'/'            reduce using rule 9
	'^'            reduce using rule 9
	'++'           reduce using rule 9
	'=='           reduce using rule 9
	'!='           reduce using rule 9
	'<'            reduce using rule 9
	'<='           reduce using rule 9
	'>'            reduce using rule 9
	'>='           reduce using rule 9
	'||'           reduce using rule 9
	'&&'           reduce using rule 9
	'|>'           reduce using rule 9
	'<|'           reduce using rule 9
	let            reduce using rule 9
	where          reduce using rule 9
	then           reduce using rule 9
	else           reduce using rule 9
	data           reduce using rule 9
	ty             reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'['            reduce using rule 9
	']'            reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	','            reduce using rule 9
	'|'            reduce using rule 9
	'.'            reduce using rule 9
	%eof           reduce using rule 9


State 142

	pairs -> identifier ':' . expr ',' pairs            (rule 7)
	pairs -> identifier ':' . expr                      (rule 8)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 145

State 143

	expr -> '\\' params '->' . expr                     (rule 59)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 144

State 144

	expr -> '\\' params '->' expr .                     (rule 59)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	let            reduce using rule 59
	where          reduce using rule 59
	then           reduce using rule 59
	else           reduce using rule 59
	data           reduce using rule 59
	ty             reduce using rule 59
	')'            reduce using rule 59
	']'            reduce using rule 59
	'}'            reduce using rule 59
	','            reduce using rule 59
	'|'            reduce using rule 59
	'.'            shift, and enter state 78
	%eof           reduce using rule 59


State 145

	pairs -> identifier ':' expr . ',' pairs            (rule 7)
	pairs -> identifier ':' expr .                      (rule 8)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	'}'            reduce using rule 8
	','            shift, and enter state 189
	'.'            shift, and enter state 78


State 146

	listElements -> expr ',' listElements .             (rule 12)

	']'            reduce using rule 12


State 147

	tupleElems -> ',' expr .                            (rule 14)
	tupleElems -> ',' expr . tupleElems                 (rule 15)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	')'            reduce using rule 14
	','            shift, and enter state 138
	'.'            shift, and enter state 78

	tupleElems     goto state 188

State 148

	tuple -> '(' expr tupleElems ')' .                  (rule 16)

	id             reduce using rule 16
	number         reduce using rule 16
	string         reduce using rule 16
	boolean        reduce using rule 16
	'!'            reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            reduce using rule 16
	'/'            reduce using rule 16
	'^'            reduce using rule 16
	'++'           reduce using rule 16
	'=='           reduce using rule 16
	'!='           reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'||'           reduce using rule 16
	'&&'           reduce using rule 16
	'|>'           reduce using rule 16
	'<|'           reduce using rule 16
	let            reduce using rule 16
	where          reduce using rule 16
	then           reduce using rule 16
	else           reduce using rule 16
	data           reduce using rule 16
	ty             reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	','            reduce using rule 16
	'|'            reduce using rule 16
	'.'            reduce using rule 16
	%eof           reduce using rule 16


State 149

	patData -> identifier . ':'                         (rule 32)
	pattern -> identifier .                             (rule 34)

	':'            shift, and enter state 187
	'->'           reduce using rule 34


State 150

	patData -> patData . identifier                     (rule 33)
	pattern -> patData .                                (rule 40)

	id             shift, and enter state 6
	'->'           reduce using rule 40

	identifier     goto state 186

State 151

	cases -> '|' pattern . '->' expr                    (rule 50)

	'->'           shift, and enter state 185


State 152

	pattern -> term .                                   (rule 35)

	'->'           reduce using rule 35


State 153

	pattern -> '(' . identifier patTupleElems ')'       (rule 36)

	id             shift, and enter state 6

	identifier     goto state 184

State 154

	pattern -> '[' . ']'                                (rule 37)
	pattern -> '[' . patListElems patRest ']'           (rule 38)

	id             shift, and enter state 6
	']'            shift, and enter state 183

	identifier     goto state 181
	patListElems   goto state 182

State 155

	pattern -> '{' . patRecordKeys patRest '}'          (rule 39)

	id             shift, and enter state 6
	'}'            reduce using rule 27
	'|'            reduce using rule 27

	identifier     goto state 179
	patRecordKeys  goto state 180

State 156

	cases -> cases '|' . pattern '->' expr              (rule 51)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	'('            shift, and enter state 153
	'['            shift, and enter state 154
	'{'            shift, and enter state 155

	identifier     goto state 149
	patData        goto state 150
	pattern        goto state 178
	term           goto state 152

State 157

	controlFlow -> if expr then expr . else expr        (rule 22)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	else           shift, and enter state 177
	'.'            shift, and enter state 78


State 158

	typeExpr -> typeExpr . '->' typeExpr                (rule 108)
	typeExpr -> '\\' params '=>' typeExpr .             (rule 109)

	let            reduce using rule 109
	where          reduce using rule 109
	data           reduce using rule 109
	ty             reduce using rule 109
	')'            reduce using rule 109
	'}'            reduce using rule 109
	','            reduce using rule 109
	'->'           shift, and enter state 85
	'='            reduce using rule 109
	'|'            reduce using rule 109
	'::'           reduce using rule 109
	%eof           reduce using rule 109


State 159

	tpairs -> identifier ':' typeExpr . ',' tpairs      (rule 80)
	tpairs -> identifier ':' typeExpr .                 (rule 81)
	typeExpr -> typeExpr . '->' typeExpr                (rule 108)

	'}'            reduce using rule 81
	','            shift, and enter state 176
	'->'           shift, and enter state 85


State 160

	ttupleElems -> ',' typeExpr .                       (rule 83)
	ttupleElems -> ',' typeExpr . ttupleElems           (rule 84)
	typeExpr -> typeExpr . '->' typeExpr                (rule 108)

	')'            reduce using rule 83
	','            shift, and enter state 109
	'->'           shift, and enter state 85

	ttupleElems    goto state 175

State 161

	ttuple -> '(' typeExpr ttupleElems ')' .            (rule 85)

	id             reduce using rule 85
	number         reduce using rule 85
	string         reduce using rule 85
	boolean        reduce using rule 85
	'!'            reduce using rule 85
	let            reduce using rule 85
	where          reduce using rule 85
	data           reduce using rule 85
	ty             reduce using rule 85
	'('            reduce using rule 85
	')'            reduce using rule 85
	'{'            reduce using rule 85
	'}'            reduce using rule 85
	','            reduce using rule 85
	'->'           reduce using rule 85
	'='            reduce using rule 85
	'|'            reduce using rule 85
	'::'           reduce using rule 85
	%eof           reduce using rule 85


State 162

	dec -> ty identifier kindAnnotation '=' . typeExpr    (rule 127)
	dec -> ty identifier kindAnnotation '=' . typeExpr where tbindings    (rule 128)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 174

State 163

	kindExpr -> kindExpr . '->' kindExpr                (rule 115)
	kindAnnotation -> '::' kindExpr .                   (rule 119)

	'->'           shift, and enter state 90
	'='            reduce using rule 119


State 164

	dec -> data identifier kindAnnotation '=' . dataExprs    (rule 125)
	dec -> data identifier kindAnnotation '=' . dataExprs where tbindings    (rule 126)

	id             shift, and enter state 6

	identifier     goto state 171
	dataExpr       goto state 172
	dataExprs      goto state 173

State 165

	typeExpr -> typeExpr . '->' typeExpr                (rule 108)
	typeAnnotation -> ':' typeExpr .                    (rule 112)
	typeAnnotation -> ':' typeExpr . where tbindings    (rule 113)

	where          shift, and enter state 170
	'->'           shift, and enter state 85
	'='            reduce using rule 112
	'::'           reduce using rule 112


State 166

	typeAnnotation -> ':' instance . identifier ':' typeExpr    (rule 114)

	id             shift, and enter state 6

	identifier     goto state 169

State 167

	dec -> let identifier typeAnnotation kindAnnotation . '=' expr    (rule 123)
	dec -> let identifier typeAnnotation kindAnnotation . '=' expr where bindings    (rule 124)

	'='            shift, and enter state 168


State 168

	dec -> let identifier typeAnnotation kindAnnotation '=' . expr    (rule 123)
	dec -> let identifier typeAnnotation kindAnnotation '=' . expr where bindings    (rule 124)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 210

State 169

	typeAnnotation -> ':' instance identifier . ':' typeExpr    (rule 114)

	':'            shift, and enter state 209


State 170

	typeAnnotation -> ':' typeExpr where . tbindings    (rule 113)

	id             shift, and enter state 6

	identifier     goto state 206
	tbinding       goto state 207
	tbindings      goto state 208

State 171

	dataExpr -> identifier . ':' typeExpr               (rule 120)

	':'            shift, and enter state 205


State 172

	dataExprs -> dataExpr .                             (rule 121)

	let            reduce using rule 121
	where          reduce using rule 121
	data           reduce using rule 121
	ty             reduce using rule 121
	'|'            reduce using rule 121
	%eof           reduce using rule 121


State 173

	dataExprs -> dataExprs . '|' dataExpr               (rule 122)
	dec -> data identifier kindAnnotation '=' dataExprs .    (rule 125)
	dec -> data identifier kindAnnotation '=' dataExprs . where tbindings    (rule 126)

	let            reduce using rule 125
	where          shift, and enter state 203
	data           reduce using rule 125
	ty             reduce using rule 125
	'|'            shift, and enter state 204
	%eof           reduce using rule 125


State 174

	typeExpr -> typeExpr . '->' typeExpr                (rule 108)
	dec -> ty identifier kindAnnotation '=' typeExpr .    (rule 127)
	dec -> ty identifier kindAnnotation '=' typeExpr . where tbindings    (rule 128)

	let            reduce using rule 127
	where          shift, and enter state 202
	data           reduce using rule 127
	ty             reduce using rule 127
	'->'           shift, and enter state 85
	%eof           reduce using rule 127


State 175

	ttupleElems -> ',' typeExpr ttupleElems .           (rule 84)

	')'            reduce using rule 84


State 176

	tpairs -> identifier ':' typeExpr ',' . tpairs      (rule 80)

	id             shift, and enter state 6
	'}'            reduce using rule 79

	identifier     goto state 82
	tpairs         goto state 201

State 177

	controlFlow -> if expr then expr else . expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 200

State 178

	cases -> cases '|' pattern . '->' expr              (rule 51)

	'->'           shift, and enter state 199


State 179

	patRecordKeys -> identifier .                       (rule 28)
	patRecordKeys -> identifier . ',' patRecordKeys     (rule 29)

	'}'            reduce using rule 28
	','            shift, and enter state 198
	'|'            reduce using rule 28


State 180

	pattern -> '{' patRecordKeys . patRest '}'          (rule 39)

	'}'            reduce using rule 30
	'|'            shift, and enter state 195

	patRest        goto state 197

State 181

	patListElems -> identifier .                        (rule 23)
	patListElems -> identifier . ',' patListElems       (rule 24)

	']'            reduce using rule 23
	','            shift, and enter state 196
	'|'            reduce using rule 23


State 182

	pattern -> '[' patListElems . patRest ']'           (rule 38)

	']'            reduce using rule 30
	'|'            shift, and enter state 195

	patRest        goto state 194

State 183

	pattern -> '[' ']' .                                (rule 37)

	'->'           reduce using rule 37


State 184

	pattern -> '(' identifier . patTupleElems ')'       (rule 36)

	','            shift, and enter state 193

	patTupleElems  goto state 192

State 185

	cases -> '|' pattern '->' . expr                    (rule 50)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 191

State 186

	patData -> patData identifier .                     (rule 33)

	id             reduce using rule 33
	'->'           reduce using rule 33


State 187

	patData -> identifier ':' .                         (rule 32)

	id             reduce using rule 32
	'->'           reduce using rule 32


State 188

	tupleElems -> ',' expr tupleElems .                 (rule 15)

	')'            reduce using rule 15


State 189

	pairs -> identifier ':' expr ',' . pairs            (rule 7)

	id             shift, and enter state 6
	'}'            reduce using rule 6

	identifier     goto state 55
	pairs          goto state 190

State 190

	pairs -> identifier ':' expr ',' pairs .            (rule 7)

	'}'            reduce using rule 7


State 191

	cases -> '|' pattern '->' expr .                    (rule 50)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	let            reduce using rule 50
	where          reduce using rule 50
	then           reduce using rule 50
	else           reduce using rule 50
	data           reduce using rule 50
	ty             reduce using rule 50
	')'            reduce using rule 50
	']'            reduce using rule 50
	'}'            reduce using rule 50
	','            reduce using rule 50
	'|'            reduce using rule 50
	'.'            shift, and enter state 78
	%eof           reduce using rule 50


State 192

	pattern -> '(' identifier patTupleElems . ')'       (rule 36)

	')'            shift, and enter state 229


State 193

	patTupleElems -> ',' . identifier                   (rule 25)
	patTupleElems -> ',' . identifier patTupleElems     (rule 26)

	id             shift, and enter state 6

	identifier     goto state 228

State 194

	pattern -> '[' patListElems patRest . ']'           (rule 38)

	']'            shift, and enter state 227


State 195

	patRest -> '|' . identifier                         (rule 31)

	id             shift, and enter state 6

	identifier     goto state 226

State 196

	patListElems -> identifier ',' . patListElems       (rule 24)

	id             shift, and enter state 6

	identifier     goto state 181
	patListElems   goto state 225

State 197

	pattern -> '{' patRecordKeys patRest . '}'          (rule 39)

	'}'            shift, and enter state 224


State 198

	patRecordKeys -> identifier ',' . patRecordKeys     (rule 29)

	id             shift, and enter state 6
	'}'            reduce using rule 27
	'|'            reduce using rule 27

	identifier     goto state 179
	patRecordKeys  goto state 223

State 199

	cases -> cases '|' pattern '->' . expr              (rule 51)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 222

State 200

	controlFlow -> if expr then expr else expr .        (rule 22)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	let            reduce using rule 22
	where          reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	data           reduce using rule 22
	ty             reduce using rule 22
	')'            reduce using rule 22
	']'            reduce using rule 22
	'}'            reduce using rule 22
	','            reduce using rule 22
	'|'            reduce using rule 22
	'.'            shift, and enter state 78
	%eof           reduce using rule 22


State 201

	tpairs -> identifier ':' typeExpr ',' tpairs .      (rule 80)

	'}'            reduce using rule 80


State 202

	dec -> ty identifier kindAnnotation '=' typeExpr where . tbindings    (rule 128)

	id             shift, and enter state 6

	identifier     goto state 206
	tbinding       goto state 207
	tbindings      goto state 221

State 203

	dec -> data identifier kindAnnotation '=' dataExprs where . tbindings    (rule 126)

	id             shift, and enter state 6

	identifier     goto state 206
	tbinding       goto state 207
	tbindings      goto state 220

State 204

	dataExprs -> dataExprs '|' . dataExpr               (rule 122)

	id             shift, and enter state 6

	identifier     goto state 171
	dataExpr       goto state 219

State 205

	dataExpr -> identifier ':' . typeExpr               (rule 120)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 218

State 206

	tbinding -> identifier . '=' typeExpr               (rule 96)
	tbinding -> identifier . implements typeExpr        (rule 97)
	tbinding -> identifier . '|->' typeExpr             (rule 98)
	tbinding -> identifier . '|' typeExpr               (rule 99)

	implements     shift, and enter state 214
	'|->'          shift, and enter state 215
	'='            shift, and enter state 216
	'|'            shift, and enter state 217


State 207

	tbindings -> tbinding .                             (rule 100)

	let            reduce using rule 100
	data           reduce using rule 100
	ty             reduce using rule 100
	','            reduce using rule 100
	'='            reduce using rule 100
	'::'           reduce using rule 100
	%eof           reduce using rule 100


State 208

	tbindings -> tbindings . ',' tbinding               (rule 101)
	typeAnnotation -> ':' typeExpr where tbindings .    (rule 113)

	','            shift, and enter state 213
	'='            reduce using rule 113
	'::'           reduce using rule 113


State 209

	typeAnnotation -> ':' instance identifier ':' . typeExpr    (rule 114)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 212

State 210

	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr .    (rule 123)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr . where bindings    (rule 124)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	let            reduce using rule 123
	where          shift, and enter state 211
	data           reduce using rule 123
	ty             reduce using rule 123
	'.'            shift, and enter state 78
	%eof           reduce using rule 123


State 211

	dec -> let identifier typeAnnotation kindAnnotation '=' expr where . bindings    (rule 124)

	id             shift, and enter state 6

	identifier     goto state 236
	binding        goto state 237
	bindings       goto state 238

State 212

	typeExpr -> typeExpr . '->' typeExpr                (rule 108)
	typeAnnotation -> ':' instance identifier ':' typeExpr .    (rule 114)

	'->'           shift, and enter state 85
	'='            reduce using rule 114
	'::'           reduce using rule 114


State 213

	tbindings -> tbindings ',' . tbinding               (rule 101)

	id             shift, and enter state 6

	identifier     goto state 206
	tbinding       goto state 235

State 214

	tbinding -> identifier implements . typeExpr        (rule 97)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 234

State 215

	tbinding -> identifier '|->' . typeExpr             (rule 98)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 233

State 216

	tbinding -> identifier '=' . typeExpr               (rule 96)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 232

State 217

	tbinding -> identifier '|' . typeExpr               (rule 99)

	id             shift, and enter state 6
	number         shift, and enter state 22
	string         shift, and enter state 23
	boolean        shift, and enter state 24
	'('            shift, and enter state 25
	'{'            shift, and enter state 26
	'|'            shift, and enter state 27
	'\\'           shift, and enter state 28

	identifier     goto state 14
	trecord        goto state 15
	ttuple         goto state 16
	type           goto state 17
	typeAtom       goto state 18
	tagged         goto state 19
	union          goto state 20
	typeExpr       goto state 231

State 218

	typeExpr -> typeExpr . '->' typeExpr                (rule 108)
	dataExpr -> identifier ':' typeExpr .               (rule 120)

	let            reduce using rule 120
	where          reduce using rule 120
	data           reduce using rule 120
	ty             reduce using rule 120
	'->'           shift, and enter state 85
	'|'            reduce using rule 120
	%eof           reduce using rule 120


State 219

	dataExprs -> dataExprs '|' dataExpr .               (rule 122)

	let            reduce using rule 122
	where          reduce using rule 122
	data           reduce using rule 122
	ty             reduce using rule 122
	'|'            reduce using rule 122
	%eof           reduce using rule 122


State 220

	tbindings -> tbindings . ',' tbinding               (rule 101)
	dec -> data identifier kindAnnotation '=' dataExprs where tbindings .    (rule 126)

	let            reduce using rule 126
	data           reduce using rule 126
	ty             reduce using rule 126
	','            shift, and enter state 213
	%eof           reduce using rule 126


State 221

	tbindings -> tbindings . ',' tbinding               (rule 101)
	dec -> ty identifier kindAnnotation '=' typeExpr where tbindings .    (rule 128)

	let            reduce using rule 128
	data           reduce using rule 128
	ty             reduce using rule 128
	','            shift, and enter state 213
	%eof           reduce using rule 128


State 222

	cases -> cases '|' pattern '->' expr .              (rule 51)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	let            reduce using rule 51
	where          reduce using rule 51
	then           reduce using rule 51
	else           reduce using rule 51
	data           reduce using rule 51
	ty             reduce using rule 51
	')'            reduce using rule 51
	']'            reduce using rule 51
	'}'            reduce using rule 51
	','            reduce using rule 51
	'|'            reduce using rule 51
	'.'            shift, and enter state 78
	%eof           reduce using rule 51


State 223

	patRecordKeys -> identifier ',' patRecordKeys .     (rule 29)

	'}'            reduce using rule 29
	'|'            reduce using rule 29


State 224

	pattern -> '{' patRecordKeys patRest '}' .          (rule 39)

	'->'           reduce using rule 39


State 225

	patListElems -> identifier ',' patListElems .       (rule 24)

	']'            reduce using rule 24
	'|'            reduce using rule 24


State 226

	patRest -> '|' identifier .                         (rule 31)

	']'            reduce using rule 31
	'}'            reduce using rule 31


State 227

	pattern -> '[' patListElems patRest ']' .           (rule 38)

	'->'           reduce using rule 38


State 228

	patTupleElems -> ',' identifier .                   (rule 25)
	patTupleElems -> ',' identifier . patTupleElems     (rule 26)

	')'            reduce using rule 25
	','            shift, and enter state 193

	patTupleElems  goto state 230

State 229

	pattern -> '(' identifier patTupleElems ')' .       (rule 36)

	'->'           reduce using rule 36


State 230

	patTupleElems -> ',' identifier patTupleElems .     (rule 26)

	')'            reduce using rule 26


State 231

	tbinding -> identifier '|' typeExpr .               (rule 99)
	typeExpr -> typeExpr . '->' typeExpr                (rule 108)

	let            reduce using rule 99
	data           reduce using rule 99
	ty             reduce using rule 99
	','            reduce using rule 99
	'->'           shift, and enter state 85
	'='            reduce using rule 99
	'::'           reduce using rule 99
	%eof           reduce using rule 99


State 232

	tbinding -> identifier '=' typeExpr .               (rule 96)
	typeExpr -> typeExpr . '->' typeExpr                (rule 108)

	let            reduce using rule 96
	data           reduce using rule 96
	ty             reduce using rule 96
	','            reduce using rule 96
	'->'           shift, and enter state 85
	'='            reduce using rule 96
	'::'           reduce using rule 96
	%eof           reduce using rule 96


State 233

	tbinding -> identifier '|->' typeExpr .             (rule 98)
	typeExpr -> typeExpr . '->' typeExpr                (rule 108)

	let            reduce using rule 98
	data           reduce using rule 98
	ty             reduce using rule 98
	','            reduce using rule 98
	'->'           shift, and enter state 85
	'='            reduce using rule 98
	'::'           reduce using rule 98
	%eof           reduce using rule 98


State 234

	tbinding -> identifier implements typeExpr .        (rule 97)
	typeExpr -> typeExpr . '->' typeExpr                (rule 108)

	let            reduce using rule 97
	data           reduce using rule 97
	ty             reduce using rule 97
	','            reduce using rule 97
	'->'           shift, and enter state 85
	'='            reduce using rule 97
	'::'           reduce using rule 97
	%eof           reduce using rule 97


State 235

	tbindings -> tbindings ',' tbinding .               (rule 101)

	let            reduce using rule 101
	data           reduce using rule 101
	ty             reduce using rule 101
	','            reduce using rule 101
	'='            reduce using rule 101
	'::'           reduce using rule 101
	%eof           reduce using rule 101


State 236

	binding -> identifier . '=' expr                    (rule 53)

	'='            shift, and enter state 240


State 237

	bindings -> binding .                               (rule 54)

	let            reduce using rule 54
	data           reduce using rule 54
	ty             reduce using rule 54
	','            reduce using rule 54
	%eof           reduce using rule 54


State 238

	bindings -> bindings . ',' binding                  (rule 55)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr where bindings .    (rule 124)

	let            reduce using rule 124
	data           reduce using rule 124
	ty             reduce using rule 124
	','            shift, and enter state 239
	%eof           reduce using rule 124


State 239

	bindings -> bindings ',' . binding                  (rule 55)

	id             shift, and enter state 6

	identifier     goto state 236
	binding        goto state 242

State 240

	binding -> identifier '=' . expr                    (rule 53)

	id             shift, and enter state 6
	number         shift, and enter state 39
	string         shift, and enter state 40
	boolean        shift, and enter state 41
	if             shift, and enter state 42
	match          shift, and enter state 43
	'('            shift, and enter state 44
	'['            shift, and enter state 45
	'{'            shift, and enter state 46
	'.'            shift, and enter state 47
	'\\'           shift, and enter state 48

	identifier     goto state 29
	record         goto state 30
	list           goto state 31
	tuple          goto state 32
	fnApplication  goto state 33
	controlFlow    goto state 34
	term           goto state 35
	atom           goto state 36
	matchExpr      goto state 37
	expr           goto state 241

State 241

	binding -> identifier '=' expr .                    (rule 53)
	expr -> expr . '.' identifier                       (rule 62)
	expr -> expr . '+' expr                             (rule 63)
	expr -> expr . '-' expr                             (rule 64)
	expr -> expr . '*' expr                             (rule 65)
	expr -> expr . '/' expr                             (rule 66)
	expr -> expr . '^' expr                             (rule 67)
	expr -> expr . '||' expr                            (rule 68)
	expr -> expr . '&&' expr                            (rule 69)
	expr -> expr . '==' expr                            (rule 70)
	expr -> expr . '!=' expr                            (rule 71)
	expr -> expr . '<' expr                             (rule 72)
	expr -> expr . '>' expr                             (rule 73)
	expr -> expr . '<=' expr                            (rule 74)
	expr -> expr . '>=' expr                            (rule 75)
	expr -> expr . '|>' expr                            (rule 76)
	expr -> expr . '<|' expr                            (rule 77)
	expr -> expr . '++' expr                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'^'            shift, and enter state 66
	'++'           shift, and enter state 67
	'=='           shift, and enter state 68
	'!='           shift, and enter state 69
	'<'            shift, and enter state 70
	'<='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'||'           shift, and enter state 74
	'&&'           shift, and enter state 75
	'|>'           shift, and enter state 76
	'<|'           shift, and enter state 77
	let            reduce using rule 53
	data           reduce using rule 53
	ty             reduce using rule 53
	','            reduce using rule 53
	'.'            shift, and enter state 78
	%eof           reduce using rule 53


State 242

	bindings -> bindings ',' binding .                  (rule 55)

	let            reduce using rule 55
	data           reduce using rule 55
	ty             reduce using rule 55
	','            reduce using rule 55
	%eof           reduce using rule 55


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 132
Number of terminals: 65
Number of non-terminals: 49
Number of states: 243
