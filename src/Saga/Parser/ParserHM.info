-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ./src/Saga/Parser/ParserHM.y
-----------------------------------------------------------------------------


rule 81 is unused
rule 82 is unused

terminal op is unused
terminal in is unused
terminal with is unused
terminal alias is unused
terminal kind is unused
terminal forall is unused
terminal exists is unused
terminal proof is unused
terminal infer is unused
terminal protocol is unused
terminal interface is unused
terminal module is unused
terminal import is unused
terminal ';' is unused
terminal newline is unused
terminal eof is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseSagaScript -> script                   (0)
	%start_parseSagaExpr -> expr                       (1)
	%start_parseSagaType -> typeExpr                   (2)
	%start_parseSagaKind -> kindExpr                   (3)
	%start_parseSagaDec -> dec                         (4)
	identifier -> id                                   (5)
	pairs ->                                           (6)
	pairs -> identifier ':' expr ',' pairs             (7)
	pairs -> identifier ':' expr                       (8)
	record -> '{' pairs '}'                            (9)
	listElements ->                                    (10)
	listElements -> expr                               (11)
	listElements -> expr ',' listElements              (12)
	list -> '[' listElements ']'                       (13)
	tupleElems -> ',' expr                             (14)
	tupleElems -> ',' expr tupleElems                  (15)
	tuple -> '(' expr tupleElems ')'                   (16)
	params ->                                          (17)
	params -> params identifier                        (18)
	args ->                                            (19)
	args -> args atom                                  (20)
	fnApplication -> atom args '!'                     (21)
	controlFlow -> if expr then expr else expr         (22)
	patListElems -> identifier                         (23)
	patListElems -> identifier ',' patListElems        (24)
	patTupleElems -> ',' identifier                    (25)
	patTupleElems -> ',' identifier patTupleElems      (26)
	patRecordKeys ->                                   (27)
	patRecordKeys -> identifier                        (28)
	patRecordKeys -> identifier ',' patRecordKeys      (29)
	patRest ->                                         (30)
	patRest -> '|' identifier                          (31)
	patData -> identifier ':'                          (32)
	patData -> patData identifier                      (33)
	pattern -> identifier                              (34)
	pattern -> term                                    (35)
	pattern -> patData                                 (36)
	pattern -> '(' identifier patTupleElems ')'        (37)
	pattern -> '[' ']'                                 (38)
	pattern -> '[' patListElems patRest ']'            (39)
	pattern -> '{' patRecordKeys patRest '}'           (40)
	pattern -> '(' pattern ')'                         (41)
	term -> number                                     (42)
	term -> string                                     (43)
	term -> boolean                                    (44)
	atom -> identifier                                 (45)
	atom -> term                                       (46)
	atom -> tuple                                      (47)
	atom -> list                                       (48)
	atom -> record                                     (49)
	atom -> '{' block '}'                              (50)
	atom -> '(' expr ')'                               (51)
	cases -> '|' pattern '->' expr                     (52)
	cases -> cases '|' pattern '->' expr               (53)
	matchExpr -> match expr cases                      (54)
	binding -> identifier '=' expr                     (55)
	bindings -> binding                                (56)
	bindings -> bindings ',' binding                   (57)
	expr -> controlFlow                                (58)
	expr -> matchExpr                                  (59)
	expr -> fnApplication                              (60)
	expr -> '\\' params '->' expr                      (61)
	expr -> atom                                       (62)
	expr -> '.' atom                                   (63)
	expr -> expr '.' identifier                        (64)
	expr -> expr '+' expr                              (65)
	expr -> expr '-' expr                              (66)
	expr -> expr '*' expr                              (67)
	expr -> expr '/' expr                              (68)
	expr -> expr '^' expr                              (69)
	expr -> expr '||' expr                             (70)
	expr -> expr '&&' expr                             (71)
	expr -> expr '==' expr                             (72)
	expr -> expr '!=' expr                             (73)
	expr -> expr '<' expr                              (74)
	expr -> expr '>' expr                              (75)
	expr -> expr '<=' expr                             (76)
	expr -> expr '>=' expr                             (77)
	expr -> expr '|>' expr                             (78)
	expr -> expr '<|' expr                             (79)
	expr -> expr '++' expr                             (80)
	patterns -> pattern ','                            (81)
	patterns -> patterns pattern                       (82)
	backcall -> identifier '<-' expr                   (83)
	statement -> fnApplication                         (84)
	statement -> letdec                                (85)
	statement -> backcall                              (86)
	stmts -> statement                                 (87)
	stmts -> stmts statement                           (88)
	returnStmt -> return expr                          (89)
	block -> returnStmt                                (90)
	block -> stmts returnStmt                          (91)
	tpairs ->                                          (92)
	tpairs -> identifier ':' typeExpr ',' tpairs       (93)
	tpairs -> identifier ':' typeExpr                  (94)
	trecord -> '{' tpairs '}'                          (95)
	ttupleElems -> ',' typeExpr                        (96)
	ttupleElems -> ',' typeExpr ttupleElems            (97)
	ttuple -> '(' typeExpr ttupleElems ')'             (98)
	type -> number                                     (99)
	type -> boolean                                    (100)
	type -> string                                     (101)
	type -> ttuple                                     (102)
	type -> trecord                                    (103)
	typeAtom -> type                                   (104)
	typeAtom -> identifier                             (105)
	typeAtom -> '(' typeExpr ')'                       (106)
	typeArgs ->                                        (107)
	typeArgs -> typeArgs typeAtom                      (108)
	tbinding -> identifier '=' typeExpr                (109)
	tbinding -> identifier implements typeExpr         (110)
	tbinding -> identifier '|->' typeExpr              (111)
	tbinding -> identifier '|' typeExpr                (112)
	tbindings -> tbinding                              (113)
	tbindings -> tbindings ',' tbinding                (114)
	tagged -> identifier ':' typeExpr                  (115)
	union -> '|' typeExpr                              (116)
	union -> union '|' typeExpr                        (117)
	typeExpr -> typeAtom                               (118)
	typeExpr -> tagged                                 (119)
	typeExpr -> union                                  (120)
	typeExpr -> typeExpr '->' typeExpr                 (121)
	typeExpr -> '\\' params '=>' typeExpr              (122)
	typeExpr -> typeAtom typeArgs '!'                  (123)
	typeAnnotation ->                                  (124)
	typeAnnotation -> ':' typeExpr                     (125)
	typeAnnotation -> ':' typeExpr where tbindings     (126)
	typeAnnotation -> ':' instance identifier ':' typeExpr   (127)
	kindExpr -> kindExpr '->' kindExpr                 (128)
	kindExpr -> '(' kindExpr ')'                       (129)
	kindExpr -> identifier                             (130)
	kindAnnotation ->                                  (131)
	kindAnnotation -> '::' kindExpr                    (132)
	dataExpr -> identifier ':' typeExpr                (133)
	dataExprs -> dataExpr                              (134)
	dataExprs -> dataExprs '|' dataExpr                (135)
	letdec -> let identifier typeAnnotation kindAnnotation '=' expr   (136)
	dec -> letdec                                      (137)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr where bindings   (138)
	dec -> data identifier kindAnnotation '=' dataExprs   (139)
	dec -> data identifier kindAnnotation '=' dataExprs where tbindings   (140)
	dec -> ty identifier kindAnnotation '=' typeExpr   (141)
	dec -> ty identifier kindAnnotation '=' typeExpr where tbindings   (142)
	declarations -> dec                                (143)
	declarations -> declarations dec                   (144)
	script -> declarations                             (145)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { L.RangedToken (T.Id _) _ }
	number         { L.RangedToken (T.Number _) _ }
	string         { L.RangedToken (T.String _) _ }
	boolean        { L.RangedToken (T.Boolean _) _ }
	'!'            { L.RangedToken (T.Operator "!") _ }
	'+'            { L.RangedToken (T.Operator "+") _ }
	'-'            { L.RangedToken (T.Operator "-") _ }
	'*'            { L.RangedToken (T.Operator "*") _ }
	'/'            { L.RangedToken (T.Operator "/") _ }
	'^'            { L.RangedToken (T.Operator "^") _ }
	'++'           { L.RangedToken (T.Operator "++") _ }
	'=='           { L.RangedToken (T.Operator "==") _ }
	'!='           { L.RangedToken (T.Operator "!=") _ }
	'<'            { L.RangedToken (T.Operator "<") _ }
	'<='           { L.RangedToken (T.Operator "<=") _ }
	'>'            { L.RangedToken (T.Operator ">") _ }
	'>='           { L.RangedToken (T.Operator ">=") _ }
	'||'           { L.RangedToken (T.Operator "||") _ }
	'&&'           { L.RangedToken (T.Operator "&&") _ }
	'|>'           { L.RangedToken (T.Operator "|>") _ }
	'<|'           { L.RangedToken (T.Operator "<|") _ }
	op             { L.RangedToken (T.Operator _) _ }
	let            { L.RangedToken T.Let _ }
	in             { L.RangedToken T.In _ }
	where          { L.RangedToken T.Where _ }
	with           { L.RangedToken T.With _ }
	if             { L.RangedToken T.If _ }
	then           { L.RangedToken T.Then _ }
	else           { L.RangedToken T.Else _ }
	match          { L.RangedToken T.Match _ }
	return         { L.RangedToken T.Return _ }
	data           { L.RangedToken T.Data _ }
	ty             { L.RangedToken T.Type _ }
	alias          { L.RangedToken T.Alias _ }
	kind           { L.RangedToken T.Kind _ }
	forall         { L.RangedToken T.Forall _ }
	exists         { L.RangedToken T.Exists _ }
	proof          { L.RangedToken T.Proof _ }
	infer          { L.RangedToken T.Infer _ }
	protocol       { L.RangedToken T.Protocol _ }
	interface      { L.RangedToken T.Interface _ }
	instance       { L.RangedToken T.Instance _ }
	implements     { L.RangedToken T.Implements _ }
	module         { L.RangedToken T.Module _ }
	import         { L.RangedToken T.Import _ }
	'('            { L.RangedToken T.LParen _ }
	')'            { L.RangedToken T.RParen _ }
	'['            { L.RangedToken T.LBrack _ }
	']'            { L.RangedToken T.RBrack _ }
	'{'            { L.RangedToken T.LCurly _ }
	'}'            { L.RangedToken T.RCurly _ }
	':'            { L.RangedToken T.Colon _ }
	';'            { L.RangedToken T.SemiColon _ }
	','            { L.RangedToken T.Comma _ }
	'->'           { L.RangedToken T.Arrow _ }
	'<-'           { L.RangedToken T.BackArrow _ }
	'=>'           { L.RangedToken T.FatArrow _ }
	'|->'          { L.RangedToken T.PipeArrow _ }
	'='            { L.RangedToken T.Equals _ }
	'|'            { L.RangedToken T.Pipe _ }
	'.'            { L.RangedToken T.Dot _ }
	'::'           { L.RangedToken T.Section _ }
	'\\'           { L.RangedToken T.BackSlash _ }
	newline        { L.RangedToken T.Newline _ }
	eof            { L.RangedToken T.EOF _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseSagaScript rule  0
	%start_parseSagaExpr rule  1
	%start_parseSagaType rule  2
	%start_parseSagaKind rule  3
	%start_parseSagaDec rule  4
	identifier      rule  5
	pairs           rules 6, 7, 8
	record          rule  9
	listElements    rules 10, 11, 12
	list            rule  13
	tupleElems      rules 14, 15
	tuple           rule  16
	params          rules 17, 18
	args            rules 19, 20
	fnApplication   rule  21
	controlFlow     rule  22
	patListElems    rules 23, 24
	patTupleElems   rules 25, 26
	patRecordKeys   rules 27, 28, 29
	patRest         rules 30, 31
	patData         rules 32, 33
	pattern         rules 34, 35, 36, 37, 38, 39, 40, 41
	term            rules 42, 43, 44
	atom            rules 45, 46, 47, 48, 49, 50, 51
	cases           rules 52, 53
	matchExpr       rule  54
	binding         rule  55
	bindings        rules 56, 57
	expr            rules 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80
	patterns        rules 81, 82
	backcall        rule  83
	statement       rules 84, 85, 86
	stmts           rules 87, 88
	returnStmt      rule  89
	block           rules 90, 91
	tpairs          rules 92, 93, 94
	trecord         rule  95
	ttupleElems     rules 96, 97
	ttuple          rule  98
	type            rules 99, 100, 101, 102, 103
	typeAtom        rules 104, 105, 106
	typeArgs        rules 107, 108
	tbinding        rules 109, 110, 111, 112
	tbindings       rules 113, 114
	tagged          rule  115
	union           rules 116, 117
	typeExpr        rules 118, 119, 120, 121, 122, 123
	typeAnnotation  rules 124, 125, 126, 127
	kindExpr        rules 128, 129, 130
	kindAnnotation  rules 131, 132
	dataExpr        rule  133
	dataExprs       rules 134, 135
	letdec          rule  136
	dec             rules 137, 138, 139, 140, 141, 142
	declarations    rules 143, 144
	script          rule  145

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseSagaScript -> . script                  (rule 0)

	let            shift, and enter state 9
	data           shift, and enter state 10
	ty             shift, and enter state 11

	letdec         goto state 7
	dec            goto state 50
	declarations   goto state 51
	script         goto state 52

State 1

	%start_parseSagaExpr -> . expr                      (rule 1)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 39

State 2

	%start_parseSagaType -> . typeExpr                  (rule 2)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 22

State 3

	%start_parseSagaKind -> . kindExpr                  (rule 3)

	id             shift, and enter state 6
	'('            shift, and enter state 14

	identifier     goto state 12
	kindExpr       goto state 13

State 4

	%start_parseSagaDec -> . dec                        (rule 4)

	let            shift, and enter state 9
	data           shift, and enter state 10
	ty             shift, and enter state 11

	letdec         goto state 7
	dec            goto state 8

State 5

	identifier -> . id                                  (rule 5)

	id             shift, and enter state 6


State 6

	identifier -> id .                                  (rule 5)

	id             reduce using rule 5
	number         reduce using rule 5
	string         reduce using rule 5
	boolean        reduce using rule 5
	'!'            reduce using rule 5
	'+'            reduce using rule 5
	'-'            reduce using rule 5
	'*'            reduce using rule 5
	'/'            reduce using rule 5
	'^'            reduce using rule 5
	'++'           reduce using rule 5
	'=='           reduce using rule 5
	'!='           reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	'||'           reduce using rule 5
	'&&'           reduce using rule 5
	'|>'           reduce using rule 5
	'<|'           reduce using rule 5
	let            reduce using rule 5
	where          reduce using rule 5
	then           reduce using rule 5
	else           reduce using rule 5
	return         reduce using rule 5
	data           reduce using rule 5
	ty             reduce using rule 5
	implements     reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	'['            reduce using rule 5
	']'            reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	':'            reduce using rule 5
	','            reduce using rule 5
	'->'           reduce using rule 5
	'<-'           reduce using rule 5
	'=>'           reduce using rule 5
	'|->'          reduce using rule 5
	'='            reduce using rule 5
	'|'            reduce using rule 5
	'.'            reduce using rule 5
	'::'           reduce using rule 5
	%eof           reduce using rule 5


State 7

	dec -> letdec .                                     (rule 137)

	let            reduce using rule 137
	data           reduce using rule 137
	ty             reduce using rule 137
	%eof           reduce using rule 137


State 8

	%start_parseSagaDec -> dec .                        (rule 4)

	%eof           accept


State 9

	letdec -> let . identifier typeAnnotation kindAnnotation '=' expr    (rule 136)
	dec -> let . identifier typeAnnotation kindAnnotation '=' expr where bindings    (rule 138)

	id             shift, and enter state 6

	identifier     goto state 104

State 10

	dec -> data . identifier kindAnnotation '=' dataExprs    (rule 139)
	dec -> data . identifier kindAnnotation '=' dataExprs where tbindings    (rule 140)

	id             shift, and enter state 6

	identifier     goto state 103

State 11

	dec -> ty . identifier kindAnnotation '=' typeExpr    (rule 141)
	dec -> ty . identifier kindAnnotation '=' typeExpr where tbindings    (rule 142)

	id             shift, and enter state 6

	identifier     goto state 102

State 12

	kindExpr -> identifier .                            (rule 130)

	')'            reduce using rule 130
	'->'           reduce using rule 130
	'='            reduce using rule 130
	%eof           reduce using rule 130


State 13

	%start_parseSagaKind -> kindExpr .                  (rule 3)
	kindExpr -> kindExpr . '->' kindExpr                (rule 128)

	'->'           shift, and enter state 101
	%eof           accept


State 14

	kindExpr -> '(' . kindExpr ')'                      (rule 129)

	id             shift, and enter state 6
	'('            shift, and enter state 14

	identifier     goto state 12
	kindExpr       goto state 100

State 15

	typeAtom -> identifier .                            (rule 105)
	tagged -> identifier . ':' typeExpr                 (rule 115)

	id             reduce using rule 105
	number         reduce using rule 105
	string         reduce using rule 105
	boolean        reduce using rule 105
	'!'            reduce using rule 105
	let            reduce using rule 105
	where          reduce using rule 105
	data           reduce using rule 105
	ty             reduce using rule 105
	'('            reduce using rule 105
	')'            reduce using rule 105
	'{'            reduce using rule 105
	'}'            reduce using rule 105
	':'            shift, and enter state 99
	','            reduce using rule 105
	'->'           reduce using rule 105
	'='            reduce using rule 105
	'|'            reduce using rule 105
	'::'           reduce using rule 105
	%eof           reduce using rule 105


State 16

	type -> trecord .                                   (rule 103)

	id             reduce using rule 103
	number         reduce using rule 103
	string         reduce using rule 103
	boolean        reduce using rule 103
	'!'            reduce using rule 103
	let            reduce using rule 103
	where          reduce using rule 103
	data           reduce using rule 103
	ty             reduce using rule 103
	'('            reduce using rule 103
	')'            reduce using rule 103
	'{'            reduce using rule 103
	'}'            reduce using rule 103
	','            reduce using rule 103
	'->'           reduce using rule 103
	'='            reduce using rule 103
	'|'            reduce using rule 103
	'::'           reduce using rule 103
	%eof           reduce using rule 103


State 17

	type -> ttuple .                                    (rule 102)

	id             reduce using rule 102
	number         reduce using rule 102
	string         reduce using rule 102
	boolean        reduce using rule 102
	'!'            reduce using rule 102
	let            reduce using rule 102
	where          reduce using rule 102
	data           reduce using rule 102
	ty             reduce using rule 102
	'('            reduce using rule 102
	')'            reduce using rule 102
	'{'            reduce using rule 102
	'}'            reduce using rule 102
	','            reduce using rule 102
	'->'           reduce using rule 102
	'='            reduce using rule 102
	'|'            reduce using rule 102
	'::'           reduce using rule 102
	%eof           reduce using rule 102


State 18

	typeAtom -> type .                                  (rule 104)

	id             reduce using rule 104
	number         reduce using rule 104
	string         reduce using rule 104
	boolean        reduce using rule 104
	'!'            reduce using rule 104
	let            reduce using rule 104
	where          reduce using rule 104
	data           reduce using rule 104
	ty             reduce using rule 104
	'('            reduce using rule 104
	')'            reduce using rule 104
	'{'            reduce using rule 104
	'}'            reduce using rule 104
	','            reduce using rule 104
	'->'           reduce using rule 104
	'='            reduce using rule 104
	'|'            reduce using rule 104
	'::'           reduce using rule 104
	%eof           reduce using rule 104


State 19

	typeExpr -> typeAtom .                              (rule 118)
	typeExpr -> typeAtom . typeArgs '!'                 (rule 123)

	id             reduce using rule 107
	number         reduce using rule 107
	string         reduce using rule 107
	boolean        reduce using rule 107
	'!'            reduce using rule 107
	let            reduce using rule 118
	where          reduce using rule 118
	data           reduce using rule 118
	ty             reduce using rule 118
	'('            reduce using rule 107
	')'            reduce using rule 118
	'{'            reduce using rule 107
	'}'            reduce using rule 118
	','            reduce using rule 118
	'->'           reduce using rule 118
	'='            reduce using rule 118
	'|'            reduce using rule 118
	'::'           reduce using rule 118
	%eof           reduce using rule 118

	typeArgs       goto state 98

State 20

	typeExpr -> tagged .                                (rule 119)

	let            reduce using rule 119
	where          reduce using rule 119
	data           reduce using rule 119
	ty             reduce using rule 119
	')'            reduce using rule 119
	'}'            reduce using rule 119
	','            reduce using rule 119
	'->'           reduce using rule 119
	'='            reduce using rule 119
	'|'            reduce using rule 119
	'::'           reduce using rule 119
	%eof           reduce using rule 119


State 21

	union -> union . '|' typeExpr                       (rule 117)
	typeExpr -> union .                                 (rule 120)

	let            reduce using rule 120
	where          reduce using rule 120
	data           reduce using rule 120
	ty             reduce using rule 120
	')'            reduce using rule 120
	'}'            reduce using rule 120
	','            reduce using rule 120
	'->'           reduce using rule 120
	'='            reduce using rule 120
	'|'            shift, and enter state 97
	'::'           reduce using rule 120
	%eof           reduce using rule 120


State 22

	%start_parseSagaType -> typeExpr .                  (rule 2)
	typeExpr -> typeExpr . '->' typeExpr                (rule 121)

	'->'           shift, and enter state 96
	%eof           accept


State 23

	type -> number .                                    (rule 99)

	id             reduce using rule 99
	number         reduce using rule 99
	string         reduce using rule 99
	boolean        reduce using rule 99
	'!'            reduce using rule 99
	let            reduce using rule 99
	where          reduce using rule 99
	data           reduce using rule 99
	ty             reduce using rule 99
	'('            reduce using rule 99
	')'            reduce using rule 99
	'{'            reduce using rule 99
	'}'            reduce using rule 99
	','            reduce using rule 99
	'->'           reduce using rule 99
	'='            reduce using rule 99
	'|'            reduce using rule 99
	'::'           reduce using rule 99
	%eof           reduce using rule 99


State 24

	type -> string .                                    (rule 101)

	id             reduce using rule 101
	number         reduce using rule 101
	string         reduce using rule 101
	boolean        reduce using rule 101
	'!'            reduce using rule 101
	let            reduce using rule 101
	where          reduce using rule 101
	data           reduce using rule 101
	ty             reduce using rule 101
	'('            reduce using rule 101
	')'            reduce using rule 101
	'{'            reduce using rule 101
	'}'            reduce using rule 101
	','            reduce using rule 101
	'->'           reduce using rule 101
	'='            reduce using rule 101
	'|'            reduce using rule 101
	'::'           reduce using rule 101
	%eof           reduce using rule 101


State 25

	type -> boolean .                                   (rule 100)

	id             reduce using rule 100
	number         reduce using rule 100
	string         reduce using rule 100
	boolean        reduce using rule 100
	'!'            reduce using rule 100
	let            reduce using rule 100
	where          reduce using rule 100
	data           reduce using rule 100
	ty             reduce using rule 100
	'('            reduce using rule 100
	')'            reduce using rule 100
	'{'            reduce using rule 100
	'}'            reduce using rule 100
	','            reduce using rule 100
	'->'           reduce using rule 100
	'='            reduce using rule 100
	'|'            reduce using rule 100
	'::'           reduce using rule 100
	%eof           reduce using rule 100


State 26

	ttuple -> '(' . typeExpr ttupleElems ')'            (rule 98)
	typeAtom -> '(' . typeExpr ')'                      (rule 106)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 95

State 27

	trecord -> '{' . tpairs '}'                         (rule 95)

	id             shift, and enter state 6
	'}'            reduce using rule 92

	identifier     goto state 93
	tpairs         goto state 94

State 28

	union -> '|' . typeExpr                             (rule 116)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 92

State 29

	typeExpr -> '\\' . params '=>' typeExpr             (rule 122)

	id             reduce using rule 17
	'=>'           reduce using rule 17

	params         goto state 91

State 30

	atom -> identifier .                                (rule 45)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	'^'            reduce using rule 45
	'++'           reduce using rule 45
	'=='           reduce using rule 45
	'!='           reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45
	'&&'           reduce using rule 45
	'|>'           reduce using rule 45
	'<|'           reduce using rule 45
	let            reduce using rule 45
	where          reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	return         reduce using rule 45
	data           reduce using rule 45
	ty             reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	','            reduce using rule 45
	'|'            reduce using rule 45
	'.'            reduce using rule 45
	%eof           reduce using rule 45


State 31

	atom -> record .                                    (rule 49)

	id             reduce using rule 49
	number         reduce using rule 49
	string         reduce using rule 49
	boolean        reduce using rule 49
	'!'            reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	'^'            reduce using rule 49
	'++'           reduce using rule 49
	'=='           reduce using rule 49
	'!='           reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49
	'&&'           reduce using rule 49
	'|>'           reduce using rule 49
	'<|'           reduce using rule 49
	let            reduce using rule 49
	where          reduce using rule 49
	then           reduce using rule 49
	else           reduce using rule 49
	return         reduce using rule 49
	data           reduce using rule 49
	ty             reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	','            reduce using rule 49
	'|'            reduce using rule 49
	'.'            reduce using rule 49
	%eof           reduce using rule 49


State 32

	atom -> list .                                      (rule 48)

	id             reduce using rule 48
	number         reduce using rule 48
	string         reduce using rule 48
	boolean        reduce using rule 48
	'!'            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	'^'            reduce using rule 48
	'++'           reduce using rule 48
	'=='           reduce using rule 48
	'!='           reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48
	'&&'           reduce using rule 48
	'|>'           reduce using rule 48
	'<|'           reduce using rule 48
	let            reduce using rule 48
	where          reduce using rule 48
	then           reduce using rule 48
	else           reduce using rule 48
	return         reduce using rule 48
	data           reduce using rule 48
	ty             reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	','            reduce using rule 48
	'|'            reduce using rule 48
	'.'            reduce using rule 48
	%eof           reduce using rule 48


State 33

	atom -> tuple .                                     (rule 47)

	id             reduce using rule 47
	number         reduce using rule 47
	string         reduce using rule 47
	boolean        reduce using rule 47
	'!'            reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	'^'            reduce using rule 47
	'++'           reduce using rule 47
	'=='           reduce using rule 47
	'!='           reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47
	'&&'           reduce using rule 47
	'|>'           reduce using rule 47
	'<|'           reduce using rule 47
	let            reduce using rule 47
	where          reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	return         reduce using rule 47
	data           reduce using rule 47
	ty             reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	','            reduce using rule 47
	'|'            reduce using rule 47
	'.'            reduce using rule 47
	%eof           reduce using rule 47


State 34

	expr -> fnApplication .                             (rule 60)

	id             reduce using rule 60
	number         reduce using rule 60
	string         reduce using rule 60
	boolean        reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'^'            reduce using rule 60
	'++'           reduce using rule 60
	'=='           reduce using rule 60
	'!='           reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60
	'&&'           reduce using rule 60
	'|>'           reduce using rule 60
	'<|'           reduce using rule 60
	let            reduce using rule 60
	where          reduce using rule 60
	then           reduce using rule 60
	else           reduce using rule 60
	return         reduce using rule 60
	data           reduce using rule 60
	ty             reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'{'            reduce using rule 60
	'}'            reduce using rule 60
	','            reduce using rule 60
	'|'            reduce using rule 60
	'.'            reduce using rule 60
	%eof           reduce using rule 60


State 35

	expr -> controlFlow .                               (rule 58)

	id             reduce using rule 58
	number         reduce using rule 58
	string         reduce using rule 58
	boolean        reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'^'            reduce using rule 58
	'++'           reduce using rule 58
	'=='           reduce using rule 58
	'!='           reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58
	'&&'           reduce using rule 58
	'|>'           reduce using rule 58
	'<|'           reduce using rule 58
	let            reduce using rule 58
	where          reduce using rule 58
	then           reduce using rule 58
	else           reduce using rule 58
	return         reduce using rule 58
	data           reduce using rule 58
	ty             reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'{'            reduce using rule 58
	'}'            reduce using rule 58
	','            reduce using rule 58
	'|'            reduce using rule 58
	'.'            reduce using rule 58
	%eof           reduce using rule 58


State 36

	atom -> term .                                      (rule 46)

	id             reduce using rule 46
	number         reduce using rule 46
	string         reduce using rule 46
	boolean        reduce using rule 46
	'!'            reduce using rule 46
	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	'^'            reduce using rule 46
	'++'           reduce using rule 46
	'=='           reduce using rule 46
	'!='           reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46
	'&&'           reduce using rule 46
	'|>'           reduce using rule 46
	'<|'           reduce using rule 46
	let            reduce using rule 46
	where          reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	return         reduce using rule 46
	data           reduce using rule 46
	ty             reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	','            reduce using rule 46
	'|'            reduce using rule 46
	'.'            reduce using rule 46
	%eof           reduce using rule 46


State 37

	fnApplication -> atom . args '!'                    (rule 21)
	expr -> atom .                                      (rule 62)

	id             reduce using rule 19
	number         reduce using rule 19
	string         reduce using rule 19
	boolean        reduce using rule 19
	'!'            reduce using rule 19
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'/'            reduce using rule 62
	'^'            reduce using rule 62
	'++'           reduce using rule 62
	'=='           reduce using rule 62
	'!='           reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62
	'&&'           reduce using rule 62
	'|>'           reduce using rule 62
	'<|'           reduce using rule 62
	let            reduce using rule 62
	where          reduce using rule 62
	then           reduce using rule 62
	else           reduce using rule 62
	return         reduce using rule 62
	data           reduce using rule 62
	ty             reduce using rule 62
	'('            reduce using rule 19
	')'            reduce using rule 62
	'['            reduce using rule 19
	']'            reduce using rule 62
	'{'            reduce using rule 19
	'}'            reduce using rule 62
	','            reduce using rule 62
	'|'            reduce using rule 62
	'.'            reduce using rule 62
	%eof           reduce using rule 62

	args           goto state 90

State 38

	expr -> matchExpr .                                 (rule 59)

	id             reduce using rule 59
	number         reduce using rule 59
	string         reduce using rule 59
	boolean        reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'^'            reduce using rule 59
	'++'           reduce using rule 59
	'=='           reduce using rule 59
	'!='           reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59
	'&&'           reduce using rule 59
	'|>'           reduce using rule 59
	'<|'           reduce using rule 59
	let            reduce using rule 59
	where          reduce using rule 59
	then           reduce using rule 59
	else           reduce using rule 59
	return         reduce using rule 59
	data           reduce using rule 59
	ty             reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'{'            reduce using rule 59
	'}'            reduce using rule 59
	','            reduce using rule 59
	'|'            reduce using rule 59
	'.'            reduce using rule 59
	%eof           reduce using rule 59


State 39

	%start_parseSagaExpr -> expr .                      (rule 1)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	'.'            shift, and enter state 89
	%eof           accept


State 40

	term -> number .                                    (rule 42)

	id             reduce using rule 42
	number         reduce using rule 42
	string         reduce using rule 42
	boolean        reduce using rule 42
	'!'            reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'/'            reduce using rule 42
	'^'            reduce using rule 42
	'++'           reduce using rule 42
	'=='           reduce using rule 42
	'!='           reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42
	'&&'           reduce using rule 42
	'|>'           reduce using rule 42
	'<|'           reduce using rule 42
	let            reduce using rule 42
	where          reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	return         reduce using rule 42
	data           reduce using rule 42
	ty             reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	','            reduce using rule 42
	'->'           reduce using rule 42
	'|'            reduce using rule 42
	'.'            reduce using rule 42
	%eof           reduce using rule 42


State 41

	term -> string .                                    (rule 43)

	id             reduce using rule 43
	number         reduce using rule 43
	string         reduce using rule 43
	boolean        reduce using rule 43
	'!'            reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'^'            reduce using rule 43
	'++'           reduce using rule 43
	'=='           reduce using rule 43
	'!='           reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43
	'&&'           reduce using rule 43
	'|>'           reduce using rule 43
	'<|'           reduce using rule 43
	let            reduce using rule 43
	where          reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	return         reduce using rule 43
	data           reduce using rule 43
	ty             reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	','            reduce using rule 43
	'->'           reduce using rule 43
	'|'            reduce using rule 43
	'.'            reduce using rule 43
	%eof           reduce using rule 43


State 42

	term -> boolean .                                   (rule 44)

	id             reduce using rule 44
	number         reduce using rule 44
	string         reduce using rule 44
	boolean        reduce using rule 44
	'!'            reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'/'            reduce using rule 44
	'^'            reduce using rule 44
	'++'           reduce using rule 44
	'=='           reduce using rule 44
	'!='           reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44
	'&&'           reduce using rule 44
	'|>'           reduce using rule 44
	'<|'           reduce using rule 44
	let            reduce using rule 44
	where          reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	return         reduce using rule 44
	data           reduce using rule 44
	ty             reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	','            reduce using rule 44
	'->'           reduce using rule 44
	'|'            reduce using rule 44
	'.'            reduce using rule 44
	%eof           reduce using rule 44


State 43

	controlFlow -> if . expr then expr else expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 72

State 44

	matchExpr -> match . expr cases                     (rule 54)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 71

State 45

	tuple -> '(' . expr tupleElems ')'                  (rule 16)
	atom -> '(' . expr ')'                              (rule 51)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 70

State 46

	list -> '[' . listElements ']'                      (rule 13)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	']'            reduce using rule 10
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	listElements   goto state 68
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 69

State 47

	record -> '{' . pairs '}'                           (rule 9)
	atom -> '{' . block '}'                             (rule 50)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	let            shift, and enter state 66
	return         shift, and enter state 67
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'}'            reduce using rule 6

	identifier     goto state 56
	pairs          goto state 57
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 58
	term           goto state 36
	atom           goto state 59
	backcall       goto state 60
	statement      goto state 61
	stmts          goto state 62
	returnStmt     goto state 63
	block          goto state 64
	letdec         goto state 65

State 48

	expr -> '.' . atom                                  (rule 63)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	term           goto state 36
	atom           goto state 55

State 49

	expr -> '\\' . params '->' expr                     (rule 61)

	id             reduce using rule 17
	'->'           reduce using rule 17

	params         goto state 54

State 50

	declarations -> dec .                               (rule 143)

	let            reduce using rule 143
	data           reduce using rule 143
	ty             reduce using rule 143
	%eof           reduce using rule 143


State 51

	declarations -> declarations . dec                  (rule 144)
	script -> declarations .                            (rule 145)

	let            shift, and enter state 9
	data           shift, and enter state 10
	ty             shift, and enter state 11
	%eof           reduce using rule 145

	letdec         goto state 7
	dec            goto state 53

State 52

	%start_parseSagaScript -> script .                  (rule 0)

	%eof           accept


State 53

	declarations -> declarations dec .                  (rule 144)

	let            reduce using rule 144
	data           reduce using rule 144
	ty             reduce using rule 144
	%eof           reduce using rule 144


State 54

	params -> params . identifier                       (rule 18)
	expr -> '\\' params . '->' expr                     (rule 61)

	id             shift, and enter state 6
	'->'           shift, and enter state 161

	identifier     goto state 123

State 55

	expr -> '.' atom .                                  (rule 63)

	id             reduce using rule 63
	number         reduce using rule 63
	string         reduce using rule 63
	boolean        reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	'^'            reduce using rule 63
	'++'           reduce using rule 63
	'=='           reduce using rule 63
	'!='           reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63
	'&&'           reduce using rule 63
	'|>'           reduce using rule 63
	'<|'           reduce using rule 63
	let            reduce using rule 63
	where          reduce using rule 63
	then           reduce using rule 63
	else           reduce using rule 63
	return         reduce using rule 63
	data           reduce using rule 63
	ty             reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	'{'            reduce using rule 63
	'}'            reduce using rule 63
	','            reduce using rule 63
	'|'            reduce using rule 63
	'.'            reduce using rule 63
	%eof           reduce using rule 63


State 56

	pairs -> identifier . ':' expr ',' pairs            (rule 7)
	pairs -> identifier . ':' expr                      (rule 8)
	atom -> identifier .                                (rule 45)
	backcall -> identifier . '<-' expr                  (rule 83)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'('            reduce using rule 45
	'['            reduce using rule 45
	'{'            reduce using rule 45
	':'            shift, and enter state 159
	'<-'           shift, and enter state 160


State 57

	record -> '{' pairs . '}'                           (rule 9)

	'}'            shift, and enter state 158


State 58

	statement -> fnApplication .                        (rule 84)

	id             reduce using rule 84
	number         reduce using rule 84
	string         reduce using rule 84
	boolean        reduce using rule 84
	let            reduce using rule 84
	return         reduce using rule 84
	'('            reduce using rule 84
	'['            reduce using rule 84
	'{'            reduce using rule 84


State 59

	fnApplication -> atom . args '!'                    (rule 21)

	id             reduce using rule 19
	number         reduce using rule 19
	string         reduce using rule 19
	boolean        reduce using rule 19
	'!'            reduce using rule 19
	'('            reduce using rule 19
	'['            reduce using rule 19
	'{'            reduce using rule 19

	args           goto state 90

State 60

	statement -> backcall .                             (rule 86)

	id             reduce using rule 86
	number         reduce using rule 86
	string         reduce using rule 86
	boolean        reduce using rule 86
	let            reduce using rule 86
	return         reduce using rule 86
	'('            reduce using rule 86
	'['            reduce using rule 86
	'{'            reduce using rule 86


State 61

	stmts -> statement .                                (rule 87)

	id             reduce using rule 87
	number         reduce using rule 87
	string         reduce using rule 87
	boolean        reduce using rule 87
	let            reduce using rule 87
	return         reduce using rule 87
	'('            reduce using rule 87
	'['            reduce using rule 87
	'{'            reduce using rule 87


State 62

	stmts -> stmts . statement                          (rule 88)
	block -> stmts . returnStmt                         (rule 91)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	let            shift, and enter state 66
	return         shift, and enter state 67
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47

	identifier     goto state 155
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 58
	term           goto state 36
	atom           goto state 59
	backcall       goto state 60
	statement      goto state 156
	returnStmt     goto state 157
	letdec         goto state 65

State 63

	block -> returnStmt .                               (rule 90)

	'}'            reduce using rule 90


State 64

	atom -> '{' block . '}'                             (rule 50)

	'}'            shift, and enter state 154


State 65

	statement -> letdec .                               (rule 85)

	id             reduce using rule 85
	number         reduce using rule 85
	string         reduce using rule 85
	boolean        reduce using rule 85
	let            reduce using rule 85
	return         reduce using rule 85
	'('            reduce using rule 85
	'['            reduce using rule 85
	'{'            reduce using rule 85


State 66

	letdec -> let . identifier typeAnnotation kindAnnotation '=' expr    (rule 136)

	id             shift, and enter state 6

	identifier     goto state 153

State 67

	returnStmt -> return . expr                         (rule 89)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 152

State 68

	list -> '[' listElements . ']'                      (rule 13)

	']'            shift, and enter state 151


State 69

	listElements -> expr .                              (rule 11)
	listElements -> expr . ',' listElements             (rule 12)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	']'            reduce using rule 11
	','            shift, and enter state 150
	'.'            shift, and enter state 89


State 70

	tuple -> '(' expr . tupleElems ')'                  (rule 16)
	atom -> '(' expr . ')'                              (rule 51)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	')'            shift, and enter state 148
	','            shift, and enter state 149
	'.'            shift, and enter state 89

	tupleElems     goto state 147

State 71

	matchExpr -> match expr . cases                     (rule 54)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	'|'            shift, and enter state 146
	'.'            shift, and enter state 89

	cases          goto state 145

State 72

	controlFlow -> if expr . then expr else expr        (rule 22)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	then           shift, and enter state 144
	'.'            shift, and enter state 89


State 73

	expr -> expr '+' . expr                             (rule 65)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 143

State 74

	expr -> expr '-' . expr                             (rule 66)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 142

State 75

	expr -> expr '*' . expr                             (rule 67)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 141

State 76

	expr -> expr '/' . expr                             (rule 68)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 140

State 77

	expr -> expr '^' . expr                             (rule 69)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 139

State 78

	expr -> expr '++' . expr                            (rule 80)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 138

State 79

	expr -> expr '==' . expr                            (rule 72)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 137

State 80

	expr -> expr '!=' . expr                            (rule 73)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 136

State 81

	expr -> expr '<' . expr                             (rule 74)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 135

State 82

	expr -> expr '<=' . expr                            (rule 76)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 134

State 83

	expr -> expr '>' . expr                             (rule 75)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 133

State 84

	expr -> expr '>=' . expr                            (rule 77)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 132

State 85

	expr -> expr '||' . expr                            (rule 70)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 131

State 86

	expr -> expr '&&' . expr                            (rule 71)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 130

State 87

	expr -> expr '|>' . expr                            (rule 78)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 129

State 88

	expr -> expr '<|' . expr                            (rule 79)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 128

State 89

	expr -> expr '.' . identifier                       (rule 64)

	id             shift, and enter state 6

	identifier     goto state 127

State 90

	args -> args . atom                                 (rule 20)
	fnApplication -> atom args . '!'                    (rule 21)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	'!'            shift, and enter state 126
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	term           goto state 36
	atom           goto state 125

State 91

	params -> params . identifier                       (rule 18)
	typeExpr -> '\\' params . '=>' typeExpr             (rule 122)

	id             shift, and enter state 6
	'=>'           shift, and enter state 124

	identifier     goto state 123

State 92

	union -> '|' typeExpr .                             (rule 116)
	typeExpr -> typeExpr . '->' typeExpr                (rule 121)

	let            reduce using rule 116
	where          reduce using rule 116
	data           reduce using rule 116
	ty             reduce using rule 116
	')'            reduce using rule 116
	'}'            reduce using rule 116
	','            reduce using rule 116
	'->'           shift, and enter state 96
	'='            reduce using rule 116
	'|'            reduce using rule 116
	'::'           reduce using rule 116
	%eof           reduce using rule 116


State 93

	tpairs -> identifier . ':' typeExpr ',' tpairs      (rule 93)
	tpairs -> identifier . ':' typeExpr                 (rule 94)

	':'            shift, and enter state 122


State 94

	trecord -> '{' tpairs . '}'                         (rule 95)

	'}'            shift, and enter state 121


State 95

	ttuple -> '(' typeExpr . ttupleElems ')'            (rule 98)
	typeAtom -> '(' typeExpr . ')'                      (rule 106)
	typeExpr -> typeExpr . '->' typeExpr                (rule 121)

	')'            shift, and enter state 119
	','            shift, and enter state 120
	'->'           shift, and enter state 96

	ttupleElems    goto state 118

State 96

	typeExpr -> typeExpr '->' . typeExpr                (rule 121)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 117

State 97

	union -> union '|' . typeExpr                       (rule 117)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 116

State 98

	typeArgs -> typeArgs . typeAtom                     (rule 108)
	typeExpr -> typeAtom typeArgs . '!'                 (rule 123)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'!'            shift, and enter state 115
	'('            shift, and enter state 26
	'{'            shift, and enter state 27

	identifier     goto state 113
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 114

State 99

	tagged -> identifier ':' . typeExpr                 (rule 115)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 112

State 100

	kindExpr -> kindExpr . '->' kindExpr                (rule 128)
	kindExpr -> '(' kindExpr . ')'                      (rule 129)

	')'            shift, and enter state 111
	'->'           shift, and enter state 101


State 101

	kindExpr -> kindExpr '->' . kindExpr                (rule 128)

	id             shift, and enter state 6
	'('            shift, and enter state 14

	identifier     goto state 12
	kindExpr       goto state 110

State 102

	dec -> ty identifier . kindAnnotation '=' typeExpr    (rule 141)
	dec -> ty identifier . kindAnnotation '=' typeExpr where tbindings    (rule 142)

	'='            reduce using rule 131
	'::'           shift, and enter state 108

	kindAnnotation goto state 109

State 103

	dec -> data identifier . kindAnnotation '=' dataExprs    (rule 139)
	dec -> data identifier . kindAnnotation '=' dataExprs where tbindings    (rule 140)

	'='            reduce using rule 131
	'::'           shift, and enter state 108

	kindAnnotation goto state 107

State 104

	letdec -> let identifier . typeAnnotation kindAnnotation '=' expr    (rule 136)
	dec -> let identifier . typeAnnotation kindAnnotation '=' expr where bindings    (rule 138)

	':'            shift, and enter state 106
	'='            reduce using rule 124
	'::'           reduce using rule 124

	typeAnnotation goto state 105

State 105

	letdec -> let identifier typeAnnotation . kindAnnotation '=' expr    (rule 136)
	dec -> let identifier typeAnnotation . kindAnnotation '=' expr where bindings    (rule 138)

	'='            reduce using rule 131
	'::'           shift, and enter state 108

	kindAnnotation goto state 187

State 106

	typeAnnotation -> ':' . typeExpr                    (rule 125)
	typeAnnotation -> ':' . typeExpr where tbindings    (rule 126)
	typeAnnotation -> ':' . instance identifier ':' typeExpr    (rule 127)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	instance       shift, and enter state 186
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 185

State 107

	dec -> data identifier kindAnnotation . '=' dataExprs    (rule 139)
	dec -> data identifier kindAnnotation . '=' dataExprs where tbindings    (rule 140)

	'='            shift, and enter state 184


State 108

	kindAnnotation -> '::' . kindExpr                   (rule 132)

	id             shift, and enter state 6
	'('            shift, and enter state 14

	identifier     goto state 12
	kindExpr       goto state 183

State 109

	dec -> ty identifier kindAnnotation . '=' typeExpr    (rule 141)
	dec -> ty identifier kindAnnotation . '=' typeExpr where tbindings    (rule 142)

	'='            shift, and enter state 182


State 110

	kindExpr -> kindExpr . '->' kindExpr                (rule 128)
	kindExpr -> kindExpr '->' kindExpr .                (rule 128)

	')'            reduce using rule 128
	'->'           reduce using rule 128
	'='            reduce using rule 128
	%eof           reduce using rule 128


State 111

	kindExpr -> '(' kindExpr ')' .                      (rule 129)

	')'            reduce using rule 129
	'->'           reduce using rule 129
	'='            reduce using rule 129
	%eof           reduce using rule 129


State 112

	tagged -> identifier ':' typeExpr .                 (rule 115)
	typeExpr -> typeExpr . '->' typeExpr                (rule 121)

	let            reduce using rule 115
	where          reduce using rule 115
	data           reduce using rule 115
	ty             reduce using rule 115
	')'            reduce using rule 115
	'}'            reduce using rule 115
	','            reduce using rule 115
	'->'           shift, and enter state 96
	'='            reduce using rule 115
	'|'            reduce using rule 115
	'::'           reduce using rule 115
	%eof           reduce using rule 115


State 113

	typeAtom -> identifier .                            (rule 105)

	id             reduce using rule 105
	number         reduce using rule 105
	string         reduce using rule 105
	boolean        reduce using rule 105
	'!'            reduce using rule 105
	'('            reduce using rule 105
	'{'            reduce using rule 105


State 114

	typeArgs -> typeArgs typeAtom .                     (rule 108)

	id             reduce using rule 108
	number         reduce using rule 108
	string         reduce using rule 108
	boolean        reduce using rule 108
	'!'            reduce using rule 108
	'('            reduce using rule 108
	'{'            reduce using rule 108


State 115

	typeExpr -> typeAtom typeArgs '!' .                 (rule 123)

	let            reduce using rule 123
	where          reduce using rule 123
	data           reduce using rule 123
	ty             reduce using rule 123
	')'            reduce using rule 123
	'}'            reduce using rule 123
	','            reduce using rule 123
	'->'           reduce using rule 123
	'='            reduce using rule 123
	'|'            reduce using rule 123
	'::'           reduce using rule 123
	%eof           reduce using rule 123


State 116

	union -> union '|' typeExpr .                       (rule 117)
	typeExpr -> typeExpr . '->' typeExpr                (rule 121)

	let            reduce using rule 117
	where          reduce using rule 117
	data           reduce using rule 117
	ty             reduce using rule 117
	')'            reduce using rule 117
	'}'            reduce using rule 117
	','            reduce using rule 117
	'->'           shift, and enter state 96
	'='            reduce using rule 117
	'|'            reduce using rule 117
	'::'           reduce using rule 117
	%eof           reduce using rule 117


State 117

	typeExpr -> typeExpr . '->' typeExpr                (rule 121)
	typeExpr -> typeExpr '->' typeExpr .                (rule 121)

	let            reduce using rule 121
	where          reduce using rule 121
	data           reduce using rule 121
	ty             reduce using rule 121
	')'            reduce using rule 121
	'}'            reduce using rule 121
	','            reduce using rule 121
	'->'           shift, and enter state 96
	'='            reduce using rule 121
	'|'            reduce using rule 121
	'::'           reduce using rule 121
	%eof           reduce using rule 121


State 118

	ttuple -> '(' typeExpr ttupleElems . ')'            (rule 98)

	')'            shift, and enter state 181


State 119

	typeAtom -> '(' typeExpr ')' .                      (rule 106)

	id             reduce using rule 106
	number         reduce using rule 106
	string         reduce using rule 106
	boolean        reduce using rule 106
	'!'            reduce using rule 106
	let            reduce using rule 106
	where          reduce using rule 106
	data           reduce using rule 106
	ty             reduce using rule 106
	'('            reduce using rule 106
	')'            reduce using rule 106
	'{'            reduce using rule 106
	'}'            reduce using rule 106
	','            reduce using rule 106
	'->'           reduce using rule 106
	'='            reduce using rule 106
	'|'            reduce using rule 106
	'::'           reduce using rule 106
	%eof           reduce using rule 106


State 120

	ttupleElems -> ',' . typeExpr                       (rule 96)
	ttupleElems -> ',' . typeExpr ttupleElems           (rule 97)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 180

State 121

	trecord -> '{' tpairs '}' .                         (rule 95)

	id             reduce using rule 95
	number         reduce using rule 95
	string         reduce using rule 95
	boolean        reduce using rule 95
	'!'            reduce using rule 95
	let            reduce using rule 95
	where          reduce using rule 95
	data           reduce using rule 95
	ty             reduce using rule 95
	'('            reduce using rule 95
	')'            reduce using rule 95
	'{'            reduce using rule 95
	'}'            reduce using rule 95
	','            reduce using rule 95
	'->'           reduce using rule 95
	'='            reduce using rule 95
	'|'            reduce using rule 95
	'::'           reduce using rule 95
	%eof           reduce using rule 95


State 122

	tpairs -> identifier ':' . typeExpr ',' tpairs      (rule 93)
	tpairs -> identifier ':' . typeExpr                 (rule 94)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 179

State 123

	params -> params identifier .                       (rule 18)

	id             reduce using rule 18
	'->'           reduce using rule 18
	'=>'           reduce using rule 18


State 124

	typeExpr -> '\\' params '=>' . typeExpr             (rule 122)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 178

State 125

	args -> args atom .                                 (rule 20)

	id             reduce using rule 20
	number         reduce using rule 20
	string         reduce using rule 20
	boolean        reduce using rule 20
	'!'            reduce using rule 20
	'('            reduce using rule 20
	'['            reduce using rule 20
	'{'            reduce using rule 20


State 126

	fnApplication -> atom args '!' .                    (rule 21)

	id             reduce using rule 21
	number         reduce using rule 21
	string         reduce using rule 21
	boolean        reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'^'            reduce using rule 21
	'++'           reduce using rule 21
	'=='           reduce using rule 21
	'!='           reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'||'           reduce using rule 21
	'&&'           reduce using rule 21
	'|>'           reduce using rule 21
	'<|'           reduce using rule 21
	let            reduce using rule 21
	where          reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	return         reduce using rule 21
	data           reduce using rule 21
	ty             reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	','            reduce using rule 21
	'|'            reduce using rule 21
	'.'            reduce using rule 21
	%eof           reduce using rule 21


State 127

	expr -> expr '.' identifier .                       (rule 64)

	id             reduce using rule 64
	number         reduce using rule 64
	string         reduce using rule 64
	boolean        reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	'^'            reduce using rule 64
	'++'           reduce using rule 64
	'=='           reduce using rule 64
	'!='           reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'||'           reduce using rule 64
	'&&'           reduce using rule 64
	'|>'           reduce using rule 64
	'<|'           reduce using rule 64
	let            reduce using rule 64
	where          reduce using rule 64
	then           reduce using rule 64
	else           reduce using rule 64
	return         reduce using rule 64
	data           reduce using rule 64
	ty             reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	'{'            reduce using rule 64
	'}'            reduce using rule 64
	','            reduce using rule 64
	'|'            reduce using rule 64
	'.'            reduce using rule 64
	%eof           reduce using rule 64


State 128

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr '<|' expr .                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 79
	number         reduce using rule 79
	string         reduce using rule 79
	boolean        reduce using rule 79
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 79
	where          reduce using rule 79
	then           reduce using rule 79
	else           reduce using rule 79
	return         reduce using rule 79
	data           reduce using rule 79
	ty             reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'['            reduce using rule 79
	']'            reduce using rule 79
	'{'            reduce using rule 79
	'}'            reduce using rule 79
	','            reduce using rule 79
	'|'            reduce using rule 79
	'.'            reduce using rule 79
	%eof           reduce using rule 79


State 129

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr '|>' expr .                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 78
	number         reduce using rule 78
	string         reduce using rule 78
	boolean        reduce using rule 78
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 78
	where          reduce using rule 78
	then           reduce using rule 78
	else           reduce using rule 78
	return         reduce using rule 78
	data           reduce using rule 78
	ty             reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	'['            reduce using rule 78
	']'            reduce using rule 78
	'{'            reduce using rule 78
	'}'            reduce using rule 78
	','            reduce using rule 78
	'|'            reduce using rule 78
	'.'            reduce using rule 78
	%eof           reduce using rule 78


State 130

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr '&&' expr .                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 71
	number         reduce using rule 71
	string         reduce using rule 71
	boolean        reduce using rule 71
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 71
	where          reduce using rule 71
	then           reduce using rule 71
	else           reduce using rule 71
	return         reduce using rule 71
	data           reduce using rule 71
	ty             reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	'['            reduce using rule 71
	']'            reduce using rule 71
	'{'            reduce using rule 71
	'}'            reduce using rule 71
	','            reduce using rule 71
	'|'            reduce using rule 71
	'.'            reduce using rule 71
	%eof           reduce using rule 71


State 131

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr '||' expr .                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 70
	number         reduce using rule 70
	string         reduce using rule 70
	boolean        reduce using rule 70
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 70
	where          reduce using rule 70
	then           reduce using rule 70
	else           reduce using rule 70
	return         reduce using rule 70
	data           reduce using rule 70
	ty             reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	'['            reduce using rule 70
	']'            reduce using rule 70
	'{'            reduce using rule 70
	'}'            reduce using rule 70
	','            reduce using rule 70
	'|'            reduce using rule 70
	'.'            reduce using rule 70
	%eof           reduce using rule 70


State 132

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr '>=' expr .                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 77
	number         reduce using rule 77
	string         reduce using rule 77
	boolean        reduce using rule 77
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 77
	where          reduce using rule 77
	then           reduce using rule 77
	else           reduce using rule 77
	return         reduce using rule 77
	data           reduce using rule 77
	ty             reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	'['            reduce using rule 77
	']'            reduce using rule 77
	'{'            reduce using rule 77
	'}'            reduce using rule 77
	','            reduce using rule 77
	'|'            reduce using rule 77
	'.'            reduce using rule 77
	%eof           reduce using rule 77


State 133

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr '>' expr .                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 75
	number         reduce using rule 75
	string         reduce using rule 75
	boolean        reduce using rule 75
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 75
	where          reduce using rule 75
	then           reduce using rule 75
	else           reduce using rule 75
	return         reduce using rule 75
	data           reduce using rule 75
	ty             reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	'['            reduce using rule 75
	']'            reduce using rule 75
	'{'            reduce using rule 75
	'}'            reduce using rule 75
	','            reduce using rule 75
	'|'            reduce using rule 75
	'.'            reduce using rule 75
	%eof           reduce using rule 75


State 134

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr '<=' expr .                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 76
	number         reduce using rule 76
	string         reduce using rule 76
	boolean        reduce using rule 76
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 76
	where          reduce using rule 76
	then           reduce using rule 76
	else           reduce using rule 76
	return         reduce using rule 76
	data           reduce using rule 76
	ty             reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	'['            reduce using rule 76
	']'            reduce using rule 76
	'{'            reduce using rule 76
	'}'            reduce using rule 76
	','            reduce using rule 76
	'|'            reduce using rule 76
	'.'            reduce using rule 76
	%eof           reduce using rule 76


State 135

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr '<' expr .                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 74
	number         reduce using rule 74
	string         reduce using rule 74
	boolean        reduce using rule 74
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 74
	where          reduce using rule 74
	then           reduce using rule 74
	else           reduce using rule 74
	return         reduce using rule 74
	data           reduce using rule 74
	ty             reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	'['            reduce using rule 74
	']'            reduce using rule 74
	'{'            reduce using rule 74
	'}'            reduce using rule 74
	','            reduce using rule 74
	'|'            reduce using rule 74
	'.'            reduce using rule 74
	%eof           reduce using rule 74


State 136

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr '!=' expr .                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 73
	number         reduce using rule 73
	string         reduce using rule 73
	boolean        reduce using rule 73
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 73
	where          reduce using rule 73
	then           reduce using rule 73
	else           reduce using rule 73
	return         reduce using rule 73
	data           reduce using rule 73
	ty             reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	'['            reduce using rule 73
	']'            reduce using rule 73
	'{'            reduce using rule 73
	'}'            reduce using rule 73
	','            reduce using rule 73
	'|'            reduce using rule 73
	'.'            reduce using rule 73
	%eof           reduce using rule 73


State 137

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr '==' expr .                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 72
	number         reduce using rule 72
	string         reduce using rule 72
	boolean        reduce using rule 72
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           fail
	'!='           fail
	'<'            fail
	'<='           fail
	'>'            fail
	'>='           fail
	'||'           fail
	'&&'           fail
	'|>'           fail
	'<|'           fail
	let            reduce using rule 72
	where          reduce using rule 72
	then           reduce using rule 72
	else           reduce using rule 72
	return         reduce using rule 72
	data           reduce using rule 72
	ty             reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	'['            reduce using rule 72
	']'            reduce using rule 72
	'{'            reduce using rule 72
	'}'            reduce using rule 72
	','            reduce using rule 72
	'|'            reduce using rule 72
	'.'            reduce using rule 72
	%eof           reduce using rule 72


State 138

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)
	expr -> expr '++' expr .                            (rule 80)

	id             reduce using rule 80
	number         reduce using rule 80
	string         reduce using rule 80
	boolean        reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           reduce using rule 80
	'=='           reduce using rule 80
	'!='           reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'||'           reduce using rule 80
	'&&'           reduce using rule 80
	'|>'           reduce using rule 80
	'<|'           reduce using rule 80
	let            reduce using rule 80
	where          reduce using rule 80
	then           reduce using rule 80
	else           reduce using rule 80
	return         reduce using rule 80
	data           reduce using rule 80
	ty             reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	'['            reduce using rule 80
	']'            reduce using rule 80
	'{'            reduce using rule 80
	'}'            reduce using rule 80
	','            reduce using rule 80
	'|'            reduce using rule 80
	'.'            reduce using rule 80
	%eof           reduce using rule 80


State 139

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr '^' expr .                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 69
	number         reduce using rule 69
	string         reduce using rule 69
	boolean        reduce using rule 69
	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'/'            reduce using rule 69
	'^'            reduce using rule 69
	'++'           reduce using rule 69
	'=='           reduce using rule 69
	'!='           reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'||'           reduce using rule 69
	'&&'           reduce using rule 69
	'|>'           reduce using rule 69
	'<|'           reduce using rule 69
	let            reduce using rule 69
	where          reduce using rule 69
	then           reduce using rule 69
	else           reduce using rule 69
	return         reduce using rule 69
	data           reduce using rule 69
	ty             reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	'['            reduce using rule 69
	']'            reduce using rule 69
	'{'            reduce using rule 69
	'}'            reduce using rule 69
	','            reduce using rule 69
	'|'            reduce using rule 69
	'.'            reduce using rule 69
	%eof           reduce using rule 69


State 140

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr '/' expr .                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 68
	number         reduce using rule 68
	string         reduce using rule 68
	boolean        reduce using rule 68
	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'/'            reduce using rule 68
	'^'            shift, and enter state 77
	'++'           reduce using rule 68
	'=='           reduce using rule 68
	'!='           reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'||'           reduce using rule 68
	'&&'           reduce using rule 68
	'|>'           reduce using rule 68
	'<|'           reduce using rule 68
	let            reduce using rule 68
	where          reduce using rule 68
	then           reduce using rule 68
	else           reduce using rule 68
	return         reduce using rule 68
	data           reduce using rule 68
	ty             reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	'['            reduce using rule 68
	']'            reduce using rule 68
	'{'            reduce using rule 68
	'}'            reduce using rule 68
	','            reduce using rule 68
	'|'            reduce using rule 68
	'.'            reduce using rule 68
	%eof           reduce using rule 68


State 141

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr '*' expr .                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 67
	number         reduce using rule 67
	string         reduce using rule 67
	boolean        reduce using rule 67
	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	'^'            shift, and enter state 77
	'++'           reduce using rule 67
	'=='           reduce using rule 67
	'!='           reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'||'           reduce using rule 67
	'&&'           reduce using rule 67
	'|>'           reduce using rule 67
	'<|'           reduce using rule 67
	let            reduce using rule 67
	where          reduce using rule 67
	then           reduce using rule 67
	else           reduce using rule 67
	return         reduce using rule 67
	data           reduce using rule 67
	ty             reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	'{'            reduce using rule 67
	'}'            reduce using rule 67
	','            reduce using rule 67
	'|'            reduce using rule 67
	'.'            reduce using rule 67
	%eof           reduce using rule 67


State 142

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr '-' expr .                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 66
	number         reduce using rule 66
	string         reduce using rule 66
	boolean        reduce using rule 66
	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           reduce using rule 66
	'=='           reduce using rule 66
	'!='           reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'||'           reduce using rule 66
	'&&'           reduce using rule 66
	'|>'           reduce using rule 66
	'<|'           reduce using rule 66
	let            reduce using rule 66
	where          reduce using rule 66
	then           reduce using rule 66
	else           reduce using rule 66
	return         reduce using rule 66
	data           reduce using rule 66
	ty             reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	'{'            reduce using rule 66
	'}'            reduce using rule 66
	','            reduce using rule 66
	'|'            reduce using rule 66
	'.'            reduce using rule 66
	%eof           reduce using rule 66


State 143

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr '+' expr .                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 65
	number         reduce using rule 65
	string         reduce using rule 65
	boolean        reduce using rule 65
	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           reduce using rule 65
	'=='           reduce using rule 65
	'!='           reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'||'           reduce using rule 65
	'&&'           reduce using rule 65
	'|>'           reduce using rule 65
	'<|'           reduce using rule 65
	let            reduce using rule 65
	where          reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	return         reduce using rule 65
	data           reduce using rule 65
	ty             reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	'{'            reduce using rule 65
	'}'            reduce using rule 65
	','            reduce using rule 65
	'|'            reduce using rule 65
	'.'            reduce using rule 65
	%eof           reduce using rule 65


State 144

	controlFlow -> if expr then . expr else expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 177

State 145

	cases -> cases . '|' pattern '->' expr              (rule 53)
	matchExpr -> match expr cases .                     (rule 54)

	id             reduce using rule 54
	number         reduce using rule 54
	string         reduce using rule 54
	boolean        reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'^'            reduce using rule 54
	'++'           reduce using rule 54
	'=='           reduce using rule 54
	'!='           reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54
	'&&'           reduce using rule 54
	'|>'           reduce using rule 54
	'<|'           reduce using rule 54
	let            reduce using rule 54
	where          reduce using rule 54
	then           reduce using rule 54
	else           reduce using rule 54
	return         reduce using rule 54
	data           reduce using rule 54
	ty             reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	','            reduce using rule 54
	'|'            shift, and enter state 176
	'.'            reduce using rule 54
	%eof           reduce using rule 54


State 146

	cases -> '|' . pattern '->' expr                    (rule 52)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	'('            shift, and enter state 173
	'['            shift, and enter state 174
	'{'            shift, and enter state 175

	identifier     goto state 169
	patData        goto state 170
	pattern        goto state 171
	term           goto state 172

State 147

	tuple -> '(' expr tupleElems . ')'                  (rule 16)

	')'            shift, and enter state 168


State 148

	atom -> '(' expr ')' .                              (rule 51)

	id             reduce using rule 51
	number         reduce using rule 51
	string         reduce using rule 51
	boolean        reduce using rule 51
	'!'            reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'^'            reduce using rule 51
	'++'           reduce using rule 51
	'=='           reduce using rule 51
	'!='           reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51
	'&&'           reduce using rule 51
	'|>'           reduce using rule 51
	'<|'           reduce using rule 51
	let            reduce using rule 51
	where          reduce using rule 51
	then           reduce using rule 51
	else           reduce using rule 51
	return         reduce using rule 51
	data           reduce using rule 51
	ty             reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51
	','            reduce using rule 51
	'|'            reduce using rule 51
	'.'            reduce using rule 51
	%eof           reduce using rule 51


State 149

	tupleElems -> ',' . expr                            (rule 14)
	tupleElems -> ',' . expr tupleElems                 (rule 15)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 167

State 150

	listElements -> expr ',' . listElements             (rule 12)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	']'            reduce using rule 10
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	listElements   goto state 166
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 69

State 151

	list -> '[' listElements ']' .                      (rule 13)

	id             reduce using rule 13
	number         reduce using rule 13
	string         reduce using rule 13
	boolean        reduce using rule 13
	'!'            reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            reduce using rule 13
	'/'            reduce using rule 13
	'^'            reduce using rule 13
	'++'           reduce using rule 13
	'=='           reduce using rule 13
	'!='           reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	'||'           reduce using rule 13
	'&&'           reduce using rule 13
	'|>'           reduce using rule 13
	'<|'           reduce using rule 13
	let            reduce using rule 13
	where          reduce using rule 13
	then           reduce using rule 13
	else           reduce using rule 13
	return         reduce using rule 13
	data           reduce using rule 13
	ty             reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'['            reduce using rule 13
	']'            reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	','            reduce using rule 13
	'|'            reduce using rule 13
	'.'            reduce using rule 13
	%eof           reduce using rule 13


State 152

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)
	returnStmt -> return expr .                         (rule 89)

	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	'}'            reduce using rule 89
	'.'            shift, and enter state 89


State 153

	letdec -> let identifier . typeAnnotation kindAnnotation '=' expr    (rule 136)

	':'            shift, and enter state 106
	'='            reduce using rule 124
	'::'           reduce using rule 124

	typeAnnotation goto state 165

State 154

	atom -> '{' block '}' .                             (rule 50)

	id             reduce using rule 50
	number         reduce using rule 50
	string         reduce using rule 50
	boolean        reduce using rule 50
	'!'            reduce using rule 50
	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'^'            reduce using rule 50
	'++'           reduce using rule 50
	'=='           reduce using rule 50
	'!='           reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50
	'&&'           reduce using rule 50
	'|>'           reduce using rule 50
	'<|'           reduce using rule 50
	let            reduce using rule 50
	where          reduce using rule 50
	then           reduce using rule 50
	else           reduce using rule 50
	return         reduce using rule 50
	data           reduce using rule 50
	ty             reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'{'            reduce using rule 50
	'}'            reduce using rule 50
	','            reduce using rule 50
	'|'            reduce using rule 50
	'.'            reduce using rule 50
	%eof           reduce using rule 50


State 155

	atom -> identifier .                                (rule 45)
	backcall -> identifier . '<-' expr                  (rule 83)

	id             reduce using rule 45
	number         reduce using rule 45
	string         reduce using rule 45
	boolean        reduce using rule 45
	'!'            reduce using rule 45
	'('            reduce using rule 45
	'['            reduce using rule 45
	'{'            reduce using rule 45
	'<-'           shift, and enter state 160


State 156

	stmts -> stmts statement .                          (rule 88)

	id             reduce using rule 88
	number         reduce using rule 88
	string         reduce using rule 88
	boolean        reduce using rule 88
	let            reduce using rule 88
	return         reduce using rule 88
	'('            reduce using rule 88
	'['            reduce using rule 88
	'{'            reduce using rule 88


State 157

	block -> stmts returnStmt .                         (rule 91)

	'}'            reduce using rule 91


State 158

	record -> '{' pairs '}' .                           (rule 9)

	id             reduce using rule 9
	number         reduce using rule 9
	string         reduce using rule 9
	boolean        reduce using rule 9
	'!'            reduce using rule 9
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'*'            reduce using rule 9
	'/'            reduce using rule 9
	'^'            reduce using rule 9
	'++'           reduce using rule 9
	'=='           reduce using rule 9
	'!='           reduce using rule 9
	'<'            reduce using rule 9
	'<='           reduce using rule 9
	'>'            reduce using rule 9
	'>='           reduce using rule 9
	'||'           reduce using rule 9
	'&&'           reduce using rule 9
	'|>'           reduce using rule 9
	'<|'           reduce using rule 9
	let            reduce using rule 9
	where          reduce using rule 9
	then           reduce using rule 9
	else           reduce using rule 9
	return         reduce using rule 9
	data           reduce using rule 9
	ty             reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'['            reduce using rule 9
	']'            reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	','            reduce using rule 9
	'|'            reduce using rule 9
	'.'            reduce using rule 9
	%eof           reduce using rule 9


State 159

	pairs -> identifier ':' . expr ',' pairs            (rule 7)
	pairs -> identifier ':' . expr                      (rule 8)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 164

State 160

	backcall -> identifier '<-' . expr                  (rule 83)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 163

State 161

	expr -> '\\' params '->' . expr                     (rule 61)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 162

State 162

	expr -> '\\' params '->' expr .                     (rule 61)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 61
	number         reduce using rule 61
	string         reduce using rule 61
	boolean        reduce using rule 61
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	let            reduce using rule 61
	where          reduce using rule 61
	then           reduce using rule 61
	else           reduce using rule 61
	return         reduce using rule 61
	data           reduce using rule 61
	ty             reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'{'            reduce using rule 61
	'}'            reduce using rule 61
	','            reduce using rule 61
	'|'            reduce using rule 61
	'.'            shift, and enter state 89
	%eof           reduce using rule 61


State 163

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)
	backcall -> identifier '<-' expr .                  (rule 83)

	id             reduce using rule 83
	number         reduce using rule 83
	string         reduce using rule 83
	boolean        reduce using rule 83
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	let            reduce using rule 83
	return         reduce using rule 83
	'('            reduce using rule 83
	'['            reduce using rule 83
	'{'            reduce using rule 83
	'.'            shift, and enter state 89


State 164

	pairs -> identifier ':' expr . ',' pairs            (rule 7)
	pairs -> identifier ':' expr .                      (rule 8)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	'}'            reduce using rule 8
	','            shift, and enter state 211
	'.'            shift, and enter state 89


State 165

	letdec -> let identifier typeAnnotation . kindAnnotation '=' expr    (rule 136)

	'='            reduce using rule 131
	'::'           shift, and enter state 108

	kindAnnotation goto state 210

State 166

	listElements -> expr ',' listElements .             (rule 12)

	']'            reduce using rule 12


State 167

	tupleElems -> ',' expr .                            (rule 14)
	tupleElems -> ',' expr . tupleElems                 (rule 15)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	')'            reduce using rule 14
	','            shift, and enter state 149
	'.'            shift, and enter state 89

	tupleElems     goto state 209

State 168

	tuple -> '(' expr tupleElems ')' .                  (rule 16)

	id             reduce using rule 16
	number         reduce using rule 16
	string         reduce using rule 16
	boolean        reduce using rule 16
	'!'            reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            reduce using rule 16
	'/'            reduce using rule 16
	'^'            reduce using rule 16
	'++'           reduce using rule 16
	'=='           reduce using rule 16
	'!='           reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'||'           reduce using rule 16
	'&&'           reduce using rule 16
	'|>'           reduce using rule 16
	'<|'           reduce using rule 16
	let            reduce using rule 16
	where          reduce using rule 16
	then           reduce using rule 16
	else           reduce using rule 16
	return         reduce using rule 16
	data           reduce using rule 16
	ty             reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	','            reduce using rule 16
	'|'            reduce using rule 16
	'.'            reduce using rule 16
	%eof           reduce using rule 16


State 169

	patData -> identifier . ':'                         (rule 32)
	pattern -> identifier .                             (rule 34)

	':'            shift, and enter state 208
	'->'           reduce using rule 34


State 170

	patData -> patData . identifier                     (rule 33)
	pattern -> patData .                                (rule 36)

	id             shift, and enter state 6
	')'            reduce using rule 36
	'->'           reduce using rule 36

	identifier     goto state 207

State 171

	cases -> '|' pattern . '->' expr                    (rule 52)

	'->'           shift, and enter state 206


State 172

	pattern -> term .                                   (rule 35)

	')'            reduce using rule 35
	'->'           reduce using rule 35


State 173

	pattern -> '(' . identifier patTupleElems ')'       (rule 37)
	pattern -> '(' . pattern ')'                        (rule 41)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	'('            shift, and enter state 173
	'['            shift, and enter state 174
	'{'            shift, and enter state 175

	identifier     goto state 204
	patData        goto state 170
	pattern        goto state 205
	term           goto state 172

State 174

	pattern -> '[' . ']'                                (rule 38)
	pattern -> '[' . patListElems patRest ']'           (rule 39)

	id             shift, and enter state 6
	']'            shift, and enter state 203

	identifier     goto state 201
	patListElems   goto state 202

State 175

	pattern -> '{' . patRecordKeys patRest '}'          (rule 40)

	id             shift, and enter state 6
	'}'            reduce using rule 27
	'|'            reduce using rule 27

	identifier     goto state 199
	patRecordKeys  goto state 200

State 176

	cases -> cases '|' . pattern '->' expr              (rule 53)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	'('            shift, and enter state 173
	'['            shift, and enter state 174
	'{'            shift, and enter state 175

	identifier     goto state 169
	patData        goto state 170
	pattern        goto state 198
	term           goto state 172

State 177

	controlFlow -> if expr then expr . else expr        (rule 22)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	else           shift, and enter state 197
	'.'            shift, and enter state 89


State 178

	typeExpr -> typeExpr . '->' typeExpr                (rule 121)
	typeExpr -> '\\' params '=>' typeExpr .             (rule 122)

	let            reduce using rule 122
	where          reduce using rule 122
	data           reduce using rule 122
	ty             reduce using rule 122
	')'            reduce using rule 122
	'}'            reduce using rule 122
	','            reduce using rule 122
	'->'           shift, and enter state 96
	'='            reduce using rule 122
	'|'            reduce using rule 122
	'::'           reduce using rule 122
	%eof           reduce using rule 122


State 179

	tpairs -> identifier ':' typeExpr . ',' tpairs      (rule 93)
	tpairs -> identifier ':' typeExpr .                 (rule 94)
	typeExpr -> typeExpr . '->' typeExpr                (rule 121)

	'}'            reduce using rule 94
	','            shift, and enter state 196
	'->'           shift, and enter state 96


State 180

	ttupleElems -> ',' typeExpr .                       (rule 96)
	ttupleElems -> ',' typeExpr . ttupleElems           (rule 97)
	typeExpr -> typeExpr . '->' typeExpr                (rule 121)

	')'            reduce using rule 96
	','            shift, and enter state 120
	'->'           shift, and enter state 96

	ttupleElems    goto state 195

State 181

	ttuple -> '(' typeExpr ttupleElems ')' .            (rule 98)

	id             reduce using rule 98
	number         reduce using rule 98
	string         reduce using rule 98
	boolean        reduce using rule 98
	'!'            reduce using rule 98
	let            reduce using rule 98
	where          reduce using rule 98
	data           reduce using rule 98
	ty             reduce using rule 98
	'('            reduce using rule 98
	')'            reduce using rule 98
	'{'            reduce using rule 98
	'}'            reduce using rule 98
	','            reduce using rule 98
	'->'           reduce using rule 98
	'='            reduce using rule 98
	'|'            reduce using rule 98
	'::'           reduce using rule 98
	%eof           reduce using rule 98


State 182

	dec -> ty identifier kindAnnotation '=' . typeExpr    (rule 141)
	dec -> ty identifier kindAnnotation '=' . typeExpr where tbindings    (rule 142)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 194

State 183

	kindExpr -> kindExpr . '->' kindExpr                (rule 128)
	kindAnnotation -> '::' kindExpr .                   (rule 132)

	'->'           shift, and enter state 101
	'='            reduce using rule 132


State 184

	dec -> data identifier kindAnnotation '=' . dataExprs    (rule 139)
	dec -> data identifier kindAnnotation '=' . dataExprs where tbindings    (rule 140)

	id             shift, and enter state 6

	identifier     goto state 191
	dataExpr       goto state 192
	dataExprs      goto state 193

State 185

	typeExpr -> typeExpr . '->' typeExpr                (rule 121)
	typeAnnotation -> ':' typeExpr .                    (rule 125)
	typeAnnotation -> ':' typeExpr . where tbindings    (rule 126)

	where          shift, and enter state 190
	'->'           shift, and enter state 96
	'='            reduce using rule 125
	'::'           reduce using rule 125


State 186

	typeAnnotation -> ':' instance . identifier ':' typeExpr    (rule 127)

	id             shift, and enter state 6

	identifier     goto state 189

State 187

	letdec -> let identifier typeAnnotation kindAnnotation . '=' expr    (rule 136)
	dec -> let identifier typeAnnotation kindAnnotation . '=' expr where bindings    (rule 138)

	'='            shift, and enter state 188


State 188

	letdec -> let identifier typeAnnotation kindAnnotation '=' . expr    (rule 136)
	dec -> let identifier typeAnnotation kindAnnotation '=' . expr where bindings    (rule 138)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 235

State 189

	typeAnnotation -> ':' instance identifier . ':' typeExpr    (rule 127)

	':'            shift, and enter state 234


State 190

	typeAnnotation -> ':' typeExpr where . tbindings    (rule 126)

	id             shift, and enter state 6

	identifier     goto state 231
	tbinding       goto state 232
	tbindings      goto state 233

State 191

	dataExpr -> identifier . ':' typeExpr               (rule 133)

	':'            shift, and enter state 230


State 192

	dataExprs -> dataExpr .                             (rule 134)

	let            reduce using rule 134
	where          reduce using rule 134
	data           reduce using rule 134
	ty             reduce using rule 134
	'|'            reduce using rule 134
	%eof           reduce using rule 134


State 193

	dataExprs -> dataExprs . '|' dataExpr               (rule 135)
	dec -> data identifier kindAnnotation '=' dataExprs .    (rule 139)
	dec -> data identifier kindAnnotation '=' dataExprs . where tbindings    (rule 140)

	let            reduce using rule 139
	where          shift, and enter state 228
	data           reduce using rule 139
	ty             reduce using rule 139
	'|'            shift, and enter state 229
	%eof           reduce using rule 139


State 194

	typeExpr -> typeExpr . '->' typeExpr                (rule 121)
	dec -> ty identifier kindAnnotation '=' typeExpr .    (rule 141)
	dec -> ty identifier kindAnnotation '=' typeExpr . where tbindings    (rule 142)

	let            reduce using rule 141
	where          shift, and enter state 227
	data           reduce using rule 141
	ty             reduce using rule 141
	'->'           shift, and enter state 96
	%eof           reduce using rule 141


State 195

	ttupleElems -> ',' typeExpr ttupleElems .           (rule 97)

	')'            reduce using rule 97


State 196

	tpairs -> identifier ':' typeExpr ',' . tpairs      (rule 93)

	id             shift, and enter state 6
	'}'            reduce using rule 92

	identifier     goto state 93
	tpairs         goto state 226

State 197

	controlFlow -> if expr then expr else . expr        (rule 22)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 225

State 198

	cases -> cases '|' pattern . '->' expr              (rule 53)

	'->'           shift, and enter state 224


State 199

	patRecordKeys -> identifier .                       (rule 28)
	patRecordKeys -> identifier . ',' patRecordKeys     (rule 29)

	'}'            reduce using rule 28
	','            shift, and enter state 223
	'|'            reduce using rule 28


State 200

	pattern -> '{' patRecordKeys . patRest '}'          (rule 40)

	'}'            reduce using rule 30
	'|'            shift, and enter state 220

	patRest        goto state 222

State 201

	patListElems -> identifier .                        (rule 23)
	patListElems -> identifier . ',' patListElems       (rule 24)

	']'            reduce using rule 23
	','            shift, and enter state 221
	'|'            reduce using rule 23


State 202

	pattern -> '[' patListElems . patRest ']'           (rule 39)

	']'            reduce using rule 30
	'|'            shift, and enter state 220

	patRest        goto state 219

State 203

	pattern -> '[' ']' .                                (rule 38)

	')'            reduce using rule 38
	'->'           reduce using rule 38


State 204

	patData -> identifier . ':'                         (rule 32)
	pattern -> identifier .                             (rule 34)
	pattern -> '(' identifier . patTupleElems ')'       (rule 37)

	')'            reduce using rule 34
	':'            shift, and enter state 208
	','            shift, and enter state 218

	patTupleElems  goto state 217

State 205

	pattern -> '(' pattern . ')'                        (rule 41)

	')'            shift, and enter state 216


State 206

	cases -> '|' pattern '->' . expr                    (rule 52)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 215

State 207

	patData -> patData identifier .                     (rule 33)

	id             reduce using rule 33
	')'            reduce using rule 33
	'->'           reduce using rule 33


State 208

	patData -> identifier ':' .                         (rule 32)

	id             reduce using rule 32
	')'            reduce using rule 32
	'->'           reduce using rule 32


State 209

	tupleElems -> ',' expr tupleElems .                 (rule 15)

	')'            reduce using rule 15


State 210

	letdec -> let identifier typeAnnotation kindAnnotation . '=' expr    (rule 136)

	'='            shift, and enter state 214


State 211

	pairs -> identifier ':' expr ',' . pairs            (rule 7)

	id             shift, and enter state 6
	'}'            reduce using rule 6

	identifier     goto state 212
	pairs          goto state 213

State 212

	pairs -> identifier . ':' expr ',' pairs            (rule 7)
	pairs -> identifier . ':' expr                      (rule 8)

	':'            shift, and enter state 159


State 213

	pairs -> identifier ':' expr ',' pairs .            (rule 7)

	'}'            reduce using rule 7


State 214

	letdec -> let identifier typeAnnotation kindAnnotation '=' . expr    (rule 136)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 255

State 215

	cases -> '|' pattern '->' expr .                    (rule 52)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 52
	number         reduce using rule 52
	string         reduce using rule 52
	boolean        reduce using rule 52
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	let            reduce using rule 52
	where          reduce using rule 52
	then           reduce using rule 52
	else           reduce using rule 52
	return         reduce using rule 52
	data           reduce using rule 52
	ty             reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	','            reduce using rule 52
	'|'            reduce using rule 52
	'.'            shift, and enter state 89
	%eof           reduce using rule 52


State 216

	pattern -> '(' pattern ')' .                        (rule 41)

	')'            reduce using rule 41
	'->'           reduce using rule 41


State 217

	pattern -> '(' identifier patTupleElems . ')'       (rule 37)

	')'            shift, and enter state 254


State 218

	patTupleElems -> ',' . identifier                   (rule 25)
	patTupleElems -> ',' . identifier patTupleElems     (rule 26)

	id             shift, and enter state 6

	identifier     goto state 253

State 219

	pattern -> '[' patListElems patRest . ']'           (rule 39)

	']'            shift, and enter state 252


State 220

	patRest -> '|' . identifier                         (rule 31)

	id             shift, and enter state 6

	identifier     goto state 251

State 221

	patListElems -> identifier ',' . patListElems       (rule 24)

	id             shift, and enter state 6

	identifier     goto state 201
	patListElems   goto state 250

State 222

	pattern -> '{' patRecordKeys patRest . '}'          (rule 40)

	'}'            shift, and enter state 249


State 223

	patRecordKeys -> identifier ',' . patRecordKeys     (rule 29)

	id             shift, and enter state 6
	'}'            reduce using rule 27
	'|'            reduce using rule 27

	identifier     goto state 199
	patRecordKeys  goto state 248

State 224

	cases -> cases '|' pattern '->' . expr              (rule 53)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 247

State 225

	controlFlow -> if expr then expr else expr .        (rule 22)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 22
	number         reduce using rule 22
	string         reduce using rule 22
	boolean        reduce using rule 22
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	let            reduce using rule 22
	where          reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	return         reduce using rule 22
	data           reduce using rule 22
	ty             reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'['            reduce using rule 22
	']'            reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	','            reduce using rule 22
	'|'            reduce using rule 22
	'.'            shift, and enter state 89
	%eof           reduce using rule 22


State 226

	tpairs -> identifier ':' typeExpr ',' tpairs .      (rule 93)

	'}'            reduce using rule 93


State 227

	dec -> ty identifier kindAnnotation '=' typeExpr where . tbindings    (rule 142)

	id             shift, and enter state 6

	identifier     goto state 231
	tbinding       goto state 232
	tbindings      goto state 246

State 228

	dec -> data identifier kindAnnotation '=' dataExprs where . tbindings    (rule 140)

	id             shift, and enter state 6

	identifier     goto state 231
	tbinding       goto state 232
	tbindings      goto state 245

State 229

	dataExprs -> dataExprs '|' . dataExpr               (rule 135)

	id             shift, and enter state 6

	identifier     goto state 191
	dataExpr       goto state 244

State 230

	dataExpr -> identifier ':' . typeExpr               (rule 133)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 243

State 231

	tbinding -> identifier . '=' typeExpr               (rule 109)
	tbinding -> identifier . implements typeExpr        (rule 110)
	tbinding -> identifier . '|->' typeExpr             (rule 111)
	tbinding -> identifier . '|' typeExpr               (rule 112)

	implements     shift, and enter state 239
	'|->'          shift, and enter state 240
	'='            shift, and enter state 241
	'|'            shift, and enter state 242


State 232

	tbindings -> tbinding .                             (rule 113)

	let            reduce using rule 113
	data           reduce using rule 113
	ty             reduce using rule 113
	','            reduce using rule 113
	'='            reduce using rule 113
	'::'           reduce using rule 113
	%eof           reduce using rule 113


State 233

	tbindings -> tbindings . ',' tbinding               (rule 114)
	typeAnnotation -> ':' typeExpr where tbindings .    (rule 126)

	','            shift, and enter state 238
	'='            reduce using rule 126
	'::'           reduce using rule 126


State 234

	typeAnnotation -> ':' instance identifier ':' . typeExpr    (rule 127)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 237

State 235

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)
	letdec -> let identifier typeAnnotation kindAnnotation '=' expr .    (rule 136)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr . where bindings    (rule 138)

	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	let            reduce using rule 136
	where          shift, and enter state 236
	data           reduce using rule 136
	ty             reduce using rule 136
	'.'            shift, and enter state 89
	%eof           reduce using rule 136


State 236

	dec -> let identifier typeAnnotation kindAnnotation '=' expr where . bindings    (rule 138)

	id             shift, and enter state 6

	identifier     goto state 262
	binding        goto state 263
	bindings       goto state 264

State 237

	typeExpr -> typeExpr . '->' typeExpr                (rule 121)
	typeAnnotation -> ':' instance identifier ':' typeExpr .    (rule 127)

	'->'           shift, and enter state 96
	'='            reduce using rule 127
	'::'           reduce using rule 127


State 238

	tbindings -> tbindings ',' . tbinding               (rule 114)

	id             shift, and enter state 6

	identifier     goto state 231
	tbinding       goto state 261

State 239

	tbinding -> identifier implements . typeExpr        (rule 110)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 260

State 240

	tbinding -> identifier '|->' . typeExpr             (rule 111)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 259

State 241

	tbinding -> identifier '=' . typeExpr               (rule 109)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 258

State 242

	tbinding -> identifier '|' . typeExpr               (rule 112)

	id             shift, and enter state 6
	number         shift, and enter state 23
	string         shift, and enter state 24
	boolean        shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'|'            shift, and enter state 28
	'\\'           shift, and enter state 29

	identifier     goto state 15
	trecord        goto state 16
	ttuple         goto state 17
	type           goto state 18
	typeAtom       goto state 19
	tagged         goto state 20
	union          goto state 21
	typeExpr       goto state 257

State 243

	typeExpr -> typeExpr . '->' typeExpr                (rule 121)
	dataExpr -> identifier ':' typeExpr .               (rule 133)

	let            reduce using rule 133
	where          reduce using rule 133
	data           reduce using rule 133
	ty             reduce using rule 133
	'->'           shift, and enter state 96
	'|'            reduce using rule 133
	%eof           reduce using rule 133


State 244

	dataExprs -> dataExprs '|' dataExpr .               (rule 135)

	let            reduce using rule 135
	where          reduce using rule 135
	data           reduce using rule 135
	ty             reduce using rule 135
	'|'            reduce using rule 135
	%eof           reduce using rule 135


State 245

	tbindings -> tbindings . ',' tbinding               (rule 114)
	dec -> data identifier kindAnnotation '=' dataExprs where tbindings .    (rule 140)

	let            reduce using rule 140
	data           reduce using rule 140
	ty             reduce using rule 140
	','            shift, and enter state 238
	%eof           reduce using rule 140


State 246

	tbindings -> tbindings . ',' tbinding               (rule 114)
	dec -> ty identifier kindAnnotation '=' typeExpr where tbindings .    (rule 142)

	let            reduce using rule 142
	data           reduce using rule 142
	ty             reduce using rule 142
	','            shift, and enter state 238
	%eof           reduce using rule 142


State 247

	cases -> cases '|' pattern '->' expr .              (rule 53)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	id             reduce using rule 53
	number         reduce using rule 53
	string         reduce using rule 53
	boolean        reduce using rule 53
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	let            reduce using rule 53
	where          reduce using rule 53
	then           reduce using rule 53
	else           reduce using rule 53
	return         reduce using rule 53
	data           reduce using rule 53
	ty             reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'{'            reduce using rule 53
	'}'            reduce using rule 53
	','            reduce using rule 53
	'|'            reduce using rule 53
	'.'            shift, and enter state 89
	%eof           reduce using rule 53


State 248

	patRecordKeys -> identifier ',' patRecordKeys .     (rule 29)

	'}'            reduce using rule 29
	'|'            reduce using rule 29


State 249

	pattern -> '{' patRecordKeys patRest '}' .          (rule 40)

	')'            reduce using rule 40
	'->'           reduce using rule 40


State 250

	patListElems -> identifier ',' patListElems .       (rule 24)

	']'            reduce using rule 24
	'|'            reduce using rule 24


State 251

	patRest -> '|' identifier .                         (rule 31)

	']'            reduce using rule 31
	'}'            reduce using rule 31


State 252

	pattern -> '[' patListElems patRest ']' .           (rule 39)

	')'            reduce using rule 39
	'->'           reduce using rule 39


State 253

	patTupleElems -> ',' identifier .                   (rule 25)
	patTupleElems -> ',' identifier . patTupleElems     (rule 26)

	')'            reduce using rule 25
	','            shift, and enter state 218

	patTupleElems  goto state 256

State 254

	pattern -> '(' identifier patTupleElems ')' .       (rule 37)

	')'            reduce using rule 37
	'->'           reduce using rule 37


State 255

	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)
	letdec -> let identifier typeAnnotation kindAnnotation '=' expr .    (rule 136)

	id             reduce using rule 136
	number         reduce using rule 136
	string         reduce using rule 136
	boolean        reduce using rule 136
	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	let            reduce using rule 136
	return         reduce using rule 136
	'('            reduce using rule 136
	'['            reduce using rule 136
	'{'            reduce using rule 136
	'.'            shift, and enter state 89


State 256

	patTupleElems -> ',' identifier patTupleElems .     (rule 26)

	')'            reduce using rule 26


State 257

	tbinding -> identifier '|' typeExpr .               (rule 112)
	typeExpr -> typeExpr . '->' typeExpr                (rule 121)

	let            reduce using rule 112
	data           reduce using rule 112
	ty             reduce using rule 112
	','            reduce using rule 112
	'->'           shift, and enter state 96
	'='            reduce using rule 112
	'::'           reduce using rule 112
	%eof           reduce using rule 112


State 258

	tbinding -> identifier '=' typeExpr .               (rule 109)
	typeExpr -> typeExpr . '->' typeExpr                (rule 121)

	let            reduce using rule 109
	data           reduce using rule 109
	ty             reduce using rule 109
	','            reduce using rule 109
	'->'           shift, and enter state 96
	'='            reduce using rule 109
	'::'           reduce using rule 109
	%eof           reduce using rule 109


State 259

	tbinding -> identifier '|->' typeExpr .             (rule 111)
	typeExpr -> typeExpr . '->' typeExpr                (rule 121)

	let            reduce using rule 111
	data           reduce using rule 111
	ty             reduce using rule 111
	','            reduce using rule 111
	'->'           shift, and enter state 96
	'='            reduce using rule 111
	'::'           reduce using rule 111
	%eof           reduce using rule 111


State 260

	tbinding -> identifier implements typeExpr .        (rule 110)
	typeExpr -> typeExpr . '->' typeExpr                (rule 121)

	let            reduce using rule 110
	data           reduce using rule 110
	ty             reduce using rule 110
	','            reduce using rule 110
	'->'           shift, and enter state 96
	'='            reduce using rule 110
	'::'           reduce using rule 110
	%eof           reduce using rule 110


State 261

	tbindings -> tbindings ',' tbinding .               (rule 114)

	let            reduce using rule 114
	data           reduce using rule 114
	ty             reduce using rule 114
	','            reduce using rule 114
	'='            reduce using rule 114
	'::'           reduce using rule 114
	%eof           reduce using rule 114


State 262

	binding -> identifier . '=' expr                    (rule 55)

	'='            shift, and enter state 266


State 263

	bindings -> binding .                               (rule 56)

	let            reduce using rule 56
	data           reduce using rule 56
	ty             reduce using rule 56
	','            reduce using rule 56
	%eof           reduce using rule 56


State 264

	bindings -> bindings . ',' binding                  (rule 57)
	dec -> let identifier typeAnnotation kindAnnotation '=' expr where bindings .    (rule 138)

	let            reduce using rule 138
	data           reduce using rule 138
	ty             reduce using rule 138
	','            shift, and enter state 265
	%eof           reduce using rule 138


State 265

	bindings -> bindings ',' . binding                  (rule 57)

	id             shift, and enter state 6

	identifier     goto state 262
	binding        goto state 268

State 266

	binding -> identifier '=' . expr                    (rule 55)

	id             shift, and enter state 6
	number         shift, and enter state 40
	string         shift, and enter state 41
	boolean        shift, and enter state 42
	if             shift, and enter state 43
	match          shift, and enter state 44
	'('            shift, and enter state 45
	'['            shift, and enter state 46
	'{'            shift, and enter state 47
	'.'            shift, and enter state 48
	'\\'           shift, and enter state 49

	identifier     goto state 30
	record         goto state 31
	list           goto state 32
	tuple          goto state 33
	fnApplication  goto state 34
	controlFlow    goto state 35
	term           goto state 36
	atom           goto state 37
	matchExpr      goto state 38
	expr           goto state 267

State 267

	binding -> identifier '=' expr .                    (rule 55)
	expr -> expr . '.' identifier                       (rule 64)
	expr -> expr . '+' expr                             (rule 65)
	expr -> expr . '-' expr                             (rule 66)
	expr -> expr . '*' expr                             (rule 67)
	expr -> expr . '/' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '||' expr                            (rule 70)
	expr -> expr . '&&' expr                            (rule 71)
	expr -> expr . '==' expr                            (rule 72)
	expr -> expr . '!=' expr                            (rule 73)
	expr -> expr . '<' expr                             (rule 74)
	expr -> expr . '>' expr                             (rule 75)
	expr -> expr . '<=' expr                            (rule 76)
	expr -> expr . '>=' expr                            (rule 77)
	expr -> expr . '|>' expr                            (rule 78)
	expr -> expr . '<|' expr                            (rule 79)
	expr -> expr . '++' expr                            (rule 80)

	'+'            shift, and enter state 73
	'-'            shift, and enter state 74
	'*'            shift, and enter state 75
	'/'            shift, and enter state 76
	'^'            shift, and enter state 77
	'++'           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'<'            shift, and enter state 81
	'<='           shift, and enter state 82
	'>'            shift, and enter state 83
	'>='           shift, and enter state 84
	'||'           shift, and enter state 85
	'&&'           shift, and enter state 86
	'|>'           shift, and enter state 87
	'<|'           shift, and enter state 88
	let            reduce using rule 55
	data           reduce using rule 55
	ty             reduce using rule 55
	','            reduce using rule 55
	'.'            shift, and enter state 89
	%eof           reduce using rule 55


State 268

	bindings -> bindings ',' binding .                  (rule 57)

	let            reduce using rule 57
	data           reduce using rule 57
	ty             reduce using rule 57
	','            reduce using rule 57
	%eof           reduce using rule 57


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 146
Number of terminals: 65
Number of non-terminals: 56
Number of states: 269
